{
  "errors": [
    {
      "sourceLocation": {
        "file": "test/ScoreCheckerV2.t.sol",
        "start": 275,
        "end": 16847
      },
      "type": "Warning",
      "component": "general",
      "severity": "warning",
      "errorCode": "5574",
      "message": "Contract code size is 29202 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.",
      "formattedMessage": "Warning: Contract code size is 29202 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.\n --> test/ScoreCheckerV2.t.sol:8:1:\n  |\n8 | contract ScoreCheckerV2Test is Test {\n  | ^ (Relevant source part starts here and spans across multiple lines).\n\n"
    }
  ],
  "sources": {
    "E:/BaseBadge/onchain/lib/forge-std/src/Base.sol": [
      {
        "source_file": {
          "id": 0,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/Script.sol": [
      {
        "source_file": {
          "id": 1,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/StdAssertions.sol": [
      {
        "source_file": {
          "id": 2,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/StdChains.sol": [
      {
        "source_file": {
          "id": 3,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/StdCheats.sol": [
      {
        "source_file": {
          "id": 4,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/StdError.sol": [
      {
        "source_file": {
          "id": 5,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/StdInvariant.sol": [
      {
        "source_file": {
          "id": 6,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/StdJson.sol": [
      {
        "source_file": {
          "id": 7,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/StdMath.sol": [
      {
        "source_file": {
          "id": 8,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/StdStorage.sol": [
      {
        "source_file": {
          "id": 9,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/StdStyle.sol": [
      {
        "source_file": {
          "id": 10,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/StdToml.sol": [
      {
        "source_file": {
          "id": 11,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/StdUtils.sol": [
      {
        "source_file": {
          "id": 12,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/Test.sol": [
      {
        "source_file": {
          "id": 13,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/Vm.sol": [
      {
        "source_file": {
          "id": 14,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/console.sol": [
      {
        "source_file": {
          "id": 15,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/console2.sol": [
      {
        "source_file": {
          "id": 16,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/interfaces/IERC165.sol": [
      {
        "source_file": {
          "id": 17,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/interfaces/IERC20.sol": [
      {
        "source_file": {
          "id": 18,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/interfaces/IERC721.sol": [
      {
        "source_file": {
          "id": 19,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/interfaces/IMulticall3.sol": [
      {
        "source_file": {
          "id": 20,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/mocks/MockERC20.sol": [
      {
        "source_file": {
          "id": 21,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/mocks/MockERC721.sol": [
      {
        "source_file": {
          "id": 22,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/forge-std/src/safeconsole.sol": [
      {
        "source_file": {
          "id": 23,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": [
      {
        "source_file": {
          "id": 32,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": [
      {
        "source_file": {
          "id": 33,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": [
      {
        "source_file": {
          "id": 34,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": [
      {
        "source_file": {
          "id": 35,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": [
      {
        "source_file": {
          "id": 36,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": [
      {
        "source_file": {
          "id": 37,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/Address.sol": [
      {
        "source_file": {
          "id": 38,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": [
      {
        "source_file": {
          "id": 39,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/Strings.sol": [
      {
        "source_file": {
          "id": 40,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": [
      {
        "source_file": {
          "id": 41,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": [
      {
        "source_file": {
          "id": 42,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": [
      {
        "source_file": {
          "id": 43,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": [
      {
        "source_file": {
          "id": 44,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": [
      {
        "source_file": {
          "id": 24,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": [
      {
        "source_file": {
          "id": 25,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": [
      {
        "source_file": {
          "id": 26,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": [
      {
        "source_file": {
          "id": 27,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": [
      {
        "source_file": {
          "id": 28,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol": [
      {
        "source_file": {
          "id": 29,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol": [
      {
        "source_file": {
          "id": 30,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": [
      {
        "source_file": {
          "id": 31,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/script/Counter.s.sol": [
      {
        "source_file": {
          "id": 45,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/script/DeployScoreCheckerV2.s.sol": [
      {
        "source_file": {
          "id": 46,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/script/DeployUpgradeable.s.sol": [
      {
        "source_file": {
          "id": 47,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/script/UpgradeContract.s.sol": [
      {
        "source_file": {
          "id": 48,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/script/UpgradeToV2.s.sol": [
      {
        "source_file": {
          "id": 49,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/src/Counter.sol": [
      {
        "source_file": {
          "id": 50,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/src/ScoreCheckerUpgradeable.sol": [
      {
        "source_file": {
          "id": 51,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/src/ScoreCheckerUpgradeableV2.sol": [
      {
        "source_file": {
          "id": 52,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/test/CompileTest.t.sol": [
      {
        "source_file": {
          "id": 53,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/test/Counter.t.sol": [
      {
        "source_file": {
          "id": 54,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/test/ScoreChecker.t.sol": [
      {
        "source_file": {
          "id": 55,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/test/ScoreCheckerEIP712.t.sol": [
      {
        "source_file": {
          "id": 56,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ],
    "E:/BaseBadge/onchain/test/ScoreCheckerV2.t.sol": [
      {
        "source_file": {
          "id": 57,
          "ast": {}
        },
        "version": "0.8.23",
        "build_id": "53242a4a96b7443a",
        "profile": "default"
      }
    ]
  },
  "contracts": {
    "E:/BaseBadge/onchain/lib/forge-std/src/Base.sol": {
      "CommonBase": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Base.sol\":\"CommonBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "lib/forge-std/src/Base.sol:CommonBase",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "lib/forge-std/src/Base.sol:CommonBase",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "lib/forge-std/src/Base.sol:CommonBase",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "lib/forge-std/src/Base.sol:CommonBase",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "lib/forge-std/src/Base.sol:CommonBase",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "lib/forge-std/src/Base.sol:CommonBase",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "lib/forge-std/src/Base.sol:CommonBase",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "lib/forge-std/src/Base.sol:CommonBase",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "lib/forge-std/src/Base.sol:CommonBase",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "lib/forge-std/src/Base.sol:CommonBase",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "lib/forge-std/src/Base.sol:CommonBase",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "lib/forge-std/src/Base.sol:CommonBase",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "lib/forge-std/src/Base.sol:CommonBase",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ],
      "ScriptBase": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Base.sol\":\"ScriptBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "lib/forge-std/src/Base.sol:ScriptBase",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "lib/forge-std/src/Base.sol:ScriptBase",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "lib/forge-std/src/Base.sol:ScriptBase",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "lib/forge-std/src/Base.sol:ScriptBase",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "lib/forge-std/src/Base.sol:ScriptBase",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "lib/forge-std/src/Base.sol:ScriptBase",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "lib/forge-std/src/Base.sol:ScriptBase",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "lib/forge-std/src/Base.sol:ScriptBase",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "lib/forge-std/src/Base.sol:ScriptBase",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "lib/forge-std/src/Base.sol:ScriptBase",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "lib/forge-std/src/Base.sol:ScriptBase",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "lib/forge-std/src/Base.sol:ScriptBase",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "lib/forge-std/src/Base.sol:ScriptBase",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ],
      "TestBase": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Base.sol\":\"TestBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "lib/forge-std/src/Base.sol:TestBase",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "lib/forge-std/src/Base.sol:TestBase",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "lib/forge-std/src/Base.sol:TestBase",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "lib/forge-std/src/Base.sol:TestBase",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "lib/forge-std/src/Base.sol:TestBase",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "lib/forge-std/src/Base.sol:TestBase",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "lib/forge-std/src/Base.sol:TestBase",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "lib/forge-std/src/Base.sol:TestBase",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "lib/forge-std/src/Base.sol:TestBase",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "lib/forge-std/src/Base.sol:TestBase",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "lib/forge-std/src/Base.sol:TestBase",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "lib/forge-std/src/Base.sol:TestBase",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "lib/forge-std/src/Base.sol:TestBase",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/Script.sol": {
      "Script": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_SCRIPT",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Script.sol\":\"Script\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "lib/forge-std/src/Script.sol:Script",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 2758,
                  "contract": "lib/forge-std/src/Script.sol:Script",
                  "label": "stdChainsInitialized",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2779,
                  "contract": "lib/forge-std/src/Script.sol:Script",
                  "label": "chains",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)"
                },
                {
                  "astId": 2783,
                  "contract": "lib/forge-std/src/Script.sol:Script",
                  "label": "defaultRpcUrls",
                  "offset": 0,
                  "slot": "10",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
                },
                {
                  "astId": 2787,
                  "contract": "lib/forge-std/src/Script.sol:Script",
                  "label": "idToAlias",
                  "offset": 0,
                  "slot": "11",
                  "type": "t_mapping(t_uint256,t_string_storage)"
                },
                {
                  "astId": 2790,
                  "contract": "lib/forge-std/src/Script.sol:Script",
                  "label": "fallbackToDefaultRpcUrls",
                  "offset": 0,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 3593,
                  "contract": "lib/forge-std/src/Script.sol:Script",
                  "label": "gasMeteringOff",
                  "offset": 1,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 112,
                  "contract": "lib/forge-std/src/Script.sol:Script",
                  "label": "IS_SCRIPT",
                  "offset": 2,
                  "slot": "12",
                  "type": "t_bool"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_mapping(t_string_memory_ptr,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => struct StdChains.Chain)",
                  "numberOfBytes": "32",
                  "value": "t_struct(Chain)2774_storage"
                },
                "t_mapping(t_uint256,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_string_memory_ptr": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(Chain)2774_storage": {
                  "encoding": "inplace",
                  "label": "struct StdChains.Chain",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 2767,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "name",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2769,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "chainId",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 2771,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "chainAlias",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2773,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "rpcUrl",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_string_storage"
                    }
                  ]
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "lib/forge-std/src/Script.sol:Script",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_SCRIPT()": "f8ccbf47"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/StdAssertions.sol": {
      "StdAssertions": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "failed",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "event",
                "name": "log",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_address",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes32",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_int",
                "inputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_address",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes32",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_string",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_string",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_uint",
                "inputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "logs",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdAssertions.sol\":\"StdAssertions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 257,
                  "contract": "lib/forge-std/src/StdAssertions.sol:StdAssertions",
                  "label": "_failed",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_bool"
                }
              ],
              "types": {
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "failed()": "ba414fa6"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/StdChains.sol": {
      "StdChains": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"StdChains provides information about EVM compatible chains that can be used in scripts/tests. For each chain, the chain's name, chain ID, and a default RPC URL are provided. Chains are identified by their alias, which is the same as the alias in the `[rpc_endpoints]` section of the `foundry.toml` file. For best UX, ensure the alias in the `foundry.toml` file match the alias used in this contract, which can be found as the first argument to the `setChainWithDefaultRpcUrl` call in the `initializeStdChains` function. There are two main ways to use this contract:   1. Set a chain with `setChain(string memory chainAlias, ChainData memory chain)` or      `setChain(string memory chainAlias, Chain memory chain)`   2. Get a chain with `getChain(string memory chainAlias)` or `getChain(uint256 chainId)`. The first time either of those are used, chains are initialized with the default set of RPC URLs. This is done in `initializeStdChains`, which uses `setChainWithDefaultRpcUrl`. Defaults are recorded in `defaultRpcUrls`. The `setChain` function is straightforward, and it simply saves off the given chain data. The `getChain` methods use `getChainWithUpdatedRpcUrl` to return a chain. For example, let's say we want to retrieve the RPC URL for `mainnet`:   - If you have specified data with `setChain`, it will return that.   - If you have configured a mainnet RPC URL in `foundry.toml`, it will return the URL, provided it     is valid (e.g. a URL is specified, or an environment variable is given and exists).   - If neither of the above conditions is met, the default data is returned. Summarizing the above, the prioritization hierarchy is `setChain` -> `foundry.toml` -> environment variable -> defaults.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdChains.sol\":\"StdChains\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 2758,
                  "contract": "lib/forge-std/src/StdChains.sol:StdChains",
                  "label": "stdChainsInitialized",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_bool"
                },
                {
                  "astId": 2779,
                  "contract": "lib/forge-std/src/StdChains.sol:StdChains",
                  "label": "chains",
                  "offset": 0,
                  "slot": "1",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)"
                },
                {
                  "astId": 2783,
                  "contract": "lib/forge-std/src/StdChains.sol:StdChains",
                  "label": "defaultRpcUrls",
                  "offset": 0,
                  "slot": "2",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
                },
                {
                  "astId": 2787,
                  "contract": "lib/forge-std/src/StdChains.sol:StdChains",
                  "label": "idToAlias",
                  "offset": 0,
                  "slot": "3",
                  "type": "t_mapping(t_uint256,t_string_storage)"
                },
                {
                  "astId": 2790,
                  "contract": "lib/forge-std/src/StdChains.sol:StdChains",
                  "label": "fallbackToDefaultRpcUrls",
                  "offset": 0,
                  "slot": "4",
                  "type": "t_bool"
                }
              ],
              "types": {
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_mapping(t_string_memory_ptr,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => struct StdChains.Chain)",
                  "numberOfBytes": "32",
                  "value": "t_struct(Chain)2774_storage"
                },
                "t_mapping(t_uint256,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_string_memory_ptr": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(Chain)2774_storage": {
                  "encoding": "inplace",
                  "label": "struct StdChains.Chain",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 2767,
                      "contract": "lib/forge-std/src/StdChains.sol:StdChains",
                      "label": "name",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2769,
                      "contract": "lib/forge-std/src/StdChains.sol:StdChains",
                      "label": "chainId",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 2771,
                      "contract": "lib/forge-std/src/StdChains.sol:StdChains",
                      "label": "chainAlias",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2773,
                      "contract": "lib/forge-std/src/StdChains.sol:StdChains",
                      "label": "rpcUrl",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_string_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/StdCheats.sol": {
      "StdCheats": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdCheats.sol\":\"StdCheats\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 3593,
                  "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                  "label": "gasMeteringOff",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_bool"
                },
                {
                  "astId": 5630,
                  "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "1",
                  "type": "t_struct(StdStorage)7546_storage"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "lib/forge-std/src/StdCheats.sol:StdCheats",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ],
      "StdCheatsSafe": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdCheats.sol\":\"StdCheatsSafe\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 3593,
                  "contract": "lib/forge-std/src/StdCheats.sol:StdCheatsSafe",
                  "label": "gasMeteringOff",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_bool"
                }
              ],
              "types": {
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/StdError.sol": {
      "stdError": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "arithmeticError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "assertionError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "divisionError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "encodeStorageError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "enumConversionError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "indexOOBError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "memOverflowError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "popError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "zeroVarError",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"arithmeticError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"divisionError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encodeStorageError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enumConversionError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"indexOOBError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"memOverflowError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"popError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zeroVarError\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdError.sol\":\"stdError\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523461001a5761030d908161001f823930815050f35b5f80fdfe60806040908082526004361015610014575f80fd5b5f3560e01c90816305ee8612146102325750806310332977146101fe5780631de45560146101ca5780638995290f14610196578063986c5f6814610162578063b22dc54d1461012e578063b67689da146100fa578063d160e4de146100c65763fa784a4414610081575f80fd5b5f3660031901126100c257806100be915190634e487b7160e01b602083015260126024830152602482526100b482610260565b5191829182610290565b0390f35b5f80fd5b505f3660031901126100c257806100be915190634e487b7160e01b602083015260226024830152602482526100b482610260565b505f3660031901126100c257806100be915190634e487b7160e01b602083015260516024830152602482526100b482610260565b505f3660031901126100c257806100be915190634e487b7160e01b602083015260316024830152602482526100b482610260565b505f3660031901126100c257806100be915190634e487b7160e01b602083015260416024830152602482526100b482610260565b505f3660031901126100c257806100be915190634e487b7160e01b602083015260116024830152602482526100b482610260565b505f3660031901126100c257806100be915190634e487b7160e01b602083015260216024830152602482526100b482610260565b505f3660031901126100c257806100be915190634e487b7160e01b602083015260016024830152602482526100b482610260565b90505f3660031901126100c2576100be91634e487b7160e01b602083015260326024830152602482526100b4825b6060810190811067ffffffffffffffff82111761027c57604052565b634e487b7160e01b5f52604160045260245ffd5b602080825282518183018190529093925f5b8281106102c357505060409293505f838284010152601f8019910116010190565b8181018601518482016040015285016102a256fea2646970667358221220567d3d0827d630bd78095eb19e5dc49038c4d2a79b170206036cb3c75622f2b664736f6c63430008170033",
                "sourceMap": "162:850:5:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "60806040908082526004361015610014575f80fd5b5f3560e01c90816305ee8612146102325750806310332977146101fe5780631de45560146101ca5780638995290f14610196578063986c5f6814610162578063b22dc54d1461012e578063b67689da146100fa578063d160e4de146100c65763fa784a4414610081575f80fd5b5f3660031901126100c257806100be915190634e487b7160e01b602083015260126024830152602482526100b482610260565b5191829182610290565b0390f35b5f80fd5b505f3660031901126100c257806100be915190634e487b7160e01b602083015260226024830152602482526100b482610260565b505f3660031901126100c257806100be915190634e487b7160e01b602083015260516024830152602482526100b482610260565b505f3660031901126100c257806100be915190634e487b7160e01b602083015260316024830152602482526100b482610260565b505f3660031901126100c257806100be915190634e487b7160e01b602083015260416024830152602482526100b482610260565b505f3660031901126100c257806100be915190634e487b7160e01b602083015260116024830152602482526100b482610260565b505f3660031901126100c257806100be915190634e487b7160e01b602083015260216024830152602482526100b482610260565b505f3660031901126100c257806100be915190634e487b7160e01b602083015260016024830152602482526100b482610260565b90505f3660031901126100c2576100be91634e487b7160e01b602083015260326024830152602482526100b4825b6060810190811067ffffffffffffffff82111761027c57604052565b634e487b7160e01b5f52604160045260245ffd5b602080825282518183018190529093925f5b8281106102c357505060409293505f838284010152601f8019910116010190565b8181018601518482016040015285016102a256fea2646970667358221220567d3d0827d630bd78095eb19e5dc49038c4d2a79b170206036cb3c75622f2b664736f6c63430008170033",
                "sourceMap": "162:850:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;162:850:5;;;;;;;;778:47;;;;408;;;;450:4;408:47;;;162:850;408:47;;;;;;:::i;:::-;162:850;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;162:850:5;;-1:-1:-1;;162:850:5;;;;;;;;778:47;;;;601;;;;643:4;601:47;;;162:850;601:47;;;;;;:::i;162:850::-;-1:-1:-1;162:850:5;;-1:-1:-1;;162:850:5;;;;;;;;778:47;;;;962;;;;1004:4;962:47;;;162:850;962:47;;;;;;:::i;162:850::-;-1:-1:-1;162:850:5;;-1:-1:-1;;162:850:5;;;;;;;;778:47;;;;687;;;;729:4;687:47;;;162:850;687:47;;;;;;:::i;162:850::-;-1:-1:-1;162:850:5;;-1:-1:-1;;162:850:5;;;;;;;;778:47;;;;872;;;;914:4;872:47;;;162:850;872:47;;;;;;:::i;162:850::-;-1:-1:-1;162:850:5;;-1:-1:-1;;162:850:5;;;;;;;;778:47;;;;317;;;;359:4;317:47;;;162:850;317:47;;;;;;:::i;162:850::-;-1:-1:-1;162:850:5;;-1:-1:-1;;162:850:5;;;;;;;;778:47;;;;505;;;;547:4;505:47;;;162:850;505:47;;;;;;:::i;162:850::-;-1:-1:-1;162:850:5;;-1:-1:-1;;162:850:5;;;;;;;;778:47;;;;224;;;;266:4;224:47;;;162:850;224:47;;;;;;:::i;162:850::-;;-1:-1:-1;162:850:5;;-1:-1:-1;;162:850:5;;;;;778:47;;;;;;;;820:4;778:47;;;162:850;778:47;;;;;162:850;;;;;;;;;;;;;;;:::o;:::-;778:47;;;162:850;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;162:850:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "arithmeticError()": "8995290f",
                "assertionError()": "10332977",
                "divisionError()": "fa784a44",
                "encodeStorageError()": "d160e4de",
                "enumConversionError()": "1de45560",
                "indexOOBError()": "05ee8612",
                "memOverflowError()": "986c5f68",
                "popError()": "b22dc54d",
                "zeroVarError()": "b67689da"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/StdInvariant.sol": {
      "StdInvariant": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "excludeArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifactSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "components": [
                      {
                        "name": "artifact",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetInterfaces",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedInterfaces_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "artifacts",
                        "type": "string[]",
                        "internalType": "string[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdInvariant.sol\":\"StdInvariant\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 6504,
                  "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                  "label": "_excludedContracts",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6507,
                  "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                  "label": "_excludedSenders",
                  "offset": 0,
                  "slot": "1",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6510,
                  "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                  "label": "_targetedContracts",
                  "offset": 0,
                  "slot": "2",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6513,
                  "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                  "label": "_targetedSenders",
                  "offset": 0,
                  "slot": "3",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6516,
                  "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                  "label": "_excludedArtifacts",
                  "offset": 0,
                  "slot": "4",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6519,
                  "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                  "label": "_targetedArtifacts",
                  "offset": 0,
                  "slot": "5",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6523,
                  "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                  "label": "_targetedArtifactSelectors",
                  "offset": 0,
                  "slot": "6",
                  "type": "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage"
                },
                {
                  "astId": 6527,
                  "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                  "label": "_excludedSelectors",
                  "offset": 0,
                  "slot": "7",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6531,
                  "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                  "label": "_targetedSelectors",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6535,
                  "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                  "label": "_targetedInterfaces",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_address)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "address[]",
                  "numberOfBytes": "32",
                  "base": "t_address"
                },
                "t_array(t_bytes4)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes4[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes4"
                },
                "t_array(t_string_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "string[]",
                  "numberOfBytes": "32",
                  "base": "t_string_storage"
                },
                "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzArtifactSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzArtifactSelector)6495_storage"
                },
                "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzInterface[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzInterface)6501_storage"
                },
                "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzSelector)6489_storage"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(FuzzArtifactSelector)6495_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzArtifactSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6491,
                      "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                      "label": "artifact",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 6494,
                      "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzInterface)6501_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzInterface",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6497,
                      "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6500,
                      "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                      "label": "artifacts",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_string_storage)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzSelector)6489_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6485,
                      "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6488,
                      "contract": "lib/forge-std/src/StdInvariant.sol:StdInvariant",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "excludeArtifacts()": "b5508aa9",
                "excludeContracts()": "e20c9f71",
                "excludeSelectors()": "b0464fdc",
                "excludeSenders()": "1ed7831c",
                "targetArtifactSelectors()": "66d9a9a0",
                "targetArtifacts()": "85226c81",
                "targetContracts()": "3f7286f4",
                "targetInterfaces()": "2ade3880",
                "targetSelectors()": "916a17c6",
                "targetSenders()": "3e5e3c23"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/StdJson.sol": {
      "stdJson": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdJson.sol\":\"stdJson\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212203efd78596c8b6d985503fbdcb8fb68e886db87f9e468d5e7fc7e128a866eea9564736f6c63430008170033",
                "sourceMap": "610:5612:7:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea26469706673582212203efd78596c8b6d985503fbdcb8fb68e886db87f9e468d5e7fc7e128a866eea9564736f6c63430008170033",
                "sourceMap": "610:5612:7:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/StdMath.sol": {
      "stdMath": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdMath.sol\":\"stdMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220b3e368f437d8f15fe4788a963f99a192c98f53b68c7342d4fd4815c5d9c7ce0f64736f6c63430008170033",
                "sourceMap": "65:1294:8:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea2646970667358221220b3e368f437d8f15fe4788a963f99a192c98f53b68c7342d4fd4815c5d9c7ce0f64736f6c63430008170033",
                "sourceMap": "65:1294:8:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/StdStorage.sol": {
      "stdStorage": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdStorage.sol\":\"stdStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220465734446767227b51777f40a735a2319a1fe6f0965b4284bbb5128992b5078d64736f6c63430008170033",
                "sourceMap": "12760:5081:9:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea2646970667358221220465734446767227b51777f40a735a2319a1fe6f0965b4284bbb5128992b5078d64736f6c63430008170033",
                "sourceMap": "12760:5081:9:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ],
      "stdStorageSafe": [
        {
          "contract": {
            "abi": [
              {
                "type": "event",
                "name": "SlotFound",
                "inputs": [
                  {
                    "name": "who",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  },
                  {
                    "name": "fsig",
                    "type": "bytes4",
                    "indexed": false,
                    "internalType": "bytes4"
                  },
                  {
                    "name": "keysHash",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  },
                  {
                    "name": "slot",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "WARNING_UninitedSlot",
                "inputs": [
                  {
                    "name": "who",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  },
                  {
                    "name": "slot",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdStorage.sol\":\"stdStorageSafe\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212202e610177d196fead5b5023258d989ca9ff5f281f70995e439b4ac01fe11161b264736f6c63430008170033",
                "sourceMap": "450:12308:9:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea26469706673582212202e610177d196fead5b5023258d989ca9ff5f281f70995e439b4ac01fe11161b264736f6c63430008170033",
                "sourceMap": "450:12308:9:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/StdStyle.sol": {
      "StdStyle": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdStyle.sol\":\"StdStyle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122057616e79f09bdd094a6a686f743eb65a9141c2c50f7fd75d563b00ac602c7bb764736f6c63430008170033",
                "sourceMap": "100:10361:10:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea264697066735822122057616e79f09bdd094a6a686f743eb65a9141c2c50f7fd75d563b00ac602c7bb764736f6c63430008170033",
                "sourceMap": "100:10361:10:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/StdToml.sol": {
      "stdToml": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdToml.sol\":\"stdToml\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220c5bc136bc4fac53a3ebd40b57f05224eafed5131bfe7b8d4936439070a8f641264736f6c63430008170033",
                "sourceMap": "610:5612:11:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea2646970667358221220c5bc136bc4fac53a3ebd40b57f05224eafed5131bfe7b8d4936439070a8f641264736f6c63430008170033",
                "sourceMap": "610:5612:11:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/StdUtils.sol": {
      "StdUtils": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdUtils.sol\":\"StdUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/Test.sol": {
      "Test": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_TEST",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "failed",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifactSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "components": [
                      {
                        "name": "artifact",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetInterfaces",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedInterfaces_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "artifacts",
                        "type": "string[]",
                        "internalType": "string[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "event",
                "name": "log",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_address",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes32",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_int",
                "inputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_address",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes32",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_string",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_string",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_uint",
                "inputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "logs",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Test.sol\":\"Test\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 257,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "_failed",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2758,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "stdChainsInitialized",
                  "offset": 1,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2779,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "chains",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)"
                },
                {
                  "astId": 2783,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "defaultRpcUrls",
                  "offset": 0,
                  "slot": "10",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
                },
                {
                  "astId": 2787,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "idToAlias",
                  "offset": 0,
                  "slot": "11",
                  "type": "t_mapping(t_uint256,t_string_storage)"
                },
                {
                  "astId": 2790,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "fallbackToDefaultRpcUrls",
                  "offset": 0,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 3593,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "gasMeteringOff",
                  "offset": 1,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 5630,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "13",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 6504,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "_excludedContracts",
                  "offset": 0,
                  "slot": "21",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6507,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "_excludedSenders",
                  "offset": 0,
                  "slot": "22",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6510,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "_targetedContracts",
                  "offset": 0,
                  "slot": "23",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6513,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "_targetedSenders",
                  "offset": 0,
                  "slot": "24",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6516,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "_excludedArtifacts",
                  "offset": 0,
                  "slot": "25",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6519,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "_targetedArtifacts",
                  "offset": 0,
                  "slot": "26",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6523,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "_targetedArtifactSelectors",
                  "offset": 0,
                  "slot": "27",
                  "type": "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage"
                },
                {
                  "astId": 6527,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "_excludedSelectors",
                  "offset": 0,
                  "slot": "28",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6531,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "_targetedSelectors",
                  "offset": 0,
                  "slot": "29",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6535,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "_targetedInterfaces",
                  "offset": 0,
                  "slot": "30",
                  "type": "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage"
                },
                {
                  "astId": 12145,
                  "contract": "lib/forge-std/src/Test.sol:Test",
                  "label": "IS_TEST",
                  "offset": 0,
                  "slot": "31",
                  "type": "t_bool"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_address)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "address[]",
                  "numberOfBytes": "32",
                  "base": "t_address"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_array(t_bytes4)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes4[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes4"
                },
                "t_array(t_string_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "string[]",
                  "numberOfBytes": "32",
                  "base": "t_string_storage"
                },
                "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzArtifactSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzArtifactSelector)6495_storage"
                },
                "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzInterface[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzInterface)6501_storage"
                },
                "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzSelector)6489_storage"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_mapping(t_string_memory_ptr,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => struct StdChains.Chain)",
                  "numberOfBytes": "32",
                  "value": "t_struct(Chain)2774_storage"
                },
                "t_mapping(t_uint256,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_string_memory_ptr": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(Chain)2774_storage": {
                  "encoding": "inplace",
                  "label": "struct StdChains.Chain",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 2767,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "name",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2769,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "chainId",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 2771,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "chainAlias",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2773,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "rpcUrl",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_string_storage"
                    }
                  ]
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(FuzzArtifactSelector)6495_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzArtifactSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6491,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "artifact",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 6494,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzInterface)6501_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzInterface",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6497,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6500,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "artifacts",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_string_storage)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzSelector)6489_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6485,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6488,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "lib/forge-std/src/Test.sol:Test",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_TEST()": "fa7626d4",
                "excludeArtifacts()": "b5508aa9",
                "excludeContracts()": "e20c9f71",
                "excludeSelectors()": "b0464fdc",
                "excludeSenders()": "1ed7831c",
                "failed()": "ba414fa6",
                "targetArtifactSelectors()": "66d9a9a0",
                "targetArtifacts()": "85226c81",
                "targetContracts()": "3f7286f4",
                "targetInterfaces()": "2ade3880",
                "targetSelectors()": "916a17c6",
                "targetSenders()": "3e5e3c23"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/Vm.sol": {
      "Vm": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "accesses",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "readSlots",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "writeSlots",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "activeFork",
                "inputs": [],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "addr",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "keyAddr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "allowCheatcodes",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertFalse",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertFalse",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertTrue",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertTrue",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assume",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "blobBaseFee",
                "inputs": [
                  {
                    "name": "newBlobBaseFee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "blobhashes",
                "inputs": [
                  {
                    "name": "hashes",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "breakpoint",
                "inputs": [
                  {
                    "name": "char",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "breakpoint",
                "inputs": [
                  {
                    "name": "char",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "broadcast",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "broadcast",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "broadcast",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "chainId",
                "inputs": [
                  {
                    "name": "newChainId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "clearMockedCalls",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "closeFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "coinbase",
                "inputs": [
                  {
                    "name": "newCoinbase",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "computeCreate2Address",
                "inputs": [
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "initCodeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "computeCreate2Address",
                "inputs": [
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "initCodeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "deployer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "computeCreateAddress",
                "inputs": [
                  {
                    "name": "deployer",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "nonce",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "copyFile",
                "inputs": [
                  {
                    "name": "from",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "to",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "copied",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "recursive",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createFork",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createFork",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createFork",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "txHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createSelectFork",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createSelectFork",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "txHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createSelectFork",
                "inputs": [
                  {
                    "name": "urlOrAlias",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createWallet",
                "inputs": [
                  {
                    "name": "walletLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createWallet",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createWallet",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "walletLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deal",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "newBalance",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deleteSnapshot",
                "inputs": [
                  {
                    "name": "snapshotId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deleteSnapshots",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "derivationPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "language",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "language",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "derivationPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "difficulty",
                "inputs": [
                  {
                    "name": "newDifficulty",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "dumpState",
                "inputs": [
                  {
                    "name": "pathToStateJson",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "ensNamehash",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "envAddress",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envAddress",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBool",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBool",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes32",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes32",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envExists",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envInt",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envInt",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envString",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envString",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envUint",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envUint",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "etch",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "newRuntimeBytecode",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "eth_getLogs",
                "inputs": [
                  {
                    "name": "fromBlock",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "toBlock",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "topics",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "logs",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.EthGetLogs[]",
                    "components": [
                      {
                        "name": "emitter",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "topics",
                        "type": "bytes32[]",
                        "internalType": "bytes32[]"
                      },
                      {
                        "name": "data",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "blockHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "blockNumber",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "transactionHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "transactionIndex",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "logIndex",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "removed",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "exists",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "gas",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "gas",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCallMinGas",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "minGas",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectCallMinGas",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "minGas",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "count",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmit",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmit",
                "inputs": [
                  {
                    "name": "checkTopic1",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic2",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic3",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkData",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmit",
                "inputs": [
                  {
                    "name": "checkTopic1",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic2",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkTopic3",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "checkData",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "emitter",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectEmit",
                "inputs": [
                  {
                    "name": "emitter",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [
                  {
                    "name": "revertData",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [
                  {
                    "name": "revertData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectRevert",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectSafeMemory",
                "inputs": [
                  {
                    "name": "min",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "max",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "expectSafeMemoryCall",
                "inputs": [
                  {
                    "name": "min",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "max",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "fee",
                "inputs": [
                  {
                    "name": "newBasefee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "ffi",
                "inputs": [
                  {
                    "name": "commandInput",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "fsMetadata",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "metadata",
                    "type": "tuple",
                    "internalType": "struct VmSafe.FsMetadata",
                    "components": [
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "length",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "readOnly",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "modified",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "accessed",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "created",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlobBaseFee",
                "inputs": [],
                "outputs": [
                  {
                    "name": "blobBaseFee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlobhashes",
                "inputs": [],
                "outputs": [
                  {
                    "name": "hashes",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlockNumber",
                "inputs": [],
                "outputs": [
                  {
                    "name": "height",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlockTimestamp",
                "inputs": [],
                "outputs": [
                  {
                    "name": "timestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "creationBytecode",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getDeployedCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "runtimeBytecode",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getLabel",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "currentLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getMappingKeyAndParentOf",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "elementSlot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "found",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "key",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "parent",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "getMappingLength",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "mappingSlot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "length",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "getMappingSlotAt",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "mappingSlot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "idx",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "getNonce",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "nonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getNonce",
                "inputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "nonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "getRecordedLogs",
                "inputs": [],
                "outputs": [
                  {
                    "name": "logs",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.Log[]",
                    "components": [
                      {
                        "name": "topics",
                        "type": "bytes32[]",
                        "internalType": "bytes32[]"
                      },
                      {
                        "name": "data",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "emitter",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "indexOf",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "isContext",
                "inputs": [
                  {
                    "name": "context",
                    "type": "uint8",
                    "internalType": "enum VmSafe.ForgeContext"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "isDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "isFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "isPersistent",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "persistent",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "keyExists",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "keyExistsJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "keyExistsToml",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "label",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "newLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "lastCallGas",
                "inputs": [],
                "outputs": [
                  {
                    "name": "gas",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Gas",
                    "components": [
                      {
                        "name": "gasLimit",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "gasTotalUsed",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "gasMemoryUsed",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "gasRefunded",
                        "type": "int64",
                        "internalType": "int64"
                      },
                      {
                        "name": "gasRemaining",
                        "type": "uint64",
                        "internalType": "uint64"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "load",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "loadAllocs",
                "inputs": [
                  {
                    "name": "pathToAllocsJson",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "makePersistent",
                "inputs": [
                  {
                    "name": "accounts",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "makePersistent",
                "inputs": [
                  {
                    "name": "account0",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "account1",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "makePersistent",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "makePersistent",
                "inputs": [
                  {
                    "name": "account0",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "account1",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "account2",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "returnData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCall",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "returnData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCallRevert",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "msgValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "revertData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "mockCallRevert",
                "inputs": [
                  {
                    "name": "callee",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "revertData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "parseAddress",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseBool",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseBytes",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseBytes32",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseInt",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonAddress",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonAddressArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBool",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBoolArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytes",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytes32",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytes32Array",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytesArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonInt",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonIntArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonKeys",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "keys",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonString",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonStringArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonUint",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonUintArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseToml",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseToml",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlAddress",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlAddressArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBool",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBoolArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytes",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytes32",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytes32Array",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytesArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlInt",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlIntArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlKeys",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "keys",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlString",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlStringArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlUint",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlUintArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseUint",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "pauseGasMetering",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "prank",
                "inputs": [
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "txOrigin",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "prank",
                "inputs": [
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "prevrandao",
                "inputs": [
                  {
                    "name": "newPrevrandao",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "prevrandao",
                "inputs": [
                  {
                    "name": "newPrevrandao",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "projectRoot",
                "inputs": [],
                "outputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "prompt",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptAddress",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptSecret",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptSecretUint",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptUint",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "randomAddress",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "randomUint",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "randomUint",
                "inputs": [
                  {
                    "name": "min",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "max",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "readCallers",
                "inputs": [],
                "outputs": [
                  {
                    "name": "callerMode",
                    "type": "uint8",
                    "internalType": "enum VmSafe.CallerMode"
                  },
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "txOrigin",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "readDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "maxDepth",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "entries",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DirEntry[]",
                    "components": [
                      {
                        "name": "errorMessage",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "path",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "maxDepth",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "followLinks",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "entries",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DirEntry[]",
                    "components": [
                      {
                        "name": "errorMessage",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "path",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "entries",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DirEntry[]",
                    "components": [
                      {
                        "name": "errorMessage",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "path",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readFileBinary",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readLine",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "line",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readLink",
                "inputs": [
                  {
                    "name": "linkPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "targetPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "record",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "recordLogs",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rememberKey",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "keyAddr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "removeDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "recursive",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "removeFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "replace",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "from",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "to",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "resetNonce",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "resumeGasMetering",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "revertTo",
                "inputs": [
                  {
                    "name": "snapshotId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "revertToAndDelete",
                "inputs": [
                  {
                    "name": "snapshotId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "revokePersistent",
                "inputs": [
                  {
                    "name": "accounts",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "revokePersistent",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "roll",
                "inputs": [
                  {
                    "name": "newHeight",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rollFork",
                "inputs": [
                  {
                    "name": "txHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rollFork",
                "inputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rollFork",
                "inputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rollFork",
                "inputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "txHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rpc",
                "inputs": [
                  {
                    "name": "method",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "params",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rpcUrl",
                "inputs": [
                  {
                    "name": "rpcAlias",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "rpcUrlStructs",
                "inputs": [],
                "outputs": [
                  {
                    "name": "urls",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.Rpc[]",
                    "components": [
                      {
                        "name": "key",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "url",
                        "type": "string",
                        "internalType": "string"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "rpcUrls",
                "inputs": [],
                "outputs": [
                  {
                    "name": "urls",
                    "type": "string[2][]",
                    "internalType": "string[2][]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "selectFork",
                "inputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeAddress",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeAddress",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBool",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBool",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes32",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes32",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeInt",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeInt",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeJson",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeString",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeString",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeUint",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeUint",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeUintToHex",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setEnv",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setNonce",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "newNonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setNonceUnsafe",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "newNonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "signP256",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "skip",
                "inputs": [
                  {
                    "name": "skipTest",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "sleep",
                "inputs": [
                  {
                    "name": "duration",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "snapshot",
                "inputs": [],
                "outputs": [
                  {
                    "name": "snapshotId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "split",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delimiter",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "outputs",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "startBroadcast",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startBroadcast",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startBroadcast",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startMappingRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startPrank",
                "inputs": [
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startPrank",
                "inputs": [
                  {
                    "name": "msgSender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "txOrigin",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startStateDiffRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopAndReturnStateDiff",
                "inputs": [],
                "outputs": [
                  {
                    "name": "accountAccesses",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.AccountAccess[]",
                    "components": [
                      {
                        "name": "chainInfo",
                        "type": "tuple",
                        "internalType": "struct VmSafe.ChainInfo",
                        "components": [
                          {
                            "name": "forkId",
                            "type": "uint256",
                            "internalType": "uint256"
                          },
                          {
                            "name": "chainId",
                            "type": "uint256",
                            "internalType": "uint256"
                          }
                        ]
                      },
                      {
                        "name": "kind",
                        "type": "uint8",
                        "internalType": "enum VmSafe.AccountAccessKind"
                      },
                      {
                        "name": "account",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "accessor",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "initialized",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "oldBalance",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "newBalance",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "deployedCode",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "value",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "data",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "reverted",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "storageAccesses",
                        "type": "tuple[]",
                        "internalType": "struct VmSafe.StorageAccess[]",
                        "components": [
                          {
                            "name": "account",
                            "type": "address",
                            "internalType": "address"
                          },
                          {
                            "name": "slot",
                            "type": "bytes32",
                            "internalType": "bytes32"
                          },
                          {
                            "name": "isWrite",
                            "type": "bool",
                            "internalType": "bool"
                          },
                          {
                            "name": "previousValue",
                            "type": "bytes32",
                            "internalType": "bytes32"
                          },
                          {
                            "name": "newValue",
                            "type": "bytes32",
                            "internalType": "bytes32"
                          },
                          {
                            "name": "reverted",
                            "type": "bool",
                            "internalType": "bool"
                          }
                        ]
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopBroadcast",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopExpectSafeMemory",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopMappingRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopPrank",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "store",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "toBase64",
                "inputs": [
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toBase64",
                "inputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toBase64URL",
                "inputs": [
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toBase64URL",
                "inputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toLowercase",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toUppercase",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "transact",
                "inputs": [
                  {
                    "name": "forkId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "txHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "transact",
                "inputs": [
                  {
                    "name": "txHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "trim",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "tryFfi",
                "inputs": [
                  {
                    "name": "commandInput",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "tuple",
                    "internalType": "struct VmSafe.FfiResult",
                    "components": [
                      {
                        "name": "exitCode",
                        "type": "int32",
                        "internalType": "int32"
                      },
                      {
                        "name": "stdout",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "stderr",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "txGasPrice",
                "inputs": [
                  {
                    "name": "newGasPrice",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "unixTime",
                "inputs": [],
                "outputs": [
                  {
                    "name": "milliseconds",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "warp",
                "inputs": [
                  {
                    "name": "newTimestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeFileBinary",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeLine",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeToml",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeToml",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uin256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top of the test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "accesses(address)": "65bc9481",
                "activeFork()": "2f103f22",
                "addr(uint256)": "ffa18649",
                "allowCheatcodes(address)": "ea060291",
                "assertApproxEqAbs(int256,int256,uint256)": "240f839d",
                "assertApproxEqAbs(int256,int256,uint256,string)": "8289e621",
                "assertApproxEqAbs(uint256,uint256,uint256)": "16d207c6",
                "assertApproxEqAbs(uint256,uint256,uint256,string)": "f710b062",
                "assertApproxEqAbsDecimal(int256,int256,uint256,uint256)": "3d5bc8bc",
                "assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)": "6a5066d4",
                "assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)": "045c55ce",
                "assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)": "60429eb2",
                "assertApproxEqRel(int256,int256,uint256)": "fea2d14f",
                "assertApproxEqRel(int256,int256,uint256,string)": "ef277d72",
                "assertApproxEqRel(uint256,uint256,uint256)": "8cf25ef4",
                "assertApproxEqRel(uint256,uint256,uint256,string)": "1ecb7d33",
                "assertApproxEqRelDecimal(int256,int256,uint256,uint256)": "abbf21cc",
                "assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)": "fccc11c4",
                "assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)": "21ed2977",
                "assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)": "82d6c8fd",
                "assertEq(address,address)": "515361f6",
                "assertEq(address,address,string)": "2f2769d1",
                "assertEq(address[],address[])": "3868ac34",
                "assertEq(address[],address[],string)": "3e9173c5",
                "assertEq(bool,bool)": "f7fe3477",
                "assertEq(bool,bool,string)": "4db19e7e",
                "assertEq(bool[],bool[])": "707df785",
                "assertEq(bool[],bool[],string)": "e48a8f8d",
                "assertEq(bytes,bytes)": "97624631",
                "assertEq(bytes,bytes,string)": "e24fed00",
                "assertEq(bytes32,bytes32)": "7c84c69b",
                "assertEq(bytes32,bytes32,string)": "c1fa1ed0",
                "assertEq(bytes32[],bytes32[])": "0cc9ee84",
                "assertEq(bytes32[],bytes32[],string)": "e03e9177",
                "assertEq(bytes[],bytes[])": "e5fb9b4a",
                "assertEq(bytes[],bytes[],string)": "f413f0b6",
                "assertEq(int256,int256)": "fe74f05b",
                "assertEq(int256,int256,string)": "714a2f13",
                "assertEq(int256[],int256[])": "711043ac",
                "assertEq(int256[],int256[],string)": "191f1b30",
                "assertEq(string,string)": "f320d963",
                "assertEq(string,string,string)": "36f656d8",
                "assertEq(string[],string[])": "cf1c049c",
                "assertEq(string[],string[],string)": "eff6b27d",
                "assertEq(uint256,uint256)": "98296c54",
                "assertEq(uint256,uint256,string)": "88b44c85",
                "assertEq(uint256[],uint256[])": "975d5a12",
                "assertEq(uint256[],uint256[],string)": "5d18c73a",
                "assertEqDecimal(int256,int256,uint256)": "48016c04",
                "assertEqDecimal(int256,int256,uint256,string)": "7e77b0c5",
                "assertEqDecimal(uint256,uint256,uint256)": "27af7d9c",
                "assertEqDecimal(uint256,uint256,uint256,string)": "d0cbbdef",
                "assertFalse(bool)": "a5982885",
                "assertFalse(bool,string)": "7ba04809",
                "assertGe(int256,int256)": "0a30b771",
                "assertGe(int256,int256,string)": "a84328dd",
                "assertGe(uint256,uint256)": "a8d4d1d9",
                "assertGe(uint256,uint256,string)": "e25242c0",
                "assertGeDecimal(int256,int256,uint256)": "dc28c0f1",
                "assertGeDecimal(int256,int256,uint256,string)": "5df93c9b",
                "assertGeDecimal(uint256,uint256,uint256)": "3d1fe08a",
                "assertGeDecimal(uint256,uint256,uint256,string)": "8bff9133",
                "assertGt(int256,int256)": "5a362d45",
                "assertGt(int256,int256,string)": "f8d33b9b",
                "assertGt(uint256,uint256)": "db07fcd2",
                "assertGt(uint256,uint256,string)": "d9a3c4d2",
                "assertGtDecimal(int256,int256,uint256)": "78611f0e",
                "assertGtDecimal(int256,int256,uint256,string)": "04a5c7ab",
                "assertGtDecimal(uint256,uint256,uint256)": "eccd2437",
                "assertGtDecimal(uint256,uint256,uint256,string)": "64949a8d",
                "assertLe(int256,int256)": "95fd154e",
                "assertLe(int256,int256,string)": "4dfe692c",
                "assertLe(uint256,uint256)": "8466f415",
                "assertLe(uint256,uint256,string)": "d17d4b0d",
                "assertLeDecimal(int256,int256,uint256)": "11d1364a",
                "assertLeDecimal(int256,int256,uint256,string)": "aa5cf788",
                "assertLeDecimal(uint256,uint256,uint256)": "c304aab7",
                "assertLeDecimal(uint256,uint256,uint256,string)": "7fefbbe0",
                "assertLt(int256,int256)": "3e914080",
                "assertLt(int256,int256,string)": "9ff531e3",
                "assertLt(uint256,uint256)": "b12fc005",
                "assertLt(uint256,uint256,string)": "65d5c135",
                "assertLtDecimal(int256,int256,uint256)": "dbe8d88b",
                "assertLtDecimal(int256,int256,uint256,string)": "40f0b4e0",
                "assertLtDecimal(uint256,uint256,uint256)": "2077337e",
                "assertLtDecimal(uint256,uint256,uint256,string)": "a972d037",
                "assertNotEq(address,address)": "b12e1694",
                "assertNotEq(address,address,string)": "8775a591",
                "assertNotEq(address[],address[])": "46d0b252",
                "assertNotEq(address[],address[],string)": "72c7e0b5",
                "assertNotEq(bool,bool)": "236e4d66",
                "assertNotEq(bool,bool,string)": "1091a261",
                "assertNotEq(bool[],bool[])": "286fafea",
                "assertNotEq(bool[],bool[],string)": "62c6f9fb",
                "assertNotEq(bytes,bytes)": "3cf78e28",
                "assertNotEq(bytes,bytes,string)": "9507540e",
                "assertNotEq(bytes32,bytes32)": "898e83fc",
                "assertNotEq(bytes32,bytes32,string)": "b2332f51",
                "assertNotEq(bytes32[],bytes32[])": "0603ea68",
                "assertNotEq(bytes32[],bytes32[],string)": "b873634c",
                "assertNotEq(bytes[],bytes[])": "edecd035",
                "assertNotEq(bytes[],bytes[],string)": "1dcd1f68",
                "assertNotEq(int256,int256)": "f4c004e3",
                "assertNotEq(int256,int256,string)": "4724c5b9",
                "assertNotEq(int256[],int256[])": "0b72f4ef",
                "assertNotEq(int256[],int256[],string)": "d3977322",
                "assertNotEq(string,string)": "6a8237b3",
                "assertNotEq(string,string,string)": "78bdcea7",
                "assertNotEq(string[],string[])": "bdfacbe8",
                "assertNotEq(string[],string[],string)": "b67187f3",
                "assertNotEq(uint256,uint256)": "b7909320",
                "assertNotEq(uint256,uint256,string)": "98f9bdbd",
                "assertNotEq(uint256[],uint256[])": "56f29cba",
                "assertNotEq(uint256[],uint256[],string)": "9a7fbd8f",
                "assertNotEqDecimal(int256,int256,uint256)": "14e75680",
                "assertNotEqDecimal(int256,int256,uint256,string)": "33949f0b",
                "assertNotEqDecimal(uint256,uint256,uint256)": "669efca7",
                "assertNotEqDecimal(uint256,uint256,uint256,string)": "f5a55558",
                "assertTrue(bool)": "0c9fd581",
                "assertTrue(bool,string)": "a34edc03",
                "assume(bool)": "4c63e562",
                "blobBaseFee(uint256)": "6d315d7e",
                "blobhashes(bytes32[])": "129de7eb",
                "breakpoint(string)": "f0259e92",
                "breakpoint(string,bool)": "f7d39a8d",
                "broadcast()": "afc98040",
                "broadcast(address)": "e6962cdb",
                "broadcast(uint256)": "f67a965b",
                "chainId(uint256)": "4049ddd2",
                "clearMockedCalls()": "3fdf4e15",
                "closeFile(string)": "48c3241f",
                "coinbase(address)": "ff483c54",
                "computeCreate2Address(bytes32,bytes32)": "890c283b",
                "computeCreate2Address(bytes32,bytes32,address)": "d323826a",
                "computeCreateAddress(address,uint256)": "74637a7a",
                "copyFile(string,string)": "a54a87d8",
                "createDir(string,bool)": "168b64d3",
                "createFork(string)": "31ba3498",
                "createFork(string,bytes32)": "7ca29682",
                "createFork(string,uint256)": "6ba3ba2b",
                "createSelectFork(string)": "98680034",
                "createSelectFork(string,bytes32)": "84d52b7a",
                "createSelectFork(string,uint256)": "71ee464d",
                "createWallet(string)": "7404f1d2",
                "createWallet(uint256)": "7a675bb6",
                "createWallet(uint256,string)": "ed7c5462",
                "deal(address,uint256)": "c88a5e6d",
                "deleteSnapshot(uint256)": "a6368557",
                "deleteSnapshots()": "421ae469",
                "deriveKey(string,string,uint32)": "6bcb2c1b",
                "deriveKey(string,string,uint32,string)": "29233b1f",
                "deriveKey(string,uint32)": "6229498b",
                "deriveKey(string,uint32,string)": "32c8176d",
                "difficulty(uint256)": "46cc92d9",
                "dumpState(string)": "709ecd3f",
                "ensNamehash(string)": "8c374c65",
                "envAddress(string)": "350d56bf",
                "envAddress(string,string)": "ad31b9fa",
                "envBool(string)": "7ed1ec7d",
                "envBool(string,string)": "aaaddeaf",
                "envBytes(string)": "4d7baf06",
                "envBytes(string,string)": "ddc2651b",
                "envBytes32(string)": "97949042",
                "envBytes32(string,string)": "5af231c1",
                "envExists(string)": "ce8365f9",
                "envInt(string)": "892a0c61",
                "envInt(string,string)": "42181150",
                "envOr(string,address)": "561fe540",
                "envOr(string,bool)": "4777f3cf",
                "envOr(string,bytes)": "b3e47705",
                "envOr(string,bytes32)": "b4a85892",
                "envOr(string,int256)": "bbcb713e",
                "envOr(string,string)": "d145736c",
                "envOr(string,string,address[])": "c74e9deb",
                "envOr(string,string,bool[])": "eb85e83b",
                "envOr(string,string,bytes32[])": "2281f367",
                "envOr(string,string,bytes[])": "64bc3e64",
                "envOr(string,string,int256[])": "4700d74b",
                "envOr(string,string,string[])": "859216bc",
                "envOr(string,string,uint256[])": "74318528",
                "envOr(string,uint256)": "5e97348f",
                "envString(string)": "f877cb19",
                "envString(string,string)": "14b02bc9",
                "envUint(string)": "c1978d1f",
                "envUint(string,string)": "f3dec099",
                "etch(address,bytes)": "b4d6c782",
                "eth_getLogs(uint256,uint256,address,bytes32[])": "35e1349b",
                "exists(string)": "261a323e",
                "expectCall(address,bytes)": "bd6af434",
                "expectCall(address,bytes,uint64)": "c1adbbff",
                "expectCall(address,uint256,bytes)": "f30c7ba3",
                "expectCall(address,uint256,bytes,uint64)": "a2b1a1ae",
                "expectCall(address,uint256,uint64,bytes)": "23361207",
                "expectCall(address,uint256,uint64,bytes,uint64)": "65b7b7cc",
                "expectCallMinGas(address,uint256,uint64,bytes)": "08e4e116",
                "expectCallMinGas(address,uint256,uint64,bytes,uint64)": "e13a1834",
                "expectEmit()": "440ed10d",
                "expectEmit(address)": "86b9620d",
                "expectEmit(bool,bool,bool,bool)": "491cc7c2",
                "expectEmit(bool,bool,bool,bool,address)": "81bad6f3",
                "expectRevert()": "f4844814",
                "expectRevert(bytes)": "f28dceb3",
                "expectRevert(bytes4)": "c31eb0e0",
                "expectSafeMemory(uint64,uint64)": "6d016688",
                "expectSafeMemoryCall(uint64,uint64)": "05838bf4",
                "fee(uint256)": "39b37ab0",
                "ffi(string[])": "89160467",
                "fsMetadata(string)": "af368a08",
                "getBlobBaseFee()": "1f6d6ef7",
                "getBlobhashes()": "f56ff18b",
                "getBlockNumber()": "42cbb15c",
                "getBlockTimestamp()": "796b89b9",
                "getCode(string)": "8d1cc925",
                "getDeployedCode(string)": "3ebf73b4",
                "getLabel(address)": "28a249b0",
                "getMappingKeyAndParentOf(address,bytes32)": "876e24e6",
                "getMappingLength(address,bytes32)": "2f2fd63f",
                "getMappingSlotAt(address,bytes32,uint256)": "ebc73ab4",
                "getNonce((address,uint256,uint256,uint256))": "a5748aad",
                "getNonce(address)": "2d0335ab",
                "getRecordedLogs()": "191553a4",
                "indexOf(string,string)": "8a0807b7",
                "isContext(uint8)": "64af255d",
                "isDir(string)": "7d15d019",
                "isFile(string)": "e0eb04d4",
                "isPersistent(address)": "d92d8efd",
                "keyExists(string,string)": "528a683c",
                "keyExistsJson(string,string)": "db4235f6",
                "keyExistsToml(string,string)": "600903ad",
                "label(address,string)": "c657c718",
                "lastCallGas()": "2b589b28",
                "load(address,bytes32)": "667f9d70",
                "loadAllocs(string)": "b3a056d7",
                "makePersistent(address)": "57e22dde",
                "makePersistent(address,address)": "4074e0a8",
                "makePersistent(address,address,address)": "efb77a75",
                "makePersistent(address[])": "1d9e269e",
                "mockCall(address,bytes,bytes)": "b96213e4",
                "mockCall(address,uint256,bytes,bytes)": "81409b91",
                "mockCallRevert(address,bytes,bytes)": "dbaad147",
                "mockCallRevert(address,uint256,bytes,bytes)": "d23cd037",
                "parseAddress(string)": "c6ce059d",
                "parseBool(string)": "974ef924",
                "parseBytes(string)": "8f5d232d",
                "parseBytes32(string)": "087e6e81",
                "parseInt(string)": "42346c5e",
                "parseJson(string)": "6a82600a",
                "parseJson(string,string)": "85940ef1",
                "parseJsonAddress(string,string)": "1e19e657",
                "parseJsonAddressArray(string,string)": "2fce7883",
                "parseJsonBool(string,string)": "9f86dc91",
                "parseJsonBoolArray(string,string)": "91f3b94f",
                "parseJsonBytes(string,string)": "fd921be8",
                "parseJsonBytes32(string,string)": "1777e59d",
                "parseJsonBytes32Array(string,string)": "91c75bc3",
                "parseJsonBytesArray(string,string)": "6631aa99",
                "parseJsonInt(string,string)": "7b048ccd",
                "parseJsonIntArray(string,string)": "9983c28a",
                "parseJsonKeys(string,string)": "213e4198",
                "parseJsonString(string,string)": "49c4fac8",
                "parseJsonStringArray(string,string)": "498fdcf4",
                "parseJsonUint(string,string)": "addde2b6",
                "parseJsonUintArray(string,string)": "522074ab",
                "parseToml(string)": "592151f0",
                "parseToml(string,string)": "37736e08",
                "parseTomlAddress(string,string)": "65e7c844",
                "parseTomlAddressArray(string,string)": "65c428e7",
                "parseTomlBool(string,string)": "d30dced6",
                "parseTomlBoolArray(string,string)": "127cfe9a",
                "parseTomlBytes(string,string)": "d77bfdb9",
                "parseTomlBytes32(string,string)": "8e214810",
                "parseTomlBytes32Array(string,string)": "3e716f81",
                "parseTomlBytesArray(string,string)": "b197c247",
                "parseTomlInt(string,string)": "c1350739",
                "parseTomlIntArray(string,string)": "d3522ae6",
                "parseTomlKeys(string,string)": "812a44b2",
                "parseTomlString(string,string)": "8bb8dd43",
                "parseTomlStringArray(string,string)": "9f629281",
                "parseTomlUint(string,string)": "cc7b0487",
                "parseTomlUintArray(string,string)": "b5df27c8",
                "parseUint(string)": "fa91454d",
                "pauseGasMetering()": "d1a5b36f",
                "prank(address)": "ca669fa7",
                "prank(address,address)": "47e50cce",
                "prevrandao(bytes32)": "3b925549",
                "prevrandao(uint256)": "9cb1c0d4",
                "projectRoot()": "d930a0e6",
                "prompt(string)": "47eaf474",
                "promptAddress(string)": "62ee05f4",
                "promptSecret(string)": "1e279d41",
                "promptSecretUint(string)": "69ca02b7",
                "promptUint(string)": "652fd489",
                "randomAddress()": "d5bee9f5",
                "randomUint()": "25124730",
                "randomUint(uint256,uint256)": "d61b051b",
                "readCallers()": "4ad0bac9",
                "readDir(string)": "c4bc59e0",
                "readDir(string,uint64)": "1497876c",
                "readDir(string,uint64,bool)": "8102d70d",
                "readFile(string)": "60f9bb11",
                "readFileBinary(string)": "16ed7bc4",
                "readLine(string)": "70f55728",
                "readLink(string)": "9f5684a2",
                "record()": "266cf109",
                "recordLogs()": "41af2f52",
                "rememberKey(uint256)": "22100064",
                "removeDir(string,bool)": "45c62011",
                "removeFile(string)": "f1afe04d",
                "replace(string,string,string)": "e00ad03e",
                "resetNonce(address)": "1c72346d",
                "resumeGasMetering()": "2bcd50e0",
                "revertTo(uint256)": "44d7f0a4",
                "revertToAndDelete(uint256)": "03e0aca9",
                "revokePersistent(address)": "997a0222",
                "revokePersistent(address[])": "3ce969e6",
                "roll(uint256)": "1f7b4f30",
                "rollFork(bytes32)": "0f29772b",
                "rollFork(uint256)": "d9bbf3a1",
                "rollFork(uint256,bytes32)": "f2830f7b",
                "rollFork(uint256,uint256)": "d74c83a4",
                "rpc(string,string)": "1206c8a8",
                "rpcUrl(string)": "975a6ce9",
                "rpcUrlStructs()": "9d2ad72a",
                "rpcUrls()": "a85a8418",
                "selectFork(uint256)": "9ebf6827",
                "serializeAddress(string,string,address)": "972c6062",
                "serializeAddress(string,string,address[])": "1e356e1a",
                "serializeBool(string,string,bool)": "ac22e971",
                "serializeBool(string,string,bool[])": "92925aa1",
                "serializeBytes(string,string,bytes)": "f21d52c7",
                "serializeBytes(string,string,bytes[])": "9884b232",
                "serializeBytes32(string,string,bytes32)": "2d812b44",
                "serializeBytes32(string,string,bytes32[])": "201e43e2",
                "serializeInt(string,string,int256)": "3f33db60",
                "serializeInt(string,string,int256[])": "7676e127",
                "serializeJson(string,string)": "9b3358b0",
                "serializeString(string,string,string)": "88da6d35",
                "serializeString(string,string,string[])": "561cd6f3",
                "serializeUint(string,string,uint256)": "129e9002",
                "serializeUint(string,string,uint256[])": "fee9a469",
                "serializeUintToHex(string,string,uint256)": "ae5a2ae8",
                "setEnv(string,string)": "3d5923ee",
                "setNonce(address,uint64)": "f8e18b57",
                "setNonceUnsafe(address,uint64)": "9b67b21c",
                "sign((address,uint256,uint256,uint256),bytes32)": "b25c5a25",
                "sign(address,bytes32)": "8c1aa205",
                "sign(bytes32)": "799cd333",
                "sign(uint256,bytes32)": "e341eaa4",
                "signP256(uint256,bytes32)": "83211b40",
                "skip(bool)": "dd82d13e",
                "sleep(uint256)": "fa9d8713",
                "snapshot()": "9711715a",
                "split(string,string)": "8bb75533",
                "startBroadcast()": "7fb5297f",
                "startBroadcast(address)": "7fec2a8d",
                "startBroadcast(uint256)": "ce817d47",
                "startMappingRecording()": "3e9705c0",
                "startPrank(address)": "06447d56",
                "startPrank(address,address)": "45b56078",
                "startStateDiffRecording()": "cf22e3c9",
                "stopAndReturnStateDiff()": "aa5cf90e",
                "stopBroadcast()": "76eadd36",
                "stopExpectSafeMemory()": "0956441b",
                "stopMappingRecording()": "0d4aae9b",
                "stopPrank()": "90c5013b",
                "store(address,bytes32,bytes32)": "70ca10bb",
                "toBase64(bytes)": "a5cbfe65",
                "toBase64(string)": "3f8be2c8",
                "toBase64URL(bytes)": "c8bd0e4a",
                "toBase64URL(string)": "ae3165b3",
                "toLowercase(string)": "50bb0884",
                "toString(address)": "56ca623e",
                "toString(bool)": "71dce7da",
                "toString(bytes)": "71aad10d",
                "toString(bytes32)": "b11a19e8",
                "toString(int256)": "a322c40e",
                "toString(uint256)": "6900a3ae",
                "toUppercase(string)": "074ae3d7",
                "transact(bytes32)": "be646da1",
                "transact(uint256,bytes32)": "4d8abc4b",
                "trim(string)": "b2dad155",
                "tryFfi(string[])": "f45c1ce7",
                "txGasPrice(uint256)": "48f50c0f",
                "unixTime()": "625387dc",
                "warp(uint256)": "e5d6bf02",
                "writeFile(string,string)": "897e0a97",
                "writeFileBinary(string,bytes)": "1f21fc80",
                "writeJson(string,string)": "e23cd19f",
                "writeJson(string,string,string)": "35d6ad46",
                "writeLine(string,string)": "619d897f",
                "writeToml(string,string)": "c0865ba7",
                "writeToml(string,string,string)": "51ac6a33"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ],
      "VmSafe": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "accesses",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "readSlots",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "writeSlots",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "addr",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "keyAddr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbs",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqAbsDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRel",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertApproxEqRelDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "maxPercentDelta",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertFalse",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertFalse",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertGtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLe",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLeDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLt",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertLtDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "right",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "right",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "right",
                    "type": "address[]",
                    "internalType": "address[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "right",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "right",
                    "type": "bytes",
                    "internalType": "bytes"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "right",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "right",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "string[]",
                    "internalType": "string[]"
                  },
                  {
                    "name": "right",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "right",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  },
                  {
                    "name": "right",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEq",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "right",
                    "type": "int256",
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertNotEqDecimal",
                "inputs": [
                  {
                    "name": "left",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "right",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertTrue",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assertTrue",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "error",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "assume",
                "inputs": [
                  {
                    "name": "condition",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "breakpoint",
                "inputs": [
                  {
                    "name": "char",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "breakpoint",
                "inputs": [
                  {
                    "name": "char",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "broadcast",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "broadcast",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "broadcast",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "closeFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "computeCreate2Address",
                "inputs": [
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "initCodeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "computeCreate2Address",
                "inputs": [
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "initCodeHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "deployer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "computeCreateAddress",
                "inputs": [
                  {
                    "name": "deployer",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "nonce",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "copyFile",
                "inputs": [
                  {
                    "name": "from",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "to",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "copied",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "recursive",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createWallet",
                "inputs": [
                  {
                    "name": "walletLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createWallet",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "createWallet",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "walletLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "derivationPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "language",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "language",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "deriveKey",
                "inputs": [
                  {
                    "name": "mnemonic",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "derivationPath",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "index",
                    "type": "uint32",
                    "internalType": "uint32"
                  }
                ],
                "outputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "ensNamehash",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "envAddress",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envAddress",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBool",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBool",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes32",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envBytes32",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envExists",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envInt",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envInt",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envOr",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "defaultValue",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envString",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envString",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envUint",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "envUint",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delim",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "eth_getLogs",
                "inputs": [
                  {
                    "name": "fromBlock",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "toBlock",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "topics",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "logs",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.EthGetLogs[]",
                    "components": [
                      {
                        "name": "emitter",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "topics",
                        "type": "bytes32[]",
                        "internalType": "bytes32[]"
                      },
                      {
                        "name": "data",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "blockHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "blockNumber",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "transactionHash",
                        "type": "bytes32",
                        "internalType": "bytes32"
                      },
                      {
                        "name": "transactionIndex",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "logIndex",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "removed",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "exists",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "ffi",
                "inputs": [
                  {
                    "name": "commandInput",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "fsMetadata",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "metadata",
                    "type": "tuple",
                    "internalType": "struct VmSafe.FsMetadata",
                    "components": [
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "length",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "readOnly",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "modified",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "accessed",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "created",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlobBaseFee",
                "inputs": [],
                "outputs": [
                  {
                    "name": "blobBaseFee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlockNumber",
                "inputs": [],
                "outputs": [
                  {
                    "name": "height",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlockTimestamp",
                "inputs": [],
                "outputs": [
                  {
                    "name": "timestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "creationBytecode",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getDeployedCode",
                "inputs": [
                  {
                    "name": "artifactPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "runtimeBytecode",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getLabel",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "currentLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getMappingKeyAndParentOf",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "elementSlot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "found",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "key",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "parent",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "getMappingLength",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "mappingSlot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "length",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "getMappingSlotAt",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "mappingSlot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "idx",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "getNonce",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "nonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getNonce",
                "inputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "nonce",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "getRecordedLogs",
                "inputs": [],
                "outputs": [
                  {
                    "name": "logs",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.Log[]",
                    "components": [
                      {
                        "name": "topics",
                        "type": "bytes32[]",
                        "internalType": "bytes32[]"
                      },
                      {
                        "name": "data",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "emitter",
                        "type": "address",
                        "internalType": "address"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "indexOf",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "isContext",
                "inputs": [
                  {
                    "name": "context",
                    "type": "uint8",
                    "internalType": "enum VmSafe.ForgeContext"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "isDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "isFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "keyExists",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "keyExistsJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "keyExistsToml",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "label",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "newLabel",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "lastCallGas",
                "inputs": [],
                "outputs": [
                  {
                    "name": "gas",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Gas",
                    "components": [
                      {
                        "name": "gasLimit",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "gasTotalUsed",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "gasMemoryUsed",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "gasRefunded",
                        "type": "int64",
                        "internalType": "int64"
                      },
                      {
                        "name": "gasRemaining",
                        "type": "uint64",
                        "internalType": "uint64"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "load",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "parseAddress",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseBool",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseBytes",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseBytes32",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseInt",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonAddress",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonAddressArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBool",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBoolArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytes",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytes32",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytes32Array",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonBytesArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonInt",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonIntArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonKeys",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "keys",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonString",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonStringArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonUint",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseJsonUintArray",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseToml",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseToml",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "abiEncodedData",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlAddress",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlAddressArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBool",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBoolArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytes",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytes32",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytes32Array",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlBytesArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlInt",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlIntArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlKeys",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "keys",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlString",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlStringArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlUint",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseTomlUintArray",
                "inputs": [
                  {
                    "name": "toml",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "key",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "parseUint",
                "inputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "parsedValue",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "pauseGasMetering",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "projectRoot",
                "inputs": [],
                "outputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "prompt",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptAddress",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptSecret",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptSecretUint",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "promptUint",
                "inputs": [
                  {
                    "name": "promptText",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "randomAddress",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "randomUint",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "randomUint",
                "inputs": [
                  {
                    "name": "min",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "max",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "readDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "maxDepth",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "outputs": [
                  {
                    "name": "entries",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DirEntry[]",
                    "components": [
                      {
                        "name": "errorMessage",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "path",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "maxDepth",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "followLinks",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "entries",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DirEntry[]",
                    "components": [
                      {
                        "name": "errorMessage",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "path",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "entries",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.DirEntry[]",
                    "components": [
                      {
                        "name": "errorMessage",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "path",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      },
                      {
                        "name": "isDir",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "isSymlink",
                        "type": "bool",
                        "internalType": "bool"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readFileBinary",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readLine",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "line",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "readLink",
                "inputs": [
                  {
                    "name": "linkPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "targetPath",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "record",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "recordLogs",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rememberKey",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "keyAddr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "removeDir",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "recursive",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "removeFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "replace",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "from",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "to",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "resumeGasMetering",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rpc",
                "inputs": [
                  {
                    "name": "method",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "params",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "rpcUrl",
                "inputs": [
                  {
                    "name": "rpcAlias",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "rpcUrlStructs",
                "inputs": [],
                "outputs": [
                  {
                    "name": "urls",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.Rpc[]",
                    "components": [
                      {
                        "name": "key",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "url",
                        "type": "string",
                        "internalType": "string"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "rpcUrls",
                "inputs": [],
                "outputs": [
                  {
                    "name": "urls",
                    "type": "string[2][]",
                    "internalType": "string[2][]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "serializeAddress",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeAddress",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBool",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "bool[]",
                    "internalType": "bool[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBool",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes32",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeBytes32",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeInt",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeInt",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "int256[]",
                    "internalType": "int256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeJson",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeString",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeString",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeUint",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeUint",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "serializeUintToHex",
                "inputs": [
                  {
                    "name": "objectKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setEnv",
                "inputs": [
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "value",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "wallet",
                    "type": "tuple",
                    "internalType": "struct VmSafe.Wallet",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "publicKeyX",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "publicKeyY",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "privateKey",
                        "type": "uint256",
                        "internalType": "uint256"
                      }
                    ]
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "sign",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "signP256",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "digest",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "sleep",
                "inputs": [
                  {
                    "name": "duration",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "split",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "delimiter",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "outputs",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "startBroadcast",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startBroadcast",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startBroadcast",
                "inputs": [
                  {
                    "name": "privateKey",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startMappingRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "startStateDiffRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopAndReturnStateDiff",
                "inputs": [],
                "outputs": [
                  {
                    "name": "accountAccesses",
                    "type": "tuple[]",
                    "internalType": "struct VmSafe.AccountAccess[]",
                    "components": [
                      {
                        "name": "chainInfo",
                        "type": "tuple",
                        "internalType": "struct VmSafe.ChainInfo",
                        "components": [
                          {
                            "name": "forkId",
                            "type": "uint256",
                            "internalType": "uint256"
                          },
                          {
                            "name": "chainId",
                            "type": "uint256",
                            "internalType": "uint256"
                          }
                        ]
                      },
                      {
                        "name": "kind",
                        "type": "uint8",
                        "internalType": "enum VmSafe.AccountAccessKind"
                      },
                      {
                        "name": "account",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "accessor",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "initialized",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "oldBalance",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "newBalance",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "deployedCode",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "value",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "data",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "reverted",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "storageAccesses",
                        "type": "tuple[]",
                        "internalType": "struct VmSafe.StorageAccess[]",
                        "components": [
                          {
                            "name": "account",
                            "type": "address",
                            "internalType": "address"
                          },
                          {
                            "name": "slot",
                            "type": "bytes32",
                            "internalType": "bytes32"
                          },
                          {
                            "name": "isWrite",
                            "type": "bool",
                            "internalType": "bool"
                          },
                          {
                            "name": "previousValue",
                            "type": "bytes32",
                            "internalType": "bytes32"
                          },
                          {
                            "name": "newValue",
                            "type": "bytes32",
                            "internalType": "bytes32"
                          },
                          {
                            "name": "reverted",
                            "type": "bool",
                            "internalType": "bool"
                          }
                        ]
                      },
                      {
                        "name": "depth",
                        "type": "uint64",
                        "internalType": "uint64"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopBroadcast",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "stopMappingRecording",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "toBase64",
                "inputs": [
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toBase64",
                "inputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toBase64URL",
                "inputs": [
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toBase64URL",
                "inputs": [
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toLowercase",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "int256",
                    "internalType": "int256"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toString",
                "inputs": [
                  {
                    "name": "value",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "stringifiedValue",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "toUppercase",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "trim",
                "inputs": [
                  {
                    "name": "input",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [
                  {
                    "name": "output",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "tryFfi",
                "inputs": [
                  {
                    "name": "commandInput",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "outputs": [
                  {
                    "name": "result",
                    "type": "tuple",
                    "internalType": "struct VmSafe.FfiResult",
                    "components": [
                      {
                        "name": "exitCode",
                        "type": "int32",
                        "internalType": "int32"
                      },
                      {
                        "name": "stdout",
                        "type": "bytes",
                        "internalType": "bytes"
                      },
                      {
                        "name": "stderr",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "unixTime",
                "inputs": [],
                "outputs": [
                  {
                    "name": "milliseconds",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeFile",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeFileBinary",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeJson",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeLine",
                "inputs": [
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "data",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeToml",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "valueKey",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "writeToml",
                "inputs": [
                  {
                    "name": "json",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "path",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uin256 value between the provided range (=min..=max).\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may result in Script simulations differing from on-chain execution. It is recommended to only use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"VmSafe\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "accesses(address)": "65bc9481",
                "addr(uint256)": "ffa18649",
                "assertApproxEqAbs(int256,int256,uint256)": "240f839d",
                "assertApproxEqAbs(int256,int256,uint256,string)": "8289e621",
                "assertApproxEqAbs(uint256,uint256,uint256)": "16d207c6",
                "assertApproxEqAbs(uint256,uint256,uint256,string)": "f710b062",
                "assertApproxEqAbsDecimal(int256,int256,uint256,uint256)": "3d5bc8bc",
                "assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)": "6a5066d4",
                "assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)": "045c55ce",
                "assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)": "60429eb2",
                "assertApproxEqRel(int256,int256,uint256)": "fea2d14f",
                "assertApproxEqRel(int256,int256,uint256,string)": "ef277d72",
                "assertApproxEqRel(uint256,uint256,uint256)": "8cf25ef4",
                "assertApproxEqRel(uint256,uint256,uint256,string)": "1ecb7d33",
                "assertApproxEqRelDecimal(int256,int256,uint256,uint256)": "abbf21cc",
                "assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)": "fccc11c4",
                "assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)": "21ed2977",
                "assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)": "82d6c8fd",
                "assertEq(address,address)": "515361f6",
                "assertEq(address,address,string)": "2f2769d1",
                "assertEq(address[],address[])": "3868ac34",
                "assertEq(address[],address[],string)": "3e9173c5",
                "assertEq(bool,bool)": "f7fe3477",
                "assertEq(bool,bool,string)": "4db19e7e",
                "assertEq(bool[],bool[])": "707df785",
                "assertEq(bool[],bool[],string)": "e48a8f8d",
                "assertEq(bytes,bytes)": "97624631",
                "assertEq(bytes,bytes,string)": "e24fed00",
                "assertEq(bytes32,bytes32)": "7c84c69b",
                "assertEq(bytes32,bytes32,string)": "c1fa1ed0",
                "assertEq(bytes32[],bytes32[])": "0cc9ee84",
                "assertEq(bytes32[],bytes32[],string)": "e03e9177",
                "assertEq(bytes[],bytes[])": "e5fb9b4a",
                "assertEq(bytes[],bytes[],string)": "f413f0b6",
                "assertEq(int256,int256)": "fe74f05b",
                "assertEq(int256,int256,string)": "714a2f13",
                "assertEq(int256[],int256[])": "711043ac",
                "assertEq(int256[],int256[],string)": "191f1b30",
                "assertEq(string,string)": "f320d963",
                "assertEq(string,string,string)": "36f656d8",
                "assertEq(string[],string[])": "cf1c049c",
                "assertEq(string[],string[],string)": "eff6b27d",
                "assertEq(uint256,uint256)": "98296c54",
                "assertEq(uint256,uint256,string)": "88b44c85",
                "assertEq(uint256[],uint256[])": "975d5a12",
                "assertEq(uint256[],uint256[],string)": "5d18c73a",
                "assertEqDecimal(int256,int256,uint256)": "48016c04",
                "assertEqDecimal(int256,int256,uint256,string)": "7e77b0c5",
                "assertEqDecimal(uint256,uint256,uint256)": "27af7d9c",
                "assertEqDecimal(uint256,uint256,uint256,string)": "d0cbbdef",
                "assertFalse(bool)": "a5982885",
                "assertFalse(bool,string)": "7ba04809",
                "assertGe(int256,int256)": "0a30b771",
                "assertGe(int256,int256,string)": "a84328dd",
                "assertGe(uint256,uint256)": "a8d4d1d9",
                "assertGe(uint256,uint256,string)": "e25242c0",
                "assertGeDecimal(int256,int256,uint256)": "dc28c0f1",
                "assertGeDecimal(int256,int256,uint256,string)": "5df93c9b",
                "assertGeDecimal(uint256,uint256,uint256)": "3d1fe08a",
                "assertGeDecimal(uint256,uint256,uint256,string)": "8bff9133",
                "assertGt(int256,int256)": "5a362d45",
                "assertGt(int256,int256,string)": "f8d33b9b",
                "assertGt(uint256,uint256)": "db07fcd2",
                "assertGt(uint256,uint256,string)": "d9a3c4d2",
                "assertGtDecimal(int256,int256,uint256)": "78611f0e",
                "assertGtDecimal(int256,int256,uint256,string)": "04a5c7ab",
                "assertGtDecimal(uint256,uint256,uint256)": "eccd2437",
                "assertGtDecimal(uint256,uint256,uint256,string)": "64949a8d",
                "assertLe(int256,int256)": "95fd154e",
                "assertLe(int256,int256,string)": "4dfe692c",
                "assertLe(uint256,uint256)": "8466f415",
                "assertLe(uint256,uint256,string)": "d17d4b0d",
                "assertLeDecimal(int256,int256,uint256)": "11d1364a",
                "assertLeDecimal(int256,int256,uint256,string)": "aa5cf788",
                "assertLeDecimal(uint256,uint256,uint256)": "c304aab7",
                "assertLeDecimal(uint256,uint256,uint256,string)": "7fefbbe0",
                "assertLt(int256,int256)": "3e914080",
                "assertLt(int256,int256,string)": "9ff531e3",
                "assertLt(uint256,uint256)": "b12fc005",
                "assertLt(uint256,uint256,string)": "65d5c135",
                "assertLtDecimal(int256,int256,uint256)": "dbe8d88b",
                "assertLtDecimal(int256,int256,uint256,string)": "40f0b4e0",
                "assertLtDecimal(uint256,uint256,uint256)": "2077337e",
                "assertLtDecimal(uint256,uint256,uint256,string)": "a972d037",
                "assertNotEq(address,address)": "b12e1694",
                "assertNotEq(address,address,string)": "8775a591",
                "assertNotEq(address[],address[])": "46d0b252",
                "assertNotEq(address[],address[],string)": "72c7e0b5",
                "assertNotEq(bool,bool)": "236e4d66",
                "assertNotEq(bool,bool,string)": "1091a261",
                "assertNotEq(bool[],bool[])": "286fafea",
                "assertNotEq(bool[],bool[],string)": "62c6f9fb",
                "assertNotEq(bytes,bytes)": "3cf78e28",
                "assertNotEq(bytes,bytes,string)": "9507540e",
                "assertNotEq(bytes32,bytes32)": "898e83fc",
                "assertNotEq(bytes32,bytes32,string)": "b2332f51",
                "assertNotEq(bytes32[],bytes32[])": "0603ea68",
                "assertNotEq(bytes32[],bytes32[],string)": "b873634c",
                "assertNotEq(bytes[],bytes[])": "edecd035",
                "assertNotEq(bytes[],bytes[],string)": "1dcd1f68",
                "assertNotEq(int256,int256)": "f4c004e3",
                "assertNotEq(int256,int256,string)": "4724c5b9",
                "assertNotEq(int256[],int256[])": "0b72f4ef",
                "assertNotEq(int256[],int256[],string)": "d3977322",
                "assertNotEq(string,string)": "6a8237b3",
                "assertNotEq(string,string,string)": "78bdcea7",
                "assertNotEq(string[],string[])": "bdfacbe8",
                "assertNotEq(string[],string[],string)": "b67187f3",
                "assertNotEq(uint256,uint256)": "b7909320",
                "assertNotEq(uint256,uint256,string)": "98f9bdbd",
                "assertNotEq(uint256[],uint256[])": "56f29cba",
                "assertNotEq(uint256[],uint256[],string)": "9a7fbd8f",
                "assertNotEqDecimal(int256,int256,uint256)": "14e75680",
                "assertNotEqDecimal(int256,int256,uint256,string)": "33949f0b",
                "assertNotEqDecimal(uint256,uint256,uint256)": "669efca7",
                "assertNotEqDecimal(uint256,uint256,uint256,string)": "f5a55558",
                "assertTrue(bool)": "0c9fd581",
                "assertTrue(bool,string)": "a34edc03",
                "assume(bool)": "4c63e562",
                "breakpoint(string)": "f0259e92",
                "breakpoint(string,bool)": "f7d39a8d",
                "broadcast()": "afc98040",
                "broadcast(address)": "e6962cdb",
                "broadcast(uint256)": "f67a965b",
                "closeFile(string)": "48c3241f",
                "computeCreate2Address(bytes32,bytes32)": "890c283b",
                "computeCreate2Address(bytes32,bytes32,address)": "d323826a",
                "computeCreateAddress(address,uint256)": "74637a7a",
                "copyFile(string,string)": "a54a87d8",
                "createDir(string,bool)": "168b64d3",
                "createWallet(string)": "7404f1d2",
                "createWallet(uint256)": "7a675bb6",
                "createWallet(uint256,string)": "ed7c5462",
                "deriveKey(string,string,uint32)": "6bcb2c1b",
                "deriveKey(string,string,uint32,string)": "29233b1f",
                "deriveKey(string,uint32)": "6229498b",
                "deriveKey(string,uint32,string)": "32c8176d",
                "ensNamehash(string)": "8c374c65",
                "envAddress(string)": "350d56bf",
                "envAddress(string,string)": "ad31b9fa",
                "envBool(string)": "7ed1ec7d",
                "envBool(string,string)": "aaaddeaf",
                "envBytes(string)": "4d7baf06",
                "envBytes(string,string)": "ddc2651b",
                "envBytes32(string)": "97949042",
                "envBytes32(string,string)": "5af231c1",
                "envExists(string)": "ce8365f9",
                "envInt(string)": "892a0c61",
                "envInt(string,string)": "42181150",
                "envOr(string,address)": "561fe540",
                "envOr(string,bool)": "4777f3cf",
                "envOr(string,bytes)": "b3e47705",
                "envOr(string,bytes32)": "b4a85892",
                "envOr(string,int256)": "bbcb713e",
                "envOr(string,string)": "d145736c",
                "envOr(string,string,address[])": "c74e9deb",
                "envOr(string,string,bool[])": "eb85e83b",
                "envOr(string,string,bytes32[])": "2281f367",
                "envOr(string,string,bytes[])": "64bc3e64",
                "envOr(string,string,int256[])": "4700d74b",
                "envOr(string,string,string[])": "859216bc",
                "envOr(string,string,uint256[])": "74318528",
                "envOr(string,uint256)": "5e97348f",
                "envString(string)": "f877cb19",
                "envString(string,string)": "14b02bc9",
                "envUint(string)": "c1978d1f",
                "envUint(string,string)": "f3dec099",
                "eth_getLogs(uint256,uint256,address,bytes32[])": "35e1349b",
                "exists(string)": "261a323e",
                "ffi(string[])": "89160467",
                "fsMetadata(string)": "af368a08",
                "getBlobBaseFee()": "1f6d6ef7",
                "getBlockNumber()": "42cbb15c",
                "getBlockTimestamp()": "796b89b9",
                "getCode(string)": "8d1cc925",
                "getDeployedCode(string)": "3ebf73b4",
                "getLabel(address)": "28a249b0",
                "getMappingKeyAndParentOf(address,bytes32)": "876e24e6",
                "getMappingLength(address,bytes32)": "2f2fd63f",
                "getMappingSlotAt(address,bytes32,uint256)": "ebc73ab4",
                "getNonce((address,uint256,uint256,uint256))": "a5748aad",
                "getNonce(address)": "2d0335ab",
                "getRecordedLogs()": "191553a4",
                "indexOf(string,string)": "8a0807b7",
                "isContext(uint8)": "64af255d",
                "isDir(string)": "7d15d019",
                "isFile(string)": "e0eb04d4",
                "keyExists(string,string)": "528a683c",
                "keyExistsJson(string,string)": "db4235f6",
                "keyExistsToml(string,string)": "600903ad",
                "label(address,string)": "c657c718",
                "lastCallGas()": "2b589b28",
                "load(address,bytes32)": "667f9d70",
                "parseAddress(string)": "c6ce059d",
                "parseBool(string)": "974ef924",
                "parseBytes(string)": "8f5d232d",
                "parseBytes32(string)": "087e6e81",
                "parseInt(string)": "42346c5e",
                "parseJson(string)": "6a82600a",
                "parseJson(string,string)": "85940ef1",
                "parseJsonAddress(string,string)": "1e19e657",
                "parseJsonAddressArray(string,string)": "2fce7883",
                "parseJsonBool(string,string)": "9f86dc91",
                "parseJsonBoolArray(string,string)": "91f3b94f",
                "parseJsonBytes(string,string)": "fd921be8",
                "parseJsonBytes32(string,string)": "1777e59d",
                "parseJsonBytes32Array(string,string)": "91c75bc3",
                "parseJsonBytesArray(string,string)": "6631aa99",
                "parseJsonInt(string,string)": "7b048ccd",
                "parseJsonIntArray(string,string)": "9983c28a",
                "parseJsonKeys(string,string)": "213e4198",
                "parseJsonString(string,string)": "49c4fac8",
                "parseJsonStringArray(string,string)": "498fdcf4",
                "parseJsonUint(string,string)": "addde2b6",
                "parseJsonUintArray(string,string)": "522074ab",
                "parseToml(string)": "592151f0",
                "parseToml(string,string)": "37736e08",
                "parseTomlAddress(string,string)": "65e7c844",
                "parseTomlAddressArray(string,string)": "65c428e7",
                "parseTomlBool(string,string)": "d30dced6",
                "parseTomlBoolArray(string,string)": "127cfe9a",
                "parseTomlBytes(string,string)": "d77bfdb9",
                "parseTomlBytes32(string,string)": "8e214810",
                "parseTomlBytes32Array(string,string)": "3e716f81",
                "parseTomlBytesArray(string,string)": "b197c247",
                "parseTomlInt(string,string)": "c1350739",
                "parseTomlIntArray(string,string)": "d3522ae6",
                "parseTomlKeys(string,string)": "812a44b2",
                "parseTomlString(string,string)": "8bb8dd43",
                "parseTomlStringArray(string,string)": "9f629281",
                "parseTomlUint(string,string)": "cc7b0487",
                "parseTomlUintArray(string,string)": "b5df27c8",
                "parseUint(string)": "fa91454d",
                "pauseGasMetering()": "d1a5b36f",
                "projectRoot()": "d930a0e6",
                "prompt(string)": "47eaf474",
                "promptAddress(string)": "62ee05f4",
                "promptSecret(string)": "1e279d41",
                "promptSecretUint(string)": "69ca02b7",
                "promptUint(string)": "652fd489",
                "randomAddress()": "d5bee9f5",
                "randomUint()": "25124730",
                "randomUint(uint256,uint256)": "d61b051b",
                "readDir(string)": "c4bc59e0",
                "readDir(string,uint64)": "1497876c",
                "readDir(string,uint64,bool)": "8102d70d",
                "readFile(string)": "60f9bb11",
                "readFileBinary(string)": "16ed7bc4",
                "readLine(string)": "70f55728",
                "readLink(string)": "9f5684a2",
                "record()": "266cf109",
                "recordLogs()": "41af2f52",
                "rememberKey(uint256)": "22100064",
                "removeDir(string,bool)": "45c62011",
                "removeFile(string)": "f1afe04d",
                "replace(string,string,string)": "e00ad03e",
                "resumeGasMetering()": "2bcd50e0",
                "rpc(string,string)": "1206c8a8",
                "rpcUrl(string)": "975a6ce9",
                "rpcUrlStructs()": "9d2ad72a",
                "rpcUrls()": "a85a8418",
                "serializeAddress(string,string,address)": "972c6062",
                "serializeAddress(string,string,address[])": "1e356e1a",
                "serializeBool(string,string,bool)": "ac22e971",
                "serializeBool(string,string,bool[])": "92925aa1",
                "serializeBytes(string,string,bytes)": "f21d52c7",
                "serializeBytes(string,string,bytes[])": "9884b232",
                "serializeBytes32(string,string,bytes32)": "2d812b44",
                "serializeBytes32(string,string,bytes32[])": "201e43e2",
                "serializeInt(string,string,int256)": "3f33db60",
                "serializeInt(string,string,int256[])": "7676e127",
                "serializeJson(string,string)": "9b3358b0",
                "serializeString(string,string,string)": "88da6d35",
                "serializeString(string,string,string[])": "561cd6f3",
                "serializeUint(string,string,uint256)": "129e9002",
                "serializeUint(string,string,uint256[])": "fee9a469",
                "serializeUintToHex(string,string,uint256)": "ae5a2ae8",
                "setEnv(string,string)": "3d5923ee",
                "sign((address,uint256,uint256,uint256),bytes32)": "b25c5a25",
                "sign(address,bytes32)": "8c1aa205",
                "sign(bytes32)": "799cd333",
                "sign(uint256,bytes32)": "e341eaa4",
                "signP256(uint256,bytes32)": "83211b40",
                "sleep(uint256)": "fa9d8713",
                "split(string,string)": "8bb75533",
                "startBroadcast()": "7fb5297f",
                "startBroadcast(address)": "7fec2a8d",
                "startBroadcast(uint256)": "ce817d47",
                "startMappingRecording()": "3e9705c0",
                "startStateDiffRecording()": "cf22e3c9",
                "stopAndReturnStateDiff()": "aa5cf90e",
                "stopBroadcast()": "76eadd36",
                "stopMappingRecording()": "0d4aae9b",
                "toBase64(bytes)": "a5cbfe65",
                "toBase64(string)": "3f8be2c8",
                "toBase64URL(bytes)": "c8bd0e4a",
                "toBase64URL(string)": "ae3165b3",
                "toLowercase(string)": "50bb0884",
                "toString(address)": "56ca623e",
                "toString(bool)": "71dce7da",
                "toString(bytes)": "71aad10d",
                "toString(bytes32)": "b11a19e8",
                "toString(int256)": "a322c40e",
                "toString(uint256)": "6900a3ae",
                "toUppercase(string)": "074ae3d7",
                "trim(string)": "b2dad155",
                "tryFfi(string[])": "f45c1ce7",
                "unixTime()": "625387dc",
                "writeFile(string,string)": "897e0a97",
                "writeFileBinary(string,bytes)": "1f21fc80",
                "writeJson(string,string)": "e23cd19f",
                "writeJson(string,string,string)": "35d6ad46",
                "writeLine(string,string)": "619d897f",
                "writeToml(string,string)": "c0865ba7",
                "writeToml(string,string,string)": "51ac6a33"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/console.sol": {
      "console": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/console.sol\":\"console\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220cf510ac317d686f8052c2760a24c07c37cbda601d5e0bc7249d18aa14f39004d64736f6c63430008170033",
                "sourceMap": "66:67248:15:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea2646970667358221220cf510ac317d686f8052c2760a24c07c37cbda601d5e0bc7249d18aa14f39004d64736f6c63430008170033",
                "sourceMap": "66:67248:15:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/interfaces/IERC165.sol": {
      "IERC165": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "supportsInterface",
                "inputs": [
                  {
                    "name": "interfaceID",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "supportsInterface(bytes4)": "01ffc9a7"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/interfaces/IERC20.sol": {
      "IERC20": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "allowance",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "approve",
                "inputs": [
                  {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "balanceOf",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "decimals",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "name",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "symbol",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "totalSupply",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "transfer",
                "inputs": [
                  {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "transferFrom",
                "inputs": [
                  {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "event",
                "name": "Approval",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Transfer",
                "inputs": [
                  {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.This includes the optional name, symbol, and decimals metadata.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set, where `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`).\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Be aware of front-running risks: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the remaining number of tokens that `spender` is allowed to spend on behalf of `owner`\"},\"approve(address,uint256)\":{\"notice\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\"},\"balanceOf(address)\":{\"notice\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"notice\":\"Returns the decimals places of the token.\"},\"name()\":{\"notice\":\"Returns the name of the token.\"},\"symbol()\":{\"notice\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"notice\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"notice\":\"Moves `amount` tokens from the caller's account to `to`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "allowance(address,address)": "dd62ed3e",
                "approve(address,uint256)": "095ea7b3",
                "balanceOf(address)": "70a08231",
                "decimals()": "313ce567",
                "name()": "06fdde03",
                "symbol()": "95d89b41",
                "totalSupply()": "18160ddd",
                "transfer(address,uint256)": "a9059cbb",
                "transferFrom(address,address,uint256)": "23b872dd"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/interfaces/IERC721.sol": {
      "IERC721": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "approve",
                "inputs": [
                  {
                    "name": "_approved",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "balanceOf",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getApproved",
                "inputs": [
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "isApprovedForAll",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_operator",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "ownerOf",
                "inputs": [
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "safeTransferFrom",
                "inputs": [
                  {
                    "name": "_from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "safeTransferFrom",
                "inputs": [
                  {
                    "name": "_from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "setApprovalForAll",
                "inputs": [
                  {
                    "name": "_operator",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_approved",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "supportsInterface",
                "inputs": [
                  {
                    "name": "interfaceID",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "transferFrom",
                "inputs": [
                  {
                    "name": "_from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "event",
                "name": "Approval",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_approved",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "ApprovalForAll",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_approved",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Transfer",
                "inputs": [
                  {
                    "name": "_from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721 Note: the ERC-165 identifier for this interface is 0x80ac58cd.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or reaffirmed. The zero address indicates there is no approved address. When a Transfer event emits, this also indicates that the approved address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner. The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism. This event emits when NFTs are created (`from` == 0) and destroyed (`to` == 0). Exception: during contract creation, any number of NFTs may be created and assigned without emitting Transfer. At the time of any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "approve(address,uint256)": "095ea7b3",
                "balanceOf(address)": "70a08231",
                "getApproved(uint256)": "081812fc",
                "isApprovedForAll(address,address)": "e985e9c5",
                "ownerOf(uint256)": "6352211e",
                "safeTransferFrom(address,address,uint256)": "42842e0e",
                "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
                "setApprovalForAll(address,bool)": "a22cb465",
                "supportsInterface(bytes4)": "01ffc9a7",
                "transferFrom(address,address,uint256)": "23b872dd"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ],
      "IERC721Enumerable": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "approve",
                "inputs": [
                  {
                    "name": "_approved",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "balanceOf",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getApproved",
                "inputs": [
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "isApprovedForAll",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_operator",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "ownerOf",
                "inputs": [
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "safeTransferFrom",
                "inputs": [
                  {
                    "name": "_from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "safeTransferFrom",
                "inputs": [
                  {
                    "name": "_from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "setApprovalForAll",
                "inputs": [
                  {
                    "name": "_operator",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_approved",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "supportsInterface",
                "inputs": [
                  {
                    "name": "interfaceID",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "tokenByIndex",
                "inputs": [
                  {
                    "name": "_index",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "tokenOfOwnerByIndex",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_index",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "totalSupply",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "transferFrom",
                "inputs": [
                  {
                    "name": "_from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "event",
                "name": "Approval",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_approved",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "ApprovalForAll",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_approved",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Transfer",
                "inputs": [
                  {
                    "name": "_from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721 Note: the ERC-165 identifier for this interface is 0x780e9d63.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or reaffirmed. The zero address indicates there is no approved address. When a Transfer event emits, this also indicates that the approved address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner. The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism. This event emits when NFTs are created (`from` == 0) and destroyed (`to` == 0). Exception: during contract creation, any number of NFTs may be created and assigned without emitting Transfer. At the time of any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise\"}},\"tokenByIndex(uint256)\":{\"details\":\"Throws if `_index` >= `totalSupply()`.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT, (sort order not specified)\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Throws if `_index` >= `balanceOf(_owner)` or if `_owner` is the zero address, representing invalid NFTs.\",\"params\":{\"_index\":\"A counter less than `balanceOf(_owner)`\",\"_owner\":\"An address where we are interested in NFTs owned by them\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT assigned to `_owner`, (sort order not specified)\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"A count of valid NFTs tracked by this contract, where each one of them has an assigned and queryable owner not equal to the zero address\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"tokenByIndex(uint256)\":{\"notice\":\"Enumerate valid NFTs\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"notice\":\"Enumerate NFTs assigned to an owner\"},\"totalSupply()\":{\"notice\":\"Count NFTs tracked by this contract\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IERC721.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "approve(address,uint256)": "095ea7b3",
                "balanceOf(address)": "70a08231",
                "getApproved(uint256)": "081812fc",
                "isApprovedForAll(address,address)": "e985e9c5",
                "ownerOf(uint256)": "6352211e",
                "safeTransferFrom(address,address,uint256)": "42842e0e",
                "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
                "setApprovalForAll(address,bool)": "a22cb465",
                "supportsInterface(bytes4)": "01ffc9a7",
                "tokenByIndex(uint256)": "4f6ccce7",
                "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
                "totalSupply()": "18160ddd",
                "transferFrom(address,address,uint256)": "23b872dd"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ],
      "IERC721Metadata": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "approve",
                "inputs": [
                  {
                    "name": "_approved",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "balanceOf",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getApproved",
                "inputs": [
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "isApprovedForAll",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_operator",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "name",
                "inputs": [],
                "outputs": [
                  {
                    "name": "_name",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "ownerOf",
                "inputs": [
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "safeTransferFrom",
                "inputs": [
                  {
                    "name": "_from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "safeTransferFrom",
                "inputs": [
                  {
                    "name": "_from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "setApprovalForAll",
                "inputs": [
                  {
                    "name": "_operator",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_approved",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "supportsInterface",
                "inputs": [
                  {
                    "name": "interfaceID",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "symbol",
                "inputs": [],
                "outputs": [
                  {
                    "name": "_symbol",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "tokenURI",
                "inputs": [
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "transferFrom",
                "inputs": [
                  {
                    "name": "_from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "event",
                "name": "Approval",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_approved",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "ApprovalForAll",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_approved",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Transfer",
                "inputs": [
                  {
                    "name": "_from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721 Note: the ERC-165 identifier for this interface is 0x5b5e139f.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or reaffirmed. The zero address indicates there is no approved address. When a Transfer event emits, this also indicates that the approved address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner. The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism. This event emits when NFTs are created (`from` == 0) and destroyed (`to` == 0). Exception: during contract creation, any number of NFTs may be created and assigned without emitting Transfer. At the time of any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise\"}},\"tokenURI(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC 3986. The URI may point to a JSON file that conforms to the \\\"ERC721 Metadata JSON Schema\\\".\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"name()\":{\"notice\":\"A descriptive name for a collection of NFTs in this contract\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"symbol()\":{\"notice\":\"An abbreviated name for NFTs in this contract\"},\"tokenURI(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given asset.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IERC721.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "approve(address,uint256)": "095ea7b3",
                "balanceOf(address)": "70a08231",
                "getApproved(uint256)": "081812fc",
                "isApprovedForAll(address,address)": "e985e9c5",
                "name()": "06fdde03",
                "ownerOf(uint256)": "6352211e",
                "safeTransferFrom(address,address,uint256)": "42842e0e",
                "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
                "setApprovalForAll(address,bool)": "a22cb465",
                "supportsInterface(bytes4)": "01ffc9a7",
                "symbol()": "95d89b41",
                "tokenURI(uint256)": "c87b56dd",
                "transferFrom(address,address,uint256)": "23b872dd"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ],
      "IERC721TokenReceiver": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "onERC721Received",
                "inputs": [
                  {
                    "name": "_operator",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "_data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "stateMutability": "nonpayable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Note: the ERC-165 identifier for this interface is 0x150b7a02.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the contract address is always the message sender.\",\"params\":{\"_data\":\"Additional data with no specified format\",\"_from\":\"The address which previously owned the token\",\"_operator\":\"The address which called `safeTransferFrom` function\",\"_tokenId\":\"The NFT identifier which is being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`  unless throwing\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of an NFT\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IERC721.sol\":\"IERC721TokenReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "onERC721Received(address,address,uint256,bytes)": "150b7a02"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/interfaces/IMulticall3.sol": {
      "IMulticall3": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "aggregate",
                "inputs": [
                  {
                    "name": "calls",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Call[]",
                    "components": [
                      {
                        "name": "target",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "callData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "returnData",
                    "type": "bytes[]",
                    "internalType": "bytes[]"
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "aggregate3",
                "inputs": [
                  {
                    "name": "calls",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Call3[]",
                    "components": [
                      {
                        "name": "target",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "allowFailure",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "callData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "returnData",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Result[]",
                    "components": [
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "returnData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "aggregate3Value",
                "inputs": [
                  {
                    "name": "calls",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Call3Value[]",
                    "components": [
                      {
                        "name": "target",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "allowFailure",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "value",
                        "type": "uint256",
                        "internalType": "uint256"
                      },
                      {
                        "name": "callData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "returnData",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Result[]",
                    "components": [
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "returnData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "blockAndAggregate",
                "inputs": [
                  {
                    "name": "calls",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Call[]",
                    "components": [
                      {
                        "name": "target",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "callData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "blockHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "returnData",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Result[]",
                    "components": [
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "returnData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "getBasefee",
                "inputs": [],
                "outputs": [
                  {
                    "name": "basefee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlockHash",
                "inputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "blockHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getBlockNumber",
                "inputs": [],
                "outputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getChainId",
                "inputs": [],
                "outputs": [
                  {
                    "name": "chainid",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getCurrentBlockCoinbase",
                "inputs": [],
                "outputs": [
                  {
                    "name": "coinbase",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getCurrentBlockDifficulty",
                "inputs": [],
                "outputs": [
                  {
                    "name": "difficulty",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getCurrentBlockGasLimit",
                "inputs": [],
                "outputs": [
                  {
                    "name": "gaslimit",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getCurrentBlockTimestamp",
                "inputs": [],
                "outputs": [
                  {
                    "name": "timestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getEthBalance",
                "inputs": [
                  {
                    "name": "addr",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "balance",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getLastBlockHash",
                "inputs": [],
                "outputs": [
                  {
                    "name": "blockHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "tryAggregate",
                "inputs": [
                  {
                    "name": "requireSuccess",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "calls",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Call[]",
                    "components": [
                      {
                        "name": "target",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "callData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "returnData",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Result[]",
                    "components": [
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "returnData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "tryBlockAndAggregate",
                "inputs": [
                  {
                    "name": "requireSuccess",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "calls",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Call[]",
                    "components": [
                      {
                        "name": "target",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "callData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "outputs": [
                  {
                    "name": "blockNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "blockHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "returnData",
                    "type": "tuple[]",
                    "internalType": "struct IMulticall3.Result[]",
                    "components": [
                      {
                        "name": "success",
                        "type": "bool",
                        "internalType": "bool"
                      },
                      {
                        "name": "returnData",
                        "type": "bytes",
                        "internalType": "bytes"
                      }
                    ]
                  }
                ],
                "stateMutability": "payable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Call3[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Call3Value[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3Value\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"blockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBasefee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"basefee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockCoinbase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"coinbase\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gaslimit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryAggregate\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryBlockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct IMulticall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IMulticall3.sol\":\"IMulticall3\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "aggregate((address,bytes)[])": "252dba42",
                "aggregate3((address,bool,bytes)[])": "82ad56cb",
                "aggregate3Value((address,bool,uint256,bytes)[])": "174dea71",
                "blockAndAggregate((address,bytes)[])": "c3077fa9",
                "getBasefee()": "3e64a696",
                "getBlockHash(uint256)": "ee82ac5e",
                "getBlockNumber()": "42cbb15c",
                "getChainId()": "3408e470",
                "getCurrentBlockCoinbase()": "a8b0574e",
                "getCurrentBlockDifficulty()": "72425d9d",
                "getCurrentBlockGasLimit()": "86d516e8",
                "getCurrentBlockTimestamp()": "0f28c97d",
                "getEthBalance(address)": "4d2301cc",
                "getLastBlockHash()": "27e86d6e",
                "tryAggregate(bool,(address,bytes)[])": "bce38bd7",
                "tryBlockAndAggregate(bool,(address,bytes)[])": "399542e9"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/mocks/MockERC20.sol": {
      "MockERC20": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "DOMAIN_SEPARATOR",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "allowance",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "approve",
                "inputs": [
                  {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "balanceOf",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "decimals",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "initialize",
                "inputs": [
                  {
                    "name": "name_",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "symbol_",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "decimals_",
                    "type": "uint8",
                    "internalType": "uint8"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "name",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "nonces",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "permit",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "deadline",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                  },
                  {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "symbol",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "totalSupply",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "transfer",
                "inputs": [
                  {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "transferFrom",
                "inputs": [
                  {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "event",
                "name": "Approval",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Transfer",
                "inputs": [
                  {
                    "name": "from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Forked from: https://github.com/transmissions11/solmate/blob/0384dbaaa4fcb5715738a9254a7c0a4cb62cf458/src/tokens/ERC20.sol\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set, where `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`).\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Be aware of front-running risks: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\"},\"initialize(string,string,uint8)\":{\"details\":\"To hide constructor warnings across solc versions due to different constructor visibility requirements and syntaxes, we add an initialization function that can be called only once.\"}},\"stateVariables\":{\"initialized\":{\"details\":\"A bool to track whether the contract has been initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the remaining number of tokens that `spender` is allowed to spend on behalf of `owner`\"},\"approve(address,uint256)\":{\"notice\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\"},\"decimals()\":{\"notice\":\"Returns the decimals places of the token.\"},\"name()\":{\"notice\":\"Returns the name of the token.\"},\"symbol()\":{\"notice\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"notice\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"notice\":\"Moves `amount` tokens from the caller's account to `to`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance.\"}},\"notice\":\"This is a mock contract of the ERC20 standard for testing purposes only, it SHOULD NOT be used in production.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/mocks/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 24580,
                  "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
                  "label": "_name",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_string_storage"
                },
                {
                  "astId": 24582,
                  "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
                  "label": "_symbol",
                  "offset": 0,
                  "slot": "1",
                  "type": "t_string_storage"
                },
                {
                  "astId": 24584,
                  "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
                  "label": "_decimals",
                  "offset": 0,
                  "slot": "2",
                  "type": "t_uint8"
                },
                {
                  "astId": 24613,
                  "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
                  "label": "_totalSupply",
                  "offset": 0,
                  "slot": "3",
                  "type": "t_uint256"
                },
                {
                  "astId": 24617,
                  "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
                  "label": "_balanceOf",
                  "offset": 0,
                  "slot": "4",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "astId": 24623,
                  "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
                  "label": "_allowance",
                  "offset": 0,
                  "slot": "5",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
                },
                {
                  "astId": 24664,
                  "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
                  "label": "INITIAL_CHAIN_ID",
                  "offset": 0,
                  "slot": "6",
                  "type": "t_uint256"
                },
                {
                  "astId": 24666,
                  "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
                  "label": "INITIAL_DOMAIN_SEPARATOR",
                  "offset": 0,
                  "slot": "7",
                  "type": "t_bytes32"
                },
                {
                  "astId": 24670,
                  "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
                  "label": "nonces",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "astId": 24673,
                  "contract": "lib/forge-std/src/mocks/MockERC20.sol:MockERC20",
                  "label": "initialized",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_bool"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(address => uint256))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_address,t_uint256)"
                },
                "t_mapping(t_address,t_uint256)": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => uint256)",
                  "numberOfBytes": "32",
                  "value": "t_uint256"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                },
                "t_uint8": {
                  "encoding": "inplace",
                  "label": "uint8",
                  "numberOfBytes": "1"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "6080806040523461001657610e0b908161001b8239f35b5f80fdfe6080604090808252600480361015610015575f80fd5b5f3560e01c91826306fdde0314610a4057508163095ea7b3146109d25781631624f6c61461067057816318160ddd1461065257816323b872dd14610572578163313ce567146105515781633644e5151461052e57816370a08231146104f95781637ecebe00146104c257816395d89b41146103e4578163a9059cbb14610353578163d505accf146100fb575063dd62ed3e146100af575f80fd5b346100f757806003193601126100f7576020906100ca610ab1565b6100d2610ac7565b9060018060a01b038091165f5260058452825f2091165f528252805f20549051908152f35b5f80fd5b9050346100f75760e03660031901126100f757610116610ab1565b61011e610ac7565b9260443590606435936084359360ff85168095036100f75742861061031057610145610c51565b9660018060a01b0380921696875f5260209660088852855f20998a549a5f198c146102fd5760018c019055865192858a8501957f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c987528c8a870152169b8c606086015289608086015260a085015260c084015260c0835260e0830167ffffffffffffffff94848210868311176102ea578189528451902061010085019261190160f01b845261010286015261012285015260428152610160840194818610908611176102d757848852519020835261018082015260a4356101a082015260c4356101c0909101525f808052869160809060015afa156102cd575f511690811515806102c4575b156102905750907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259392915f5260058352805f20865f52835281815f205551908152a3005b825162461bcd60e51b8152908101859052600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606490fd5b5085821461024b565b82513d5f823e3d90fd5b604187634e487b7160e01b5f525260245ffd5b604188634e487b7160e01b5f525260245ffd5b601187634e487b7160e01b5f525260245ffd5b506020606492519162461bcd60e51b8352820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152fd5b82346100f757806003193601126100f75760209161036f610ab1565b60243590335f5282855261038682855f2054610d0f565b335f52838652845f205560018060a01b031691825f526103a982855f2054610d7c565b90835f528552835f205582519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b82346100f7575f3660031901126100f75780515f6001805461040581610b69565b8085529160209160018116908115610498575060011461043f575b61043b858761043182880383610add565b5191829182610a6a565b0390f35b60015f90815293507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b838510610485575050505081016020016104318261043b610420565b8054868601840152938201938101610469565b61043b9795508693506020925061043194915060ff191682840152151560051b8201019294610420565b82346100f75760203660031901126100f7576020906001600160a01b036104e7610ab1565b165f5260088252805f20549051908152f35b82346100f75760203660031901126100f7576020916001600160a01b0361051e610ab1565b165f528252805f20549051908152f35b82346100f7575f3660031901126100f75760209061054a610c51565b9051908152f35b82346100f7575f3660031901126100f75760209060ff600254169051908152f35b82346100f75760603660031901126100f75761058c610ab1565b91610595610ac7565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6044359160018060a01b0380961692835f52602096879260058452875f20335f528452875f2054835f19820361062f575b5050855f528684526105fc83895f2054610d0f565b865f52878552885f20551694855f5261061882885f2054610d7c565b90865f528352865f20558551908152a35160018152f35b61063891610d0f565b865f5260058552885f20335f528552885f205589836105e7565b82346100f7575f3660031901126100f7576020906003549051908152f35b9050346100f75760603660031901126100f75767ffffffffffffffff9181358381116100f7576106a39036908401610b13565b926024358181116100f7576106bb9036908501610b13565b926044359260ff84168094036100f75760ff600954166109995750845182811161098657806106ea5f54610b69565b96601f9788811161091b575b5060209088831160011461089a575f9261088f575b50508160011b915f199060031b1c1916175f555b835191821161087c57506001936107368554610b69565b93818511610819575b82939450602091831160011461079c575f92610791575b50505f19600383901b1c191690831b1782555b60ff199081600254161760025546600655610782610c6b565b60075560095416176009555f80f35b015190505f80610756565b90859350601f19831691845f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6925f5b818110610801575084116107e9575b505050811b018255610769565b01515f1960f88460031b161c191690555f80806107dc565b828401518555889690940193602093840193016107cd565b855f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf682840160051c81019560208510610872575b830160051c019486905b86811061086757505061073f565b5f8155018690610859565b909550859061084f565b604190634e487b7160e01b5f525260245ffd5b015190505f8061070b565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639350601f198516905b81811061090357509084600195949392106108eb575b505050811b015f5561071f565b01515f1960f88460031b161c191690555f80806108de565b929360206001819287860151815501950193016108c8565b9091505f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638880850160051c8201926020861061097d575b9085949392910160051c01905b81811061096f57506106f6565b5f8155849350600101610962565b92508192610955565b604182634e487b7160e01b5f525260245ffd5b906020606492519162461bcd60e51b835282015260136024820152721053149150511657d253925512505312569151606a1b6044820152fd5b82346100f757806003193601126100f7576020906109ee610ab1565b602435335f5260058452825f209160018060a01b031691825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8390346100f7575f3660031901126100f75761043b9161043182610a6381610ba1565b0383610add565b602080825282518183018190529093925f5b828110610a9d57505060409293505f838284010152601f8019910116010190565b818101860151848201604001528501610a7c565b600435906001600160a01b03821682036100f757565b602435906001600160a01b03821682036100f757565b90601f8019910116810190811067ffffffffffffffff821117610aff57604052565b634e487b7160e01b5f52604160045260245ffd5b81601f820112156100f75780359067ffffffffffffffff8211610aff5760405192610b48601f8401601f191660200185610add565b828452602083830101116100f757815f926020809301838601378301015290565b90600182811c92168015610b97575b6020831014610b8357565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610b78565b905f915f5490610bb082610b69565b80825291602090600190818116908115610c2c5750600114610bd3575b50505050565b929394505f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563925f935b858510610c1957505050602092500101905f808080610bcd565b8054858501840152938201938101610bff565b92505050602093945060ff929192191683830152151560051b0101905f808080610bcd565b6006544603610c605760075490565b610c68610c6b565b90565b604051610c8281610c7b81610ba1565b0382610add565b6020815191012060405160208101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f835260408201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610aff5760405251902090565b90808210610d37578103908111610d235790565b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b815260206004820152601c60248201527f45524332303a207375627472616374696f6e20756e646572666c6f77000000006044820152606490fd5b90810190818111610d23578110610d905790565b60405162461bcd60e51b815260206004820152601860248201527f45524332303a206164646974696f6e206f766572666c6f7700000000000000006044820152606490fdfea26469706673582212207773c8f72cc5982ee6b2c6027de80d15dd0e0e1658ae84a22eb19d3205b27cef64736f6c63430008170033",
                "sourceMap": "369:7950:21:-:0;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "6080604090808252600480361015610015575f80fd5b5f3560e01c91826306fdde0314610a4057508163095ea7b3146109d25781631624f6c61461067057816318160ddd1461065257816323b872dd14610572578163313ce567146105515781633644e5151461052e57816370a08231146104f95781637ecebe00146104c257816395d89b41146103e4578163a9059cbb14610353578163d505accf146100fb575063dd62ed3e146100af575f80fd5b346100f757806003193601126100f7576020906100ca610ab1565b6100d2610ac7565b9060018060a01b038091165f5260058452825f2091165f528252805f20549051908152f35b5f80fd5b9050346100f75760e03660031901126100f757610116610ab1565b61011e610ac7565b9260443590606435936084359360ff85168095036100f75742861061031057610145610c51565b9660018060a01b0380921696875f5260209660088852855f20998a549a5f198c146102fd5760018c019055865192858a8501957f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c987528c8a870152169b8c606086015289608086015260a085015260c084015260c0835260e0830167ffffffffffffffff94848210868311176102ea578189528451902061010085019261190160f01b845261010286015261012285015260428152610160840194818610908611176102d757848852519020835261018082015260a4356101a082015260c4356101c0909101525f808052869160809060015afa156102cd575f511690811515806102c4575b156102905750907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259392915f5260058352805f20865f52835281815f205551908152a3005b825162461bcd60e51b8152908101859052600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606490fd5b5085821461024b565b82513d5f823e3d90fd5b604187634e487b7160e01b5f525260245ffd5b604188634e487b7160e01b5f525260245ffd5b601187634e487b7160e01b5f525260245ffd5b506020606492519162461bcd60e51b8352820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152fd5b82346100f757806003193601126100f75760209161036f610ab1565b60243590335f5282855261038682855f2054610d0f565b335f52838652845f205560018060a01b031691825f526103a982855f2054610d7c565b90835f528552835f205582519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b82346100f7575f3660031901126100f75780515f6001805461040581610b69565b8085529160209160018116908115610498575060011461043f575b61043b858761043182880383610add565b5191829182610a6a565b0390f35b60015f90815293507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b838510610485575050505081016020016104318261043b610420565b8054868601840152938201938101610469565b61043b9795508693506020925061043194915060ff191682840152151560051b8201019294610420565b82346100f75760203660031901126100f7576020906001600160a01b036104e7610ab1565b165f5260088252805f20549051908152f35b82346100f75760203660031901126100f7576020916001600160a01b0361051e610ab1565b165f528252805f20549051908152f35b82346100f7575f3660031901126100f75760209061054a610c51565b9051908152f35b82346100f7575f3660031901126100f75760209060ff600254169051908152f35b82346100f75760603660031901126100f75761058c610ab1565b91610595610ac7565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6044359160018060a01b0380961692835f52602096879260058452875f20335f528452875f2054835f19820361062f575b5050855f528684526105fc83895f2054610d0f565b865f52878552885f20551694855f5261061882885f2054610d7c565b90865f528352865f20558551908152a35160018152f35b61063891610d0f565b865f5260058552885f20335f528552885f205589836105e7565b82346100f7575f3660031901126100f7576020906003549051908152f35b9050346100f75760603660031901126100f75767ffffffffffffffff9181358381116100f7576106a39036908401610b13565b926024358181116100f7576106bb9036908501610b13565b926044359260ff84168094036100f75760ff600954166109995750845182811161098657806106ea5f54610b69565b96601f9788811161091b575b5060209088831160011461089a575f9261088f575b50508160011b915f199060031b1c1916175f555b835191821161087c57506001936107368554610b69565b93818511610819575b82939450602091831160011461079c575f92610791575b50505f19600383901b1c191690831b1782555b60ff199081600254161760025546600655610782610c6b565b60075560095416176009555f80f35b015190505f80610756565b90859350601f19831691845f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6925f5b818110610801575084116107e9575b505050811b018255610769565b01515f1960f88460031b161c191690555f80806107dc565b828401518555889690940193602093840193016107cd565b855f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf682840160051c81019560208510610872575b830160051c019486905b86811061086757505061073f565b5f8155018690610859565b909550859061084f565b604190634e487b7160e01b5f525260245ffd5b015190505f8061070b565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639350601f198516905b81811061090357509084600195949392106108eb575b505050811b015f5561071f565b01515f1960f88460031b161c191690555f80806108de565b929360206001819287860151815501950193016108c8565b9091505f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638880850160051c8201926020861061097d575b9085949392910160051c01905b81811061096f57506106f6565b5f8155849350600101610962565b92508192610955565b604182634e487b7160e01b5f525260245ffd5b906020606492519162461bcd60e51b835282015260136024820152721053149150511657d253925512505312569151606a1b6044820152fd5b82346100f757806003193601126100f7576020906109ee610ab1565b602435335f5260058452825f209160018060a01b031691825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8390346100f7575f3660031901126100f75761043b9161043182610a6381610ba1565b0383610add565b602080825282518183018190529093925f5b828110610a9d57505060409293505f838284010152601f8019910116010190565b818101860151848201604001528501610a7c565b600435906001600160a01b03821682036100f757565b602435906001600160a01b03821682036100f757565b90601f8019910116810190811067ffffffffffffffff821117610aff57604052565b634e487b7160e01b5f52604160045260245ffd5b81601f820112156100f75780359067ffffffffffffffff8211610aff5760405192610b48601f8401601f191660200185610add565b828452602083830101116100f757815f926020809301838601378301015290565b90600182811c92168015610b97575b6020831014610b8357565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610b78565b905f915f5490610bb082610b69565b80825291602090600190818116908115610c2c5750600114610bd3575b50505050565b929394505f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563925f935b858510610c1957505050602092500101905f808080610bcd565b8054858501840152938201938101610bff565b92505050602093945060ff929192191683830152151560051b0101905f808080610bcd565b6006544603610c605760075490565b610c68610c6b565b90565b604051610c8281610c7b81610ba1565b0382610add565b6020815191012060405160208101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f835260408201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610aff5760405251902090565b90808210610d37578103908111610d235790565b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b815260206004820152601c60248201527f45524332303a207375627472616374696f6e20756e646572666c6f77000000006044820152606490fd5b90810190818111610d23578110610d905790565b60405162461bcd60e51b815260206004820152601860248201527f45524332303a206164646974696f6e206f766572666c6f7700000000000000006044820152606490fdfea26469706673582212207773c8f72cc5982ee6b2c6027de80d15dd0e0e1658ae84a22eb19d3205b27cef64736f6c63430008170033",
                "sourceMap": "369:7950:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;1659:10;369:7950;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:7950:21;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4416:15;4404:27;;369:7950;;4617:18;;:::i;:::-;369:7950;;;;;;;;;;;;;;;5026:6;369:7950;;;;;;;;;;;;;;;;;;;;;;4692:413;;;;;369:7950;4732:157;369:7950;;;;;;;;;;;;;;;;;;;;;;;;;;;;4692:413;;369:7950;;;;;;;;;;;;;;;;;;;4657:470;;4547:598;;;369:7950;;;;;;;;;;;;;;;4547:598;;369:7950;;;;;;;;;;;;;;;;;4520:639;;369:7950;;;;;;;;;;;;;;;;;;;;4497:717;;;369:7950;;;;;4497:717;;;;;369:7950;4497:717;369:7950;5233:30;;;;:59;;;369:7950;;;;;;5383:31;369:7950;;;;;5322:10;369:7950;;;;;;;;;;;;;;;;;;;5383:31;369:7950;;;;-1:-1:-1;;;369:7950:21;;;;;;;;;;;;;-1:-1:-1;;;369:7950:21;;;;;;;5233:59;5267:25;;;;5233:59;;4497:717;369:7950;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3420:10;;369:7950;;;;;3404:36;369:7950;;;;;3404:36;:::i;:::-;3420:10;369:7950;;;;;;;;;;;;;;;;;;;3467:28;369:7950;;;;;3467:28;:::i;:::-;369:7950;;;;;;;;;;;;;;;3511:32;3420:10;;3511:32;;369:7950;;;;;;;;;;;;-1:-1:-1;;369:7950:21;;;;;;;857:7;;369:7950;;;;:::i;:::-;;;;;;;857:7;369:7950;;;857:7;;;;369:7950;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;857:7;369:7950;;;;;-1:-1:-1;369:7950:21;;;;;;;-1:-1:-1;;;;369:7950:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:7950:21;;;;;;-1:-1:-1;;;;;369:7950:21;;:::i;:::-;;;;1970:41;369:7950;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:7950:21;;;;;;-1:-1:-1;;;;;369:7950:21;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:7950:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;369:7950:21;;;;;;;953:9;369:7950;;;;;;;;;;;;;;;-1:-1:-1;;369:7950:21;;;;;;:::i;:::-;;;;:::i;:::-;3995:26;369:7950;;;;;;;;;;;;;;;;;;;3709:10;369:7950;;;;;3726:10;369:7950;;;;;;;;;;;3788:22;;3784:80;;369:7950;;;;;;;;;3894:30;369:7950;;;;;3894:30;:::i;:::-;369:7950;;;;;;;;;;;;;;;3951:28;369:7950;;;;;3951:28;:::i;:::-;369:7950;;;;;;;;;;;;;;;3995:26;369:7950;;;;;3784:80;3843:21;;;:::i;:::-;369:7950;;;3709:10;369:7950;;;;;3726:10;369:7950;;;;;;;;3784:80;;;;369:7950;;;;;;;-1:-1:-1;;369:7950:21;;;;;;1403:12;369:7950;;;;;;;;;;;;;;;-1:-1:-1;;369:7950:21;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;2611:11;369:7950;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2680:17;;369:7950;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;369:7950:21;;;;;;;;;;;;;;;;;;2707:21;369:7950;;;2707:21;369:7950;7884:53;2739:33;369:7950;2809:24;;:::i;:::-;2782:51;369:7950;2611:11;369:7950;;;2611:11;369:7950;;;;;;;;-1:-1:-1;369:7950:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;369:7950:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;369:7950:21;;;;;;;;;;;;;;;;;;;;-1:-1:-1;369:7950:21;;;;;;;;;;;-1:-1:-1;;;369:7950:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;369:7950:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;369:7950:21;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3167:10;369:7950;;3156:10;369:7950;;;;;;;;;;;;;;;;;;;;;;;;;;;;3212:37;3167:10;;3212:37;;369:7950;;;;;;;;;;;;;-1:-1:-1;;369:7950:21;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;369:7950:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;369:7950:21;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;369:7950:21;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;369:7950:21;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;369:7950:21;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5427:178;5528:16;369:7950;7884:53;5510:34;:88;;5547:24;369:7950;5427:178;:::o;5510:88::-;5574:24;;:::i;:::-;5427:178;:::o;5611:404::-;369:7950;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;5866:23;369:7950;;;5725:273;;369:7950;5753:95;369:7950;;;;;;5907:14;369:7950;;;;7884:53;369:7950;;;;5979:4;369:7950;;;;;5725:273;;369:7950;;;;;;;;;;;;;;;5702:306;;5611:404;:::o;7038:154::-;;7124:6;;;369:7950;;;;;;;;;7038:154;:::o;369:7950::-;;;;-1:-1:-1;369:7950:21;;;;;-1:-1:-1;369:7950:21;;;;-1:-1:-1;;;369:7950:21;;;;;;;;;;;;;;;;;;;;6859:173;;369:7950;;;;;;;;6972:6;;369:7950;;6859:173;:::o;369:7950::-;;;-1:-1:-1;;;369:7950:21;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "DOMAIN_SEPARATOR()": "3644e515",
                "allowance(address,address)": "dd62ed3e",
                "approve(address,uint256)": "095ea7b3",
                "balanceOf(address)": "70a08231",
                "decimals()": "313ce567",
                "initialize(string,string,uint8)": "1624f6c6",
                "name()": "06fdde03",
                "nonces(address)": "7ecebe00",
                "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
                "symbol()": "95d89b41",
                "totalSupply()": "18160ddd",
                "transfer(address,uint256)": "a9059cbb",
                "transferFrom(address,address,uint256)": "23b872dd"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/mocks/MockERC721.sol": {
      "MockERC721": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "approve",
                "inputs": [
                  {
                    "name": "spender",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "balanceOf",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getApproved",
                "inputs": [
                  {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "initialize",
                "inputs": [
                  {
                    "name": "name_",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "symbol_",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "isApprovedForAll",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "name",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "ownerOf",
                "inputs": [
                  {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "safeTransferFrom",
                "inputs": [
                  {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "safeTransferFrom",
                "inputs": [
                  {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "setApprovalForAll",
                "inputs": [
                  {
                    "name": "operator",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "approved",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "supportsInterface",
                "inputs": [
                  {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "symbol",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "tokenURI",
                "inputs": [
                  {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "transferFrom",
                "inputs": [
                  {
                    "name": "from",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "to",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "id",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "event",
                "name": "Approval",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_approved",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "ApprovalForAll",
                "inputs": [
                  {
                    "name": "_owner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_operator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_approved",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Transfer",
                "inputs": [
                  {
                    "name": "_from",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "_tokenId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Forked from: https://github.com/transmissions11/solmate/blob/0384dbaaa4fcb5715738a9254a7c0a4cb62cf458/src/tokens/ERC721.sol\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or reaffirmed. The zero address indicates there is no approved address. When a Transfer event emits, this also indicates that the approved address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner. The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism. This event emits when NFTs are created (`from` == 0) and destroyed (`to` == 0). Exception: during contract creation, any number of NFTs may be created and assigned without emitting Transfer. At the time of any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"initialize(string,string)\":{\"details\":\"To hide constructor warnings across solc versions due to different constructor visibility requirements and syntaxes, we add an initialization function that can be called only once.\"}},\"stateVariables\":{\"initialized\":{\"details\":\"A bool to track whether the contract has been initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"name()\":{\"notice\":\"A descriptive name for a collection of NFTs in this contract\"},\"symbol()\":{\"notice\":\"An abbreviated name for NFTs in this contract\"}},\"notice\":\"This is a mock contract of the ERC721 standard for testing purposes only, it SHOULD NOT be used in production.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/mocks/MockERC721.sol\":\"MockERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 25158,
                  "contract": "lib/forge-std/src/mocks/MockERC721.sol:MockERC721",
                  "label": "_name",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_string_storage"
                },
                {
                  "astId": 25160,
                  "contract": "lib/forge-std/src/mocks/MockERC721.sol:MockERC721",
                  "label": "_symbol",
                  "offset": 0,
                  "slot": "1",
                  "type": "t_string_storage"
                },
                {
                  "astId": 25191,
                  "contract": "lib/forge-std/src/mocks/MockERC721.sol:MockERC721",
                  "label": "_ownerOf",
                  "offset": 0,
                  "slot": "2",
                  "type": "t_mapping(t_uint256,t_address)"
                },
                {
                  "astId": 25195,
                  "contract": "lib/forge-std/src/mocks/MockERC721.sol:MockERC721",
                  "label": "_balanceOf",
                  "offset": 0,
                  "slot": "3",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "astId": 25246,
                  "contract": "lib/forge-std/src/mocks/MockERC721.sol:MockERC721",
                  "label": "_getApproved",
                  "offset": 0,
                  "slot": "4",
                  "type": "t_mapping(t_uint256,t_address)"
                },
                {
                  "astId": 25252,
                  "contract": "lib/forge-std/src/mocks/MockERC721.sol:MockERC721",
                  "label": "_isApprovedForAll",
                  "offset": 0,
                  "slot": "5",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
                },
                {
                  "astId": 25285,
                  "contract": "lib/forge-std/src/mocks/MockERC721.sol:MockERC721",
                  "label": "initialized",
                  "offset": 0,
                  "slot": "6",
                  "type": "t_bool"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_mapping(t_address,t_bool)": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => bool)",
                  "numberOfBytes": "32",
                  "value": "t_bool"
                },
                "t_mapping(t_address,t_mapping(t_address,t_bool))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(address => bool))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_address,t_bool)"
                },
                "t_mapping(t_address,t_uint256)": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => uint256)",
                  "numberOfBytes": "32",
                  "value": "t_uint256"
                },
                "t_mapping(t_uint256,t_address)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => address)",
                  "numberOfBytes": "32",
                  "value": "t_address"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "6080806040523461001657610e84908161001b8239f35b5f80fdfe6080604090808252600480361015610015575f80fd5b5f3560e01c91826301ffc9a714610a555750816306fdde03146109a8578163081812fc1461097a578163095ea7b3146108cb57816323b872dd146108b957816342842e0e146107ff5781634cd88b76146104cd5781636352211e1461046157816370a08231146103f157816395d89b411461030a578163a22cb4651461028b578163b88d4fde1461016757508063c87b56dd1461010b5763e985e9c5146100ba575f80fd5b346101075780600319360112610107576020906100d5610afd565b6100dd610b13565b9060018060a01b038091165f5260058452825f2091165f52825260ff815f20541690519015158152f35b5f80fd5b5034610107576020906020600319360112610107578051809260208252606051908160208401525f5b8281106101525750505f828201840152601f01601f19168101030190f35b60808101518682018601528593508101610134565b905060803660031901126101075761017d610afd565b90610186610b13565b60443560643567ffffffffffffffff81116101075736602382011215610107576101b99036906024818701359101610b94565b916101c5828287610c6d565b803b159485156101db575b6101d986610e0f565b005b6020939495505f60018060a01b0380926102248a5198899788968794630a85bd0160e11b9d8e875233908701521660248501526044840152608060648401526084830190610abf565b0393165af1908115610281576101d993505f91610252575b506001600160e01b031916145f808080806101d0565b610274915060203d60201161027a575b61026c8183610b5e565b810190610def565b5f61023c565b503d610262565b83513d5f823e3d90fd5b82346101075780600319360112610107576102a4610afd565b906024359081151580920361010757335f526005602052805f209260018060a01b031692835f52602052805f2060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b8234610107575f366003190112610107578051905f90826001926001549361033185610bf8565b90818452602095866001821691825f146103cf575050600114610374575b50506103709291610361910385610b5e565b51928284938452830190610abf565b0390f35b9085925060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f925b8284106103b7575050508201018161036161034f565b8054848a0186015288955087949093019281016103a1565b60ff19168682015292151560051b85019092019250839150610361905061034f565b8234610107576020366003190112610107576001600160a01b03610413610afd565b16801561042f57602092505f5260038252805f20549051908152f35b815162461bcd60e51b8152602081850152600c60248201526b5a45524f5f4144445245535360a01b6044820152606490fd5b9050346101075760203660031901126101075780355f9081526002602052829020546001600160a01b031690811561049d575060209151908152f35b606490602084519162461bcd60e51b8352820152600a6024820152691393d517d3525395115160b21b6044820152fd5b823461010757806003193601126101075767ffffffffffffffff8235818111610107576104fd9036908501610bda565b92602435828111610107576105159036908301610bda565b9260ff600654166107c6575083518281116107b357806105355f54610bf8565b95601f96878111610748575b506020908783116001146106c7575f926106bc575b50508160011b915f199060031b1c1916175f555b82519182116106a957506001916105818354610bf8565b848111610647575b5060209382116001146105ce57928192935f926105c3575b50505f19600383901b1c191690821b1781555b60ff1960065416176006555f80f35b0151905083806105a1565b601f19821693835f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f5b868110610631575083859610610619575b505050811b0181556105b4565b01515f1960f88460031b161c1916905583808061060c565b81830151845592850192602092830192016105fb565b835f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68580850160051c820192602086106106a0575b0160051c019084905b828110610695575050610589565b5f8155018490610687565b9250819261067e565b604190634e487b7160e01b5f525260245ffd5b015190508680610556565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639350601f198516905b8181106107305750908460019594939210610718575b505050811b015f5561056a565b01515f1960f88460031b161c1916905586808061070b565b929360206001819287860151815501950193016106f5565b9091505f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638780850160051c820192602086106107aa575b9085949392910160051c01905b81811061079c5750610541565b5f815584935060010161078f565b92508192610782565b604182634e487b7160e01b5f525260245ffd5b906020606492519162461bcd60e51b835282015260136024820152721053149150511657d253925512505312569151606a1b6044820152fd5b905061080a36610b29565b906108188282859695610c6d565b803b1593841561082c575b6101d985610e0f565b60209293945060a4905f60018060a01b03809489519788968795630a85bd0160e11b9b8c88523390880152166024860152604485015260806064850152826084850152165af1908115610281576101d993505f9161089a575b506001600160e01b031916145f808080610823565b6108b3915060203d60201161027a5761026c8183610b5e565b5f610885565b6101d96108c536610b29565b91610c6d565b905081600319360112610107576108e0610afd565b9060243592835f52600260205260018060a01b039081815f205416928333148015610957575b61090f90610c30565b855f526020525f20921691826bffffffffffffffffffffffff60a01b8254161790557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a4005b50835f526005602052815f20335f5260205261090f60ff835f2054169050610906565b82346101075760203660031901126101075781602092355f52825260018060a01b03815f2054169051908152f35b8234610107575f366003190112610107578051905f90825f54926109cb84610bf8565b808352602094600190866001821691825f146103cf5750506001146109fc5750506103709291610361910385610b5e565b5f80805286935091907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610a3d575050508201018161036161034f565b8054848a018601528895508794909301928101610a27565b903461010757602036600319011261010757359063ffffffff60e01b8216809203610107576020916301ffc9a760e01b8114908115610aae575b8115610a9d575b5015158152f35b635b5e139f60e01b14905083610a96565b6380ac58cd60e01b81149150610a8f565b91908251928382525f5b848110610ae9575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201610ac9565b600435906001600160a01b038216820361010757565b602435906001600160a01b038216820361010757565b6060906003190112610107576001600160a01b0390600435828116810361010757916024359081168103610107579060443590565b90601f8019910116810190811067ffffffffffffffff821117610b8057604052565b634e487b7160e01b5f52604160045260245ffd5b92919267ffffffffffffffff8211610b805760405191610bbe601f8201601f191660200184610b5e565b829481845281830111610107578281602093845f960137010152565b9080601f8301121561010757816020610bf593359101610b94565b90565b90600182811c92168015610c26575b6020831014610c1257565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610c07565b15610c3757565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b825f5260206002815260018060a01b03926040908480835f2054169416938403610dbe578416938415610d8657610cb690843314908115610d68575b8115610d52575b50610c30565b825f5260038252805f208054908115610d3e575f198092019055845f5260038352815f20908154908114610d3e576001019055845f52600282526004815f20926bffffffffffffffffffffffff60a01b938685825416179055525f209081541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4565b634e487b7160e01b5f52601160045260245ffd5b9050865f5260048452825f20541633145f610cb0565b9050845f5260058452825f20335f52845260ff835f20541690610ca9565b815162461bcd60e51b81526004810184905260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b815162461bcd60e51b815260048101849052600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b9081602091031261010757516001600160e01b0319811681036101075790565b15610e1657565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fdfea26469706673582212204f668412784cec8b29e7004cf69b605014b3f34bc9e54953e3592857c942dc8164736f6c63430008170033",
                "sourceMap": "403:7498:22:-:0;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "6080604090808252600480361015610015575f80fd5b5f3560e01c91826301ffc9a714610a555750816306fdde03146109a8578163081812fc1461097a578163095ea7b3146108cb57816323b872dd146108b957816342842e0e146107ff5781634cd88b76146104cd5781636352211e1461046157816370a08231146103f157816395d89b411461030a578163a22cb4651461028b578163b88d4fde1461016757508063c87b56dd1461010b5763e985e9c5146100ba575f80fd5b346101075780600319360112610107576020906100d5610afd565b6100dd610b13565b9060018060a01b038091165f5260058452825f2091165f52825260ff815f20541690519015158152f35b5f80fd5b5034610107576020906020600319360112610107578051809260208252606051908160208401525f5b8281106101525750505f828201840152601f01601f19168101030190f35b60808101518682018601528593508101610134565b905060803660031901126101075761017d610afd565b90610186610b13565b60443560643567ffffffffffffffff81116101075736602382011215610107576101b99036906024818701359101610b94565b916101c5828287610c6d565b803b159485156101db575b6101d986610e0f565b005b6020939495505f60018060a01b0380926102248a5198899788968794630a85bd0160e11b9d8e875233908701521660248501526044840152608060648401526084830190610abf565b0393165af1908115610281576101d993505f91610252575b506001600160e01b031916145f808080806101d0565b610274915060203d60201161027a575b61026c8183610b5e565b810190610def565b5f61023c565b503d610262565b83513d5f823e3d90fd5b82346101075780600319360112610107576102a4610afd565b906024359081151580920361010757335f526005602052805f209260018060a01b031692835f52602052805f2060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b8234610107575f366003190112610107578051905f90826001926001549361033185610bf8565b90818452602095866001821691825f146103cf575050600114610374575b50506103709291610361910385610b5e565b51928284938452830190610abf565b0390f35b9085925060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f925b8284106103b7575050508201018161036161034f565b8054848a0186015288955087949093019281016103a1565b60ff19168682015292151560051b85019092019250839150610361905061034f565b8234610107576020366003190112610107576001600160a01b03610413610afd565b16801561042f57602092505f5260038252805f20549051908152f35b815162461bcd60e51b8152602081850152600c60248201526b5a45524f5f4144445245535360a01b6044820152606490fd5b9050346101075760203660031901126101075780355f9081526002602052829020546001600160a01b031690811561049d575060209151908152f35b606490602084519162461bcd60e51b8352820152600a6024820152691393d517d3525395115160b21b6044820152fd5b823461010757806003193601126101075767ffffffffffffffff8235818111610107576104fd9036908501610bda565b92602435828111610107576105159036908301610bda565b9260ff600654166107c6575083518281116107b357806105355f54610bf8565b95601f96878111610748575b506020908783116001146106c7575f926106bc575b50508160011b915f199060031b1c1916175f555b82519182116106a957506001916105818354610bf8565b848111610647575b5060209382116001146105ce57928192935f926105c3575b50505f19600383901b1c191690821b1781555b60ff1960065416176006555f80f35b0151905083806105a1565b601f19821693835f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f5b868110610631575083859610610619575b505050811b0181556105b4565b01515f1960f88460031b161c1916905583808061060c565b81830151845592850192602092830192016105fb565b835f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68580850160051c820192602086106106a0575b0160051c019084905b828110610695575050610589565b5f8155018490610687565b9250819261067e565b604190634e487b7160e01b5f525260245ffd5b015190508680610556565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639350601f198516905b8181106107305750908460019594939210610718575b505050811b015f5561056a565b01515f1960f88460031b161c1916905586808061070b565b929360206001819287860151815501950193016106f5565b9091505f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638780850160051c820192602086106107aa575b9085949392910160051c01905b81811061079c5750610541565b5f815584935060010161078f565b92508192610782565b604182634e487b7160e01b5f525260245ffd5b906020606492519162461bcd60e51b835282015260136024820152721053149150511657d253925512505312569151606a1b6044820152fd5b905061080a36610b29565b906108188282859695610c6d565b803b1593841561082c575b6101d985610e0f565b60209293945060a4905f60018060a01b03809489519788968795630a85bd0160e11b9b8c88523390880152166024860152604485015260806064850152826084850152165af1908115610281576101d993505f9161089a575b506001600160e01b031916145f808080610823565b6108b3915060203d60201161027a5761026c8183610b5e565b5f610885565b6101d96108c536610b29565b91610c6d565b905081600319360112610107576108e0610afd565b9060243592835f52600260205260018060a01b039081815f205416928333148015610957575b61090f90610c30565b855f526020525f20921691826bffffffffffffffffffffffff60a01b8254161790557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a4005b50835f526005602052815f20335f5260205261090f60ff835f2054169050610906565b82346101075760203660031901126101075781602092355f52825260018060a01b03815f2054169051908152f35b8234610107575f366003190112610107578051905f90825f54926109cb84610bf8565b808352602094600190866001821691825f146103cf5750506001146109fc5750506103709291610361910385610b5e565b5f80805286935091907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610a3d575050508201018161036161034f565b8054848a018601528895508794909301928101610a27565b903461010757602036600319011261010757359063ffffffff60e01b8216809203610107576020916301ffc9a760e01b8114908115610aae575b8115610a9d575b5015158152f35b635b5e139f60e01b14905083610a96565b6380ac58cd60e01b81149150610a8f565b91908251928382525f5b848110610ae9575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201610ac9565b600435906001600160a01b038216820361010757565b602435906001600160a01b038216820361010757565b6060906003190112610107576001600160a01b0390600435828116810361010757916024359081168103610107579060443590565b90601f8019910116810190811067ffffffffffffffff821117610b8057604052565b634e487b7160e01b5f52604160045260245ffd5b92919267ffffffffffffffff8211610b805760405191610bbe601f8201601f191660200184610b5e565b829481845281830111610107578281602093845f960137010152565b9080601f8301121561010757816020610bf593359101610b94565b90565b90600182811c92168015610c26575b6020831014610c1257565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610c07565b15610c3757565b60405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606490fd5b825f5260206002815260018060a01b03926040908480835f2054169416938403610dbe578416938415610d8657610cb690843314908115610d68575b8115610d52575b50610c30565b825f5260038252805f208054908115610d3e575f198092019055845f5260038352815f20908154908114610d3e576001019055845f52600282526004815f20926bffffffffffffffffffffffff60a01b938685825416179055525f209081541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4565b634e487b7160e01b5f52601160045260245ffd5b9050865f5260048452825f20541633145f610cb0565b9050845f5260058452825f20335f52845260ff835f20541690610ca9565b815162461bcd60e51b81526004810184905260116024820152701253959053125117d49150d25412515395607a1b6044820152606490fd5b815162461bcd60e51b815260048101849052600a60248201526957524f4e475f46524f4d60b01b6044820152606490fd5b9081602091031261010757516001600160e01b0319811681036101075790565b15610e1657565b60405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606490fdfea26469706673582212204f668412784cec8b29e7004cf69b605014b3f34bc9e54953e3592857c942dc8164736f6c63430008170033",
                "sourceMap": "403:7498:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;2195:17;403:7498;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;403:7498:22;;;;;;;;;-1:-1:-1;;403:7498:22;;;;;;;;;;;;;;;;;;;;-1:-1:-1;403:7498:22;;;;;;-1:-1:-1;403:7498:22;;-1:-1:-1;;403:7498:22;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4929:2;;;;;;:::i;:::-;7796:65;;7878:14;;;;4964:175;;403:7498;4943:238;;;:::i;:::-;403:7498;4964:175;403:7498;;;;;;;;;;;;;;;;;;;;;;;;;;5000:69;;;;5042:10;5000:69;;;403:7498;;;;;;;;;;;;;;;;;;;;:::i;:::-;5000:69;403:7498;;5000:69;;;;;;;4943:238;5000:69;;403:7498;5000:69;;;4964:175;-1:-1:-1;;;;;;;403:7498:22;5000:139;4964:175;;;;;;;5000:69;;;;403:7498;5000:69;403:7498;5000:69;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;403:7498;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3547:10;403:7498;;3529:17;403:7498;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3595:46;403:7498;3547:10;3595:46;;403:7498;;;;;;;;-1:-1:-1;;403:7498:22;;;;;;;;873:7;;;403:7498;873:7;403:7498;;;;;:::i;:::-;;;;;;;;873:7;403:7498;;873:7;;403:7498;873:7;;;403:7498;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;873:7;403:7498;;;;;;;;;;;;-1:-1:-1;;;403:7498:22;;;;;;;;;;;;;;;;;;-1:-1:-1;403:7498:22;;;;;;;;;;;-1:-1:-1;;403:7498:22;;;;;;;;;;;;;;;;-1:-1:-1;403:7498:22;;-1:-1:-1;403:7498:22;;-1:-1:-1;403:7498:22;;;;;;;;;-1:-1:-1;;403:7498:22;;;;-1:-1:-1;;;;;403:7498:22;;:::i;:::-;;1543:19;;403:7498;;;;;;;1597:10;403:7498;;;;;;;;;;;;;;;-1:-1:-1;;;403:7498:22;;;;;;;;;;;;-1:-1:-1;;;403:7498:22;;;;;;;;;;;;;;;-1:-1:-1;;403:7498:22;;;;;;;;;;1389:8;403:7498;;;;;;-1:-1:-1;;;;;403:7498:22;;1380:36;;403:7498;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;403:7498:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;2818:11;403:7498;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2887:17;;403:7498;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;403:7498:22;;;;;;;;;;;;;;;;2818:11;403:7498;;;2818:11;403:7498;;;;;;;;-1:-1:-1;403:7498:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;403:7498:22;;;;;;;;;;;-1:-1:-1;;;403:7498:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;403:7498:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;403:7498:22;;;;;;;;;;;:::i;:::-;4482:2;;;;;;;;:::i;:::-;7796:65;;7878:14;;;;4517:173;;403:7498;4496:236;;;:::i;4517:173::-;4553:67;403:7498;;;;;;;;;;;;;;;;;;;;;;;;4553:67;;;;4595:10;4553:67;;;403:7498;;;;;;;;;;;;;;;;;;;;;4553:67;;;;;;;4496:236;4553:67;;403:7498;4553:67;;;4517:173;-1:-1:-1;;;;;;;403:7498:22;4553:137;4517:173;;;;;;4553:67;;;;;;;;;;;;;;:::i;:::-;;;;403:7498;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;3232:8;403:7498;;;;;;;;;;;;;;3263:10;;;:19;:59;;;;403:7498;3255:86;;;:::i;:::-;403:7498;;;;;;;;;;;;;;;;;;;;3394:28;403:7498;3394:28;;403:7498;3263:59;403:7498;;;;3286:17;403:7498;;;;;3263:10;403:7498;;;;3255:86;403:7498;;;;;;3263:59;;;;403:7498;;;;;;;-1:-1:-1;;403:7498:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;403:7498:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;403:7498:22;;;;;;;;;-1:-1:-1;;;403:7498:22;;;;;;;;;;;;;;;;;;-1:-1:-1;403:7498:22;;;;;;;;;;;;;;;;;-1:-1:-1;;403:7498:22;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5484:25:22;;;:100;;;;403:7498;5484:175;;;;403:7498;;;;;;;5484:175;-1:-1:-1;;;5634:25:22;;-1:-1:-1;5484:175:22;;;:100;-1:-1:-1;;;5559:25:22;;;-1:-1:-1;5484:100:22;;403:7498;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;403:7498:22;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;403:7498:22;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;403:7498:22;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;403:7498:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;403:7498:22;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;403:7498:22;;;;;;;;;;;;-1:-1:-1;;;403:7498:22;;;;;;;3654:693;403:7498;-1:-1:-1;403:7498:22;;3772:8;403:7498;;;;;;;;;;;;;-1:-1:-1;403:7498:22;;;;;3764:20;;;403:7498;;;;3818:16;;;403:7498;;3867:152;3888:10;;;:18;:57;;;;;3654:693;3888:91;;;;3654:693;3867:152;;:::i;:::-;403:7498;-1:-1:-1;403:7498:22;4195:10;403:7498;;;-1:-1:-1;403:7498:22;;;;;;;;;;;;;;;;-1:-1:-1;403:7498:22;4195:10;403:7498;;;-1:-1:-1;403:7498:22;;;;;;;;;;;;;;-1:-1:-1;403:7498:22;3772:8;403:7498;;4286:12;403:7498;-1:-1:-1;403:7498:22;;;;;;;;;;;;;;;-1:-1:-1;403:7498:22;;;;;;;4318:22;-1:-1:-1;4318:22:22;;3654:693::o;403:7498::-;;;;-1:-1:-1;403:7498:22;;;;;-1:-1:-1;403:7498:22;3888:91;403:7498;;;-1:-1:-1;403:7498:22;3963:12;403:7498;;;-1:-1:-1;403:7498:22;;;3888:10;3949:30;3888:91;;;:57;403:7498;;;-1:-1:-1;403:7498:22;3910:17;403:7498;;;-1:-1:-1;403:7498:22;3888:10;-1:-1:-1;403:7498:22;;;;;-1:-1:-1;403:7498:22;;;3888:57;;;403:7498;;;-1:-1:-1;;;403:7498:22;;;;;;;;;;;;;-1:-1:-1;;;403:7498:22;;;;;;;;;;-1:-1:-1;;;403:7498:22;;;;;;;;;;;;;-1:-1:-1;;;403:7498:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;403:7498:22;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;403:7498:22;;;;;;;;;;;;-1:-1:-1;;;403:7498:22;;;;;;",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "approve(address,uint256)": "095ea7b3",
                "balanceOf(address)": "70a08231",
                "getApproved(uint256)": "081812fc",
                "initialize(string,string)": "4cd88b76",
                "isApprovedForAll(address,address)": "e985e9c5",
                "name()": "06fdde03",
                "ownerOf(uint256)": "6352211e",
                "safeTransferFrom(address,address,uint256)": "42842e0e",
                "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
                "setApprovalForAll(address,bool)": "a22cb465",
                "supportsInterface(bytes4)": "01ffc9a7",
                "symbol()": "95d89b41",
                "tokenURI(uint256)": "c87b56dd",
                "transferFrom(address,address,uint256)": "23b872dd"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/forge-std/src/safeconsole.sol": {
      "safeconsole": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"philogy <https://github.com/philogy>\",\"details\":\"Code generated automatically by script.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/safeconsole.sol\":\"safeconsole\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122069522192f29650fc3c6be17e2389efd5f0bf87625ad39c852e85184ee317435d64736f6c63430008170033",
                "sourceMap": "163:397734:23:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea264697066735822122069522192f29650fc3c6be17e2389efd5f0bf87625ad39c852e85184ee317435d64736f6c63430008170033",
                "sourceMap": "163:397734:23:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
      "IERC5267": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "eip712Domain",
                "inputs": [],
                "outputs": [
                  {
                    "name": "fields",
                    "type": "bytes1",
                    "internalType": "bytes1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "version",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "verifyingContract",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "extensions",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "event",
                "name": "EIP712DomainChanged",
                "inputs": [],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "eip712Domain()": "84b0196e"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
      "IERC1822Proxiable": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "proxiableUUID",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "proxiableUUID()": "52d1902d"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
      "ERC1967Proxy": [
        {
          "contract": {
            "abi": [
              {
                "type": "constructor",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "fallback",
                "stateMutability": "payable"
              },
              {
                "type": "event",
                "name": "Upgraded",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "error",
                "name": "AddressEmptyCode",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ERC1967InvalidImplementation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ERC1967NonPayable",
                "inputs": []
              },
              {
                "type": "error",
                "name": "FailedInnerCall",
                "inputs": []
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "60806040526102c8803803806100148161018e565b92833981019060408183031261018a5780516001600160a01b03811680820361018a5760208381015190936001600160401b03821161018a570184601f8201121561018a5780519061006d610068836101c7565b61018e565b9582875285838301011161018a5784905f5b8381106101765750505f9186010152813b1561015e577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a283511561014057505f80848461012796519101845af4903d15610137573d610118610068826101c7565b9081525f81943d92013e6101e2565b505b604051608290816102468239f35b606092506101e2565b925050503461014f5750610129565b63b398979f60e01b8152600490fd5b60249060405190634c9c8ce360e01b82526004820152fd5b81810183015188820184015286920161007f565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176101b357604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b0381116101b357601f01601f191660200190565b9061020957508051156101f757805190602001fd5b604051630a12f52160e11b8152600490fd5b8151158061023c575b61021a575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561021256fe60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e156048573d5ff35b3d5ffdfea264697066735822122003ff241d0e0c9f62eb973dd5729104fe6e1737cd4a1481575014654fa138f34f64736f6c63430008170033",
                "sourceMap": "599:1116:34:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;599:1116:34;;;;;;;;;;;;;;-1:-1:-1;;;;;599:1116:34;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;599:1116:34;;;;;;;;-1:-1:-1;599:1116:34;;;;;2263:29:35;;:34;2259:119;;1327:66;;;-1:-1:-1;;;;;;1327:66:35;;;;;599:1116:34;;;2922:27:35;-1:-1:-1;;2922:27:35;599:1116:34;;2964:15:35;:11;;4255:25:38;-1:-1:-1;4255:25:38;;;4297:55;4255:25;;599:1116:34;;4255:25:38;;;;599:1116:34;;;;;;;;;:::i;:::-;;;;-1:-1:-1;599:1116:34;;;;;;4297:55:38;:::i;:::-;;2960:148:35;599:1116:34;;;;;;;;;;;;-1:-1:-1;4297:55:38;:::i;2960:148:35:-;6648:9;;;;;6644:70;;2960:148;;;6644:70;-1:-1:-1;;;6684:19:35;;;;;2259:119;599:1116:34;;;;2320:47:35;;;;;;;;;599:1116:34;2320:47:35;599:1116:34;;;;;;;;;;;;;;;;;;;-1:-1:-1;599:1116:34;;;;;;;;;-1:-1:-1;;599:1116:34;;;-1:-1:-1;;;;;599:1116:34;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;599:1116:34;;;;;;-1:-1:-1;;599:1116:34;;;;:::o;4625:582:38:-;;4797:8;;-1:-1:-1;599:1116:34;;5874:21:38;:17;;6046:142;;;;;;5870:383;599:1116:34;;-1:-1:-1;;;6225:17:38;;;;;4793:408;599:1116:34;;5045:22:38;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;599:1116:34;;-1:-1:-1;;;5121:24:38;;-1:-1:-1;;;;;599:1116:34;;;5121:24:38;;;599:1116:34;;;5121:24:38;5045:49;5071:18;;;:23;5045:49;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e156048573d5ff35b3d5ffdfea264697066735822122003ff241d0e0c9f62eb973dd5729104fe6e1737cd4a1481575014654fa138f34f64736f6c63430008170033",
                "sourceMap": "599:1116:34:-:0;;;1327:66:35;;-1:-1:-1;;;;;;;;;1327:66:35;1019:819:36;-1:-1:-1;;1019:819:36;;;;;;;-1:-1:-1;1019:819:36;;;;;;-1:-1:-1;1019:819:36;;;-1:-1:-1;1019:819:36",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
      "ERC1967Utils": [
        {
          "contract": {
            "abi": [
              {
                "type": "event",
                "name": "AdminChanged",
                "inputs": [
                  {
                    "name": "previousAdmin",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  },
                  {
                    "name": "newAdmin",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "BeaconUpgraded",
                "inputs": [
                  {
                    "name": "beacon",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Upgraded",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "error",
                "name": "ERC1967InvalidAdmin",
                "inputs": [
                  {
                    "name": "admin",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ERC1967InvalidBeacon",
                "inputs": [
                  {
                    "name": "beacon",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ERC1967InvalidImplementation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ERC1967NonPayable",
                "inputs": []
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220af5317a47054ad144e60ca048a12f83ed3acb9fdaff96b13a0cc73cc8c92934e64736f6c63430008170033",
                "sourceMap": "449:6273:35:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea2646970667358221220af5317a47054ad144e60ca048a12f83ed3acb9fdaff96b13a0cc73cc8c92934e64736f6c63430008170033",
                "sourceMap": "449:6273:35:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
      "Proxy": [
        {
          "contract": {
            "abi": [
              {
                "type": "fallback",
                "stateMutability": "payable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
      "IBeacon": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "implementation",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "implementation()": "5c60da1b"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
      "Address": [
        {
          "contract": {
            "abi": [
              {
                "type": "error",
                "name": "AddressEmptyCode",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "AddressInsufficientBalance",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "FailedInnerCall",
                "inputs": []
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212204b8516e07d9ade4a74886ced6c85c883d46ae01c7ba8c07903f9f719f2dc4f7e64736f6c63430008170033",
                "sourceMap": "195:6066:38:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea26469706673582212204b8516e07d9ade4a74886ced6c85c883d46ae01c7ba8c07903f9f719f2dc4f7e64736f6c63430008170033",
                "sourceMap": "195:6066:38:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
      "StorageSlot": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220e77b1ad861064580023ca14e30bfd3869037b9af4d4596498fae32450027ca0964736f6c63430008170033",
                "sourceMap": "1245:2685:39:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea2646970667358221220e77b1ad861064580023ca14e30bfd3869037b9af4d4596498fae32450027ca0964736f6c63430008170033",
                "sourceMap": "1245:2685:39:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "Strings": [
        {
          "contract": {
            "abi": [
              {
                "type": "error",
                "name": "StringsInsufficientHexLength",
                "inputs": [
                  {
                    "name": "value",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "length",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212200067fd60dc2e46f9e83babb5e11ad6d35b1cd9e6e90ed6744b16b9e73624af3e64736f6c63430008170033",
                "sourceMap": "251:2847:40:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea26469706673582212200067fd60dc2e46f9e83babb5e11ad6d35b1cd9e6e90ed6744b16b9e73624af3e64736f6c63430008170033",
                "sourceMap": "251:2847:40:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
      "ECDSA": [
        {
          "contract": {
            "abi": [
              {
                "type": "error",
                "name": "ECDSAInvalidSignature",
                "inputs": []
              },
              {
                "type": "error",
                "name": "ECDSAInvalidSignatureLength",
                "inputs": [
                  {
                    "name": "length",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ECDSAInvalidSignatureS",
                "inputs": [
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ]
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220d4059047be2b2f806c05ba7c9fbaefc932dbd6c3f83cff366f37be09c5925d5d64736f6c63430008170033",
                "sourceMap": "344:7386:41:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea2646970667358221220d4059047be2b2f806c05ba7c9fbaefc932dbd6c3f83cff366f37be09c5925d5d64736f6c63430008170033",
                "sourceMap": "344:7386:41:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": {
      "MessageHashUtils": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220cc0e3a13de3c8b02ca5270be4bd91e6a58885e2dd47cf1ac0789c64c71fdd1a664736f6c63430008170033",
                "sourceMap": "521:3235:42:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea2646970667358221220cc0e3a13de3c8b02ca5270be4bd91e6a58885e2dd47cf1ac0789c64c71fdd1a664736f6c63430008170033",
                "sourceMap": "521:3235:42:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "Math": [
        {
          "contract": {
            "abi": [
              {
                "type": "error",
                "name": "MathOverflowedMulDiv",
                "inputs": []
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212204867b4887e91c5fb5be9541f6216c2edd1278291a34e4808f8718f68084c00ca64736f6c63430008170033",
                "sourceMap": "203:14914:43:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea26469706673582212204867b4887e91c5fb5be9541f6216c2edd1278291a34e4808f8718f68084c00ca64736f6c63430008170033",
                "sourceMap": "203:14914:43:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
      "SignedMath": [
        {
          "contract": {
            "abi": [],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122067a26db65823aafa27e2b8bd23ef413046c0aab5188d40d65ce41faf0280164764736f6c63430008170033",
                "sourceMap": "216:1047:44:-:0;;;;;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "5f80fdfea264697066735822122067a26db65823aafa27e2b8bd23ef413046c0aab5188d40d65ce41faf0280164764736f6c63430008170033",
                "sourceMap": "216:1047:44:-:0;;",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
      "Ownable2StepUpgradeable": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "acceptOwnership",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "owner",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "pendingOwner",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "renounceOwnership",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "transferOwnership",
                "inputs": [
                  {
                    "name": "newOwner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "event",
                "name": "Initialized",
                "inputs": [
                  {
                    "name": "version",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "OwnershipTransferStarted",
                "inputs": [
                  {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "OwnershipTransferred",
                "inputs": [
                  {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "error",
                "name": "InvalidInitialization",
                "inputs": []
              },
              {
                "type": "error",
                "name": "NotInitializing",
                "inputs": []
              },
              {
                "type": "error",
                "name": "OwnableInvalidOwner",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "OwnableUnauthorizedAccount",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":\"Ownable2StepUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "acceptOwnership()": "79ba5097",
                "owner()": "8da5cb5b",
                "pendingOwner()": "e30c3978",
                "renounceOwnership()": "715018a6",
                "transferOwnership(address)": "f2fde38b"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
      "OwnableUpgradeable": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "owner",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "renounceOwnership",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "transferOwnership",
                "inputs": [
                  {
                    "name": "newOwner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "event",
                "name": "Initialized",
                "inputs": [
                  {
                    "name": "version",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "OwnershipTransferred",
                "inputs": [
                  {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "error",
                "name": "InvalidInitialization",
                "inputs": []
              },
              {
                "type": "error",
                "name": "NotInitializing",
                "inputs": []
              },
              {
                "type": "error",
                "name": "OwnableInvalidOwner",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "OwnableUnauthorizedAccount",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "owner()": "8da5cb5b",
                "renounceOwnership()": "715018a6",
                "transferOwnership(address)": "f2fde38b"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
      "Initializable": [
        {
          "contract": {
            "abi": [
              {
                "type": "event",
                "name": "Initialized",
                "inputs": [
                  {
                    "name": "version",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "error",
                "name": "InvalidInitialization",
                "inputs": []
              },
              {
                "type": "error",
                "name": "NotInitializing",
                "inputs": []
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
      "UUPSUpgradeable": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "UPGRADE_INTERFACE_VERSION",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "proxiableUUID",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "upgradeToAndCall",
                "inputs": [
                  {
                    "name": "newImplementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "event",
                "name": "Initialized",
                "inputs": [
                  {
                    "name": "version",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Upgraded",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "error",
                "name": "AddressEmptyCode",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ERC1967InvalidImplementation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ERC1967NonPayable",
                "inputs": []
              },
              {
                "type": "error",
                "name": "FailedInnerCall",
                "inputs": []
              },
              {
                "type": "error",
                "name": "InvalidInitialization",
                "inputs": []
              },
              {
                "type": "error",
                "name": "NotInitializing",
                "inputs": []
              },
              {
                "type": "error",
                "name": "UUPSUnauthorizedCallContext",
                "inputs": []
              },
              {
                "type": "error",
                "name": "UUPSUnsupportedProxiableUUID",
                "inputs": [
                  {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ]
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
                "proxiableUUID()": "52d1902d",
                "upgradeToAndCall(address,bytes)": "4f1ef286"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
      "ContextUpgradeable": [
        {
          "contract": {
            "abi": [
              {
                "type": "event",
                "name": "Initialized",
                "inputs": [
                  {
                    "name": "version",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "error",
                "name": "InvalidInitialization",
                "inputs": []
              },
              {
                "type": "error",
                "name": "NotInitializing",
                "inputs": []
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol": {
      "PausableUpgradeable": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "paused",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "event",
                "name": "Initialized",
                "inputs": [
                  {
                    "name": "version",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Paused",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Unpaused",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "error",
                "name": "EnforcedPause",
                "inputs": []
              },
              {
                "type": "error",
                "name": "ExpectedPause",
                "inputs": []
              },
              {
                "type": "error",
                "name": "InvalidInitialization",
                "inputs": []
              },
              {
                "type": "error",
                "name": "NotInitializing",
                "inputs": []
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "paused()": "5c975abb"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol": {
      "ReentrancyGuardUpgradeable": [
        {
          "contract": {
            "abi": [
              {
                "type": "event",
                "name": "Initialized",
                "inputs": [
                  {
                    "name": "version",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "error",
                "name": "InvalidInitialization",
                "inputs": []
              },
              {
                "type": "error",
                "name": "NotInitializing",
                "inputs": []
              },
              {
                "type": "error",
                "name": "ReentrancyGuardReentrantCall",
                "inputs": []
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
      "EIP712Upgradeable": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "eip712Domain",
                "inputs": [],
                "outputs": [
                  {
                    "name": "fields",
                    "type": "bytes1",
                    "internalType": "bytes1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "version",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "verifyingContract",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "extensions",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "event",
                "name": "EIP712DomainChanged",
                "inputs": [],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Initialized",
                "inputs": [
                  {
                    "name": "version",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "error",
                "name": "InvalidInitialization",
                "inputs": []
              },
              {
                "type": "error",
                "name": "NotInitializing",
                "inputs": []
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "eip712Domain()": "84b0196e"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/script/Counter.s.sol": {
      "CounterScript": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_SCRIPT",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "counter",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "contract Counter"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "run",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setUp",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"contract Counter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/Counter.s.sol\":\"CounterScript\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"script/Counter.s.sol\":{\"keccak256\":\"0x1e29ed50b3ea68f3b88913c4f075db1a3b345483acc5d0bb18493c815a1d3392\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1f1482b3e6566f14e11ad41a2d5d3efed819add8f2d6ebebcb7d379336df1cbf\",\"dweb:/ipfs/QmVPSavJipPhB1ZncPdfev998RNJ115XzLnZaXp7evB6WZ\"]},\"src/Counter.sol\":{\"keccak256\":\"0x09277f949d59a9521708c870dc39c2c434ad8f86a5472efda6a732ef728c0053\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://94cd5258357da018bf911aeda60ed9f5b130dce27445669ee200313cd3389200\",\"dweb:/ipfs/QmNbEfWAqXCtfQpk6u7TpGa8sTHXFLpUz7uebz2FVbchSC\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "script/Counter.s.sol:CounterScript",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 2758,
                  "contract": "script/Counter.s.sol:CounterScript",
                  "label": "stdChainsInitialized",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2779,
                  "contract": "script/Counter.s.sol:CounterScript",
                  "label": "chains",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)"
                },
                {
                  "astId": 2783,
                  "contract": "script/Counter.s.sol:CounterScript",
                  "label": "defaultRpcUrls",
                  "offset": 0,
                  "slot": "10",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
                },
                {
                  "astId": 2787,
                  "contract": "script/Counter.s.sol:CounterScript",
                  "label": "idToAlias",
                  "offset": 0,
                  "slot": "11",
                  "type": "t_mapping(t_uint256,t_string_storage)"
                },
                {
                  "astId": 2790,
                  "contract": "script/Counter.s.sol:CounterScript",
                  "label": "fallbackToDefaultRpcUrls",
                  "offset": 0,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 3593,
                  "contract": "script/Counter.s.sol:CounterScript",
                  "label": "gasMeteringOff",
                  "offset": 1,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 112,
                  "contract": "script/Counter.s.sol:CounterScript",
                  "label": "IS_SCRIPT",
                  "offset": 2,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 42924,
                  "contract": "script/Counter.s.sol:CounterScript",
                  "label": "counter",
                  "offset": 3,
                  "slot": "12",
                  "type": "t_contract(Counter)43496"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_contract(Counter)43496": {
                  "encoding": "inplace",
                  "label": "contract Counter",
                  "numberOfBytes": "20"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_mapping(t_string_memory_ptr,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => struct StdChains.Chain)",
                  "numberOfBytes": "32",
                  "value": "t_struct(Chain)2774_storage"
                },
                "t_mapping(t_uint256,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_string_memory_ptr": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(Chain)2774_storage": {
                  "encoding": "inplace",
                  "label": "struct StdChains.Chain",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 2767,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "name",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2769,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "chainId",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 2771,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "chainAlias",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2773,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "rpcUrl",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_string_storage"
                    }
                  ]
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "script/Counter.s.sol:CounterScript",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "60808060405234610027576201000162ff00ff19600c541617600c5561032a908161002c8239f35b5f80fdfe608060408181526004361015610013575f80fd5b5f915f3560e01c9081630a9254e4146101ce57816361bc221a146101a857508063c0406226146100745763f8ccbf471461004b575f80fd5b3461007057816003193601126100705760209060ff600c5460101c1690519015158152f35b5080fd5b5090346101a4575f3660031901126101a457737109709ecfa91a80626ff3989d68f67f5b1dd12d803b156101a4578251637fb5297f60e01b81525f8160048183865af1801561019a57610187575b5082519260ec938481019481861067ffffffffffffffff87111761017357849582916102098339039084f0801561016957600c80546301000000600160b81b03191660189290921b6301000000600160b81b0316919091179055813b15610165578280926004835180958193633b756e9b60e11b83525af190811561015c57506101495750f35b610152906101e0565b6101595780f35b80fd5b513d84823e3d90fd5b5050fd5b81513d85823e3d90fd5b634e487b7160e01b85526041600452602485fd5b6101929192506101e0565b5f905f6100c2565b84513d5f823e3d90fd5b5f80fd5b346101a4575f3660031901126101a457600c5460181c6001600160a01b03168152602090f35b346101a4575f3660031901126101a457005b67ffffffffffffffff81116101f457604052565b634e487b7160e01b5f52604160045260245ffdfe608080604052346100155760d2908161001a8239f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c9081633fb5c1cb1460865781638381f58a14606f575063d09de08a146039575f80fd5b34606b575f366003190112606b575f545f1981146057576001015f55005b634e487b7160e01b5f52601160045260245ffd5b5f80fd5b34606b575f366003190112606b576020905f548152f35b34606b576020366003190112606b576004355f5500fea2646970667358221220e15aaae13de9c1d5b978b243fc64fef95771b6204bae0bce8741927550b3d6c964736f6c63430008170033a2646970667358221220c3ce2214030fe42d97c14784c52fce8167258069e05442f12959d8fb0f0adcf164736f6c63430008170033",
                "sourceMap": "155:223:45:-:0;;;;;;;;;;3166:4:3;155:223:45;;;3166:4:3;155:223:45;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "608060408181526004361015610013575f80fd5b5f915f3560e01c9081630a9254e4146101ce57816361bc221a146101a857508063c0406226146100745763f8ccbf471461004b575f80fd5b3461007057816003193601126100705760209060ff600c5460101c1690519015158152f35b5080fd5b5090346101a4575f3660031901126101a457737109709ecfa91a80626ff3989d68f67f5b1dd12d803b156101a4578251637fb5297f60e01b81525f8160048183865af1801561019a57610187575b5082519260ec938481019481861067ffffffffffffffff87111761017357849582916102098339039084f0801561016957600c80546301000000600160b81b03191660189290921b6301000000600160b81b0316919091179055813b15610165578280926004835180958193633b756e9b60e11b83525af190811561015c57506101495750f35b610152906101e0565b6101595780f35b80fd5b513d84823e3d90fd5b5050fd5b81513d85823e3d90fd5b634e487b7160e01b85526041600452602485fd5b6101929192506101e0565b5f905f6100c2565b84513d5f823e3d90fd5b5f80fd5b346101a4575f3660031901126101a457600c5460181c6001600160a01b03168152602090f35b346101a4575f3660031901126101a457005b67ffffffffffffffff81116101f457604052565b634e487b7160e01b5f52604160045260245ffdfe608080604052346100155760d2908161001a8239f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c9081633fb5c1cb1460865781638381f58a14606f575063d09de08a146039575f80fd5b34606b575f366003190112606b575f545f1981146057576001015f55005b634e487b7160e01b5f52601160045260245ffd5b5f80fd5b34606b575f366003190112606b576020905f548152f35b34606b576020366003190112606b576004355f5500fea2646970667358221220e15aaae13de9c1d5b978b243fc64fef95771b6204bae0bce8741927550b3d6c964736f6c63430008170033a2646970667358221220c3ce2214030fe42d97c14784c52fce8167258069e05442f12959d8fb0f0adcf164736f6c63430008170033",
                "sourceMap": "155:223:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:28:1;155:223:45;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;155:223:45;;;;;287:19;;;;;155:223;;-1:-1:-1;;;287:19:45;;155:223;;;;;287:19;;;;;;;;;155:223;;;;327:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:23;1590:14:0;;-1:-1:-1;;;;;;1590:14:0;;;;;;-1:-1:-1;;;;;1590:14:0;;;;;;;351:18:45;;;;;155:223;;;;;;1590:14:0;;;;;;;351:18:45;;;;;;;;;;;;155:223;;351:18;;;;:::i;:::-;155:223;;351:18;155:223;;;;351:18;155:223;1590:14:0;155:223:45;;1590:14:0;;;;351:18:45;155:223;;;327:13;155:223;;1590:14:0;155:223:45;;1590:14:0;;;;327:13:45;-1:-1:-1;;;1590:14:0;;;155:223:45;1590:14:0;;;;287:19:45;;;;;;:::i;:::-;155:223;287:19;;;;;155:223;;1590:14:0;155:223:45;1590:14:0;;;;;287:19:45;155:223;;;;;;;;;-1:-1:-1;;155:223:45;;;;194:22;155:223;;;-1:-1:-1;;;;;155:223:45;;;;;;;;;;;;-1:-1:-1;;155:223:45;;;;;1590:14:0;;;;;;;;:::o;:::-;;;;;;;;;;;",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_SCRIPT()": "f8ccbf47",
                "counter()": "61bc221a",
                "run()": "c0406226",
                "setUp()": "0a9254e4"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/script/DeployScoreCheckerV2.s.sol": {
      "DeployScoreCheckerV2": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "INITIAL_CHECK_FEE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "IS_SCRIPT",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "MAX_FEE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "run",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"INITIAL_CHECK_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Script to deploy the ScoreCheckerUpgradeableV2 contract\",\"kind\":\"dev\",\"methods\":{},\"title\":\"DeployScoreCheckerV2\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/DeployScoreCheckerV2.s.sol\":\"DeployScoreCheckerV2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"script/DeployScoreCheckerV2.s.sol\":{\"keccak256\":\"0x3c22a9f479cfa4465bc5743e6c8c717a92f92a5d017ad28407293478913e8ad1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed6252568bb47bac699bdd2920c13c5c99acff2e437f54ccf9d2a96932958089\",\"dweb:/ipfs/QmbwczhqJMnXKz496rLWXdDCsy2RVDZy6G3bGgYGtDwfEE\"]},\"src/ScoreCheckerUpgradeableV2.sol\":{\"keccak256\":\"0xdcd4fdfa4c1604bfbc283449c89c84dda53bfbb2f2bb24111bd0314ad35cb60c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e49a54670032a74145006fe82ec775828e90f3965e2ef795fd83221185063a8\",\"dweb:/ipfs/QmTTRzZ6w1AyFTX5QJJwgAHFnKYrC3kBTTdb1E4Vfjr5Nq\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 2758,
                  "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                  "label": "stdChainsInitialized",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2779,
                  "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                  "label": "chains",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)"
                },
                {
                  "astId": 2783,
                  "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                  "label": "defaultRpcUrls",
                  "offset": 0,
                  "slot": "10",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
                },
                {
                  "astId": 2787,
                  "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                  "label": "idToAlias",
                  "offset": 0,
                  "slot": "11",
                  "type": "t_mapping(t_uint256,t_string_storage)"
                },
                {
                  "astId": 2790,
                  "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                  "label": "fallbackToDefaultRpcUrls",
                  "offset": 0,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 3593,
                  "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                  "label": "gasMeteringOff",
                  "offset": 1,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 112,
                  "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                  "label": "IS_SCRIPT",
                  "offset": 2,
                  "slot": "12",
                  "type": "t_bool"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_mapping(t_string_memory_ptr,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => struct StdChains.Chain)",
                  "numberOfBytes": "32",
                  "value": "t_struct(Chain)2774_storage"
                },
                "t_mapping(t_uint256,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_string_memory_ptr": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(Chain)2774_storage": {
                  "encoding": "inplace",
                  "label": "struct StdChains.Chain",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 2767,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "name",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2769,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "chainId",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 2771,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "chainAlias",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2773,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "rpcUrl",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_string_storage"
                    }
                  ]
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "script/DeployScoreCheckerV2.s.sol:DeployScoreCheckerV2",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "60808060405234610027576201000162ff00ff19600c541617600c55613b3b908161002c8239f35b5f80fdfe608060408181526004918236101562000016575f80fd5b5f925f3560e01c918263943a685614620006fa57508163bc063e1a14620006d7578163c0406226146200007e575063f8ccbf471462000053575f80fd5b346200007a57816003193601126200007a5760209060ff600c5460101c1690519015158152f35b5080fd5b90503462000650575f366003190112620006505781519163c1978d1f60e01b83526024916020908181860152600b848601526a505249564154455f4b455960a81b6044860152737109709ecfa91a80626ff3989d68f67f5b1dd12d948281606481895afa908115620006cd575f916200069a575b5083516001625e79b760e01b0319815282810182905290838287818a5afa91821562000646575f9262000654575b50863b15620006505784519063ce817d4760e01b8252838201525f818781838b5af18015620006465762000630575b50835191612fb88084019367ffffffffffffffff91818610838711176200061e5762000b4e8239858166038d7ea4c68000968781520301908af09788156200061457865190630b4988fd60e41b87830152655af3107a4000998a8a84015260018060a01b039384871680604486015260648501526064845260a0840191848310828411176200060257828b528516936102c88082019260a084019190821185831017620005ef578f95949392918791620008868639528b60c08301526200021d60e0609f19930182620007a0565b03019083f0948515620005e157813b15620005eb578951633b756e9b60e11b81529183918391829084905af18015620005e157620005b7575b505093620005b498620003f185620003965f968796620003667f332e204465706c6f7920746f2042617365204d61696e6e6574207768656e20729b6200032a636561647960e01b9f9e9c8f702232b83637bcb2b91030b2323932b9b99d60791b8f91620003108151620002c98162000743565b603081527f53636f7265436865636b65725570677261646561626c655632206465706c6f79858201526f6564207375636365737366756c6c792160801b83820152620007e0565b51916200031d8362000760565b6011835282015262000832565b8d51620003378162000760565b601781527f496d706c656d656e746174696f6e20616464726573733a0000000000000000008d82015262000832565b8b5191620003748362000760565b600e83526d283937bc3c9030b2323932b9b99d60911b8b840152169062000832565b620003c0818a51620003a88162000760565b600681526527bbb732b91d60d11b8a82015262000832565b8851620003cd8162000760565b601281527120baba3437b934bd32b21039b4b3b732b91d60711b8882015262000832565b86620004cc815192620004048462000760565b600884526726b0bc103332b29d60c11b888501528b8351918780848c810199620004436309710a9d60e41b9a8b8d528a888501526064840190620007a0565b90604483015203946200045f601f19968781018352826200077d565b516a636f6e736f6c652e6c6f67998a5afa50620004b98551620004828162000760565b601281527124b734ba34b0b61031b432b1b5903332b29d60711b8c82015286519687948d8601998a528501526064840190620007a0565b906044830152039081018352826200077d565b51915afa50620005008351620004e28162000760565b600c81526b052732bc3a1039ba32b8399d60a11b83820152620007e0565b6200054e8351620005118162000743565b602681527f312e205665726966792074686520636f6e7472616374206f6e20426173652053838201526565706f6c696160d01b85820152620007e0565b6200059883516200055f8162000743565b602281527f322e20546573742074686520636f6e74726163742066756e6374696f6e616c698382015261747960f01b85820152620007e0565b825194620005a68662000743565b8552840152820152620007e0565b80f35b620005ca9098979596929493986200071a565b620005dd57939294959091895f62000256565b8980fd5b89513d84823e3d90fd5b8280fd5b50634e487b7160e01b8f52604188528c8ffd5b8b604188634e487b7160e01b5f52525ffd5b86513d8b823e3d90fd5b634e487b7160e01b8b5260418452888bfd5b6200063d9197506200071a565b5f955f6200014f565b85513d5f823e3d90fd5b5f80fd5b9091508381813d831162000692575b6200066f81836200077d565b810103126200065057516001600160a01b03811681036200065057905f62000120565b503d62000663565b90508281813d8311620006c5575b620006b481836200077d565b810103126200065057515f620000f2565b503d620006a8565b84513d5f823e3d90fd5b823462000650575f36600319011262000650576020905166038d7ea4c680008152f35b3462000650575f366003190112620006505780655af3107a400060209252f35b67ffffffffffffffff81116200072f57604052565b634e487b7160e01b5f52604160045260245ffd5b6060810190811067ffffffffffffffff8211176200072f57604052565b6040810190811067ffffffffffffffff8211176200072f57604052565b90601f8019910116810190811067ffffffffffffffff8211176200072f57604052565b91908251928382525f5b848110620007cb575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201620007aa565b5f80916040516200081f8162000810602082019463104c13eb60e21b8652602060248401526044830190620007a0565b03601f1981018352826200077d565b51906a636f6e736f6c652e6c6f675afa50565b5f919082916200081f604051809262000865602083019563319af33360e01b8752604060248501526064840190620007a0565b6001600160a01b0391909116604483015203601f1981018352826200077d56fe60806040526102c8803803806100148161018e565b92833981019060408183031261018a5780516001600160a01b03811680820361018a5760208381015190936001600160401b03821161018a570184601f8201121561018a5780519061006d610068836101c7565b61018e565b9582875285838301011161018a5784905f5b8381106101765750505f9186010152813b1561015e577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a283511561014057505f80848461012796519101845af4903d15610137573d610118610068826101c7565b9081525f81943d92013e6101e2565b505b604051608290816102468239f35b606092506101e2565b925050503461014f5750610129565b63b398979f60e01b8152600490fd5b60249060405190634c9c8ce360e01b82526004820152fd5b81810183015188820184015286920161007f565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176101b357604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b0381116101b357601f01601f191660200190565b9061020957508051156101f757805190602001fd5b604051630a12f52160e11b8152600490fd5b8151158061023c575b61021a575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561021256fe60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e156048573d5ff35b3d5ffdfea264697066735822122003ff241d0e0c9f62eb973dd5729104fe6e1737cd4a1481575014654fa138f34f64736f6c6343000817003360c0346200016257601f62002fb838819003918201601f19168301926001600160401b0392909183851183861017620001665781602092849260409788528339810103126200016257513060805280156200011e5760a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff82851c166200010d578080831603620000c8575b8351612e3d90816200017b8239608051818181611ebf0152611f78015260a05181818161063f0152818161071001526122410152f35b6001600160401b0319909116811790915581519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f808062000092565b835163f92ee8a960e01b8152600490fd5b825162461bcd60e51b815260206004820152601560248201527f4d61784665652063616e6e6f74206265207a65726f00000000000000000000006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610085575b36156100475760405162461bcd60e51b815260206004820152600b60248201526a4e6f2066616c6c6261636b60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275111a5c9958dd08115512081b9bdd08185b1b1bddd95960521b6044820152606490fd5b5f3560e01c806310cb729f146123fa578063110b32851461235a578063164e68de146122ef5780631904863c146122d357806327ff6223146122b6578063319a2cbb1461222357806333917ca9146121f257806333b3e099146121d55780633f4ba83a146121735780633fb19a53146121565780634980f2881461212d5780634f1ef28614611f2957806351858e271461191557806352d1902d14611ead5780635836d17b14611b255780635c975abb14611af75780636ff1c9bc14611a51578063715018a6146119d4578063738fc2f9146119b857806379ba5097146119675780637ecebe001461192f5780638456cb591461191557806384b0196e146117bd5780638da5cb5b146117895780639b50c5f914610eae578063a23195ed14610cd5578063ad3cb1cc14610c8c578063b4988fd014610662578063bc063e1a14610628578063c771909c14610600578063c8910913146105a4578063d279b0ca1461051c578063d47875d0146104ac578063d91a9458146103bb578063e30c397814610387578063ee4eb93d14610369578063f2fde38b146102e5578063fede6114146102c85763ffc9896b0361000e57346102c45760203660031901126102c45760806001600160a01b03610259612471565b16805f52600560205260405f2090604080519261027584612487565b54916001600160801b038316938481526001600160401b0384871c169384602083015260c01c92839101525f52600660205260405f205491604051938452602084015260408301526060820152f35b5f80fd5b346102c4575f3660031901126102c4576020604051620151808152f35b346102c45760203660031901126102c4576102fe612471565b61030661277d565b5f80516020612de883398151915280546001600160a01b0319166001600160a01b039283169081179091555f80516020612d68833981519152549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b346102c4575f3660031901126102c45760206040516361cf99808152f35b346102c4575f3660031901126102c4575f80516020612de8833981519152546040516001600160a01b039091168152602090f35b346102c45760203660031901126102c4576001600160a01b036103dc612471565b165f5260046020526101e060405f208054906001600160801b03906001810154906001600160401b039263ffffffff906002830154600460038501549401549460405197838116895260801c60208901528281166040890152868160801c166060890152838160c01c16608089015260e01c60a088015281811660c088015260801c60e08701528216610100860152808260801c16610120860152808260a01c166101408601528160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b346102c45760203660031901126102c4576001600160a01b036104cd612471565b165f5260056020526040805f208151906104e682612487565b546001600160801b03811691828152836001600160401b038360801c169283602084015260c01c91015282519182526020820152f35b346102c45760203660031901126102c457610535612471565b61053d61277d565b6001600160a01b03168015610592576020817f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b60405163d92e233d60e01b8152600490fd5b346102c45760203660031901126102c4576001600160a01b036105c5612471565b165f526005602052606060405f2054604051906001600160801b03811682526001600160401b038160801c16602083015260c01c6040820152f35b346102c4575f3660031901126102c4576002546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c45760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102c45760603660031901126102c4576001600160a01b0360243581811681036102c457816044351680604435036102c4577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00918254916001600160401b03831680159081610c7c575b6001149081610c72575b159081610c69575b50610c575760016001600160401b0319841617845560ff8360401c1615610c38575b848216156105925715610592577f00000000000000000000000000000000000000000000000000000000000000008060043511610c185750610741612b02565b610749612b02565b610751612b02565b5f80516020612da8833981519152805460ff1916905561076f612b02565b610777612b02565b60015f80516020612dc88339815191525560405193610795856124d9565b600e85526d42617365426164676553636f726560901b6020860152604051946107bd866124d9565b60018652603160f81b60208701526107d3612b02565b6107db612b02565b8051906001600160401b038211610aef5781906108055f80516020612d488339815191525461288c565b601f8111610b9a575b50602090601f8311600114610b0e575f92610b03575b50508160011b915f199060031b1c1916175f80516020612d48833981519152555b84516001600160401b038111610aef577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10390610881825461288c565b601f8111610a8d575b506020601f82116001146109e4579181602094927f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73969460ff999a5f926109d9575b50508160011b915f199060031b1c19161790555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015561092e612b02565b6004355f55600280546001600160a01b031916838316179055601e60015561025860035561095d604435612821565b60405191168152a17f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7660206040516004358152a160401c161561099c57005b68ff00000000000000001981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508a806108cc565b601f19821697835f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75985f5b818110610a7557509260ff98997f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73979593600193836020999710610a5d575b505050811b0190556108e0565b01515f1960f88460031b161c191690558a8080610a50565b838301518b556001909a019960209384019301610a11565b825f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f830160051c81019160208410610ae5575b601f0160051c01905b818110610ada575061088a565b5f8155600101610acd565b9091508190610ac4565b634e487b7160e01b5f52604160045260245ffd5b015190508780610824565b92505f80516020612d488339815191525f525f80516020612d88833981519152905f935b601f1984168510610b7f576001945083601f19811610610b67575b505050811b015f80516020612d4883398151915255610845565b01515f1960f88460031b161c19169055878080610b4d565b81810151835560209485019460019093019290910190610b32565b9091505f80516020612d488339815191525f52601f830160051c5f80516020612d88833981519152019060208410610c03575b90601f8493920160051c5f80516020612d8883398151915201905b818110610bf5575061080e565b5f8155849350600101610be8565b5f80516020612d888339815191529150610bcd565b60449060405190631e0bd6c160e31b825260043560048301526024820152fd5b68ffffffffffffffffff19831668010000000000000001178455610701565b60405163f92ee8a960e01b8152600490fd5b905015866106df565b303b1591506106d7565b604085901c60ff161591506106cd565b346102c4575f3660031901126102c457610cd1604051610cab816124d9565b60058152640352e302e360dc1b6020820152604051918291602083526020830190612593565b0390f35b346102c45760203660031901126102c4576001600160a01b03610cf6612471565b165f5260046020526101e060405f206001600160401b03604051610d19816124a2565b8254926001600160801b03841682528360801c602083015260018101546001600160801b0381166040840152838160801c16606084015263ffffffff8160c01c1660808401528060e01c60a08401526002820154906001600160801b03821660c08501528160801c60e085015260046003840154936001600160801b03851661010087015263ffffffff8560801c1661012087015263ffffffff8560a01c1661014087015263ffffffff8560c01c166101608701528460e01c6101808701520154938585166101a08201526101c0868660401c16910152604051956001600160801b038116875260801c60208701526001600160801b0381166040870152848160801c16606087015263ffffffff8160c01c16608087015260e01c60a08601526001600160801b03811660c086015260801c60e08501526001600160801b03811661010085015263ffffffff8160801c1661012085015263ffffffff8160a01c1661014085015263ffffffff8160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b6102003660031901126102c4576001600160401b036101a435166101a435036102c4576101e4356001600160401b0381116102c457610ef1903690600401612566565b90610efa61279d565b610f026127cc565b5f5480340361176b5750620f42406004351161174957620f42406024351161172757620f424060443511611705576361cf99806001600160401b036101a43516106116d757335f52600660205260405f2054806101c435036116b65750604051917ff418e5fde2935aec5659dcc0d3addca54c1096967fe1a5e81cbcfc2ef0e4529a60208401523360408401526004356060840152602435608084015260443560a084015260643560c084015260843560e084015260a43561010084015260c43561012084015260e4356101408401526101043561016084015261012435610180840152610144356101a0840152610164356101c0840152610184356101e08401526001600160401b036101a435166102008401526102206101c435818501528352826102408101106001600160401b0361024085011117610aef5761108861108e9261108085610240611097970160405260208151910120611063612b43565b6042916040519161190160f01b8352600283015260228201522090565b923691612530565b90612a45565b90929192612a7f565b6002546001600160a01b039081169116036116a457335f52600460205260405f206001600160401b036004604051926110cf846124a2565b80546001600160801b038116855260801c602085015260018101546001600160801b0381166040860152838160801c16606086015263ffffffff8160c01c16608086015260e01c60a085015260028101546001600160801b03811660c086015260801c60e085015260038101546001600160801b03811661010086015263ffffffff8160801c1661012086015263ffffffff8160a01c1661014086015263ffffffff8160c01c1661016086015260e01c61018085015201548181166101a084015260401c16806101c0830152806001600160401b036101a4351611156116765750600154908115158061165f575b61161d575b50506001600160401b036101a4351642106115fd576111ed6001600160401b036101a4351642612677565b600354908181116115e057604051611204816124a2565b6001600160801b036004351681526001600160801b036024351660208201526001600160801b036044351660408201526001600160401b0360643516606082015263ffffffff60843516608082015263ffffffff60a4351660a08201526001600160801b0360c4351660c08201526001600160801b0360e4351660e08201526001600160801b03610104351661010082015263ffffffff610124351661012082015263ffffffff610144351661014082015263ffffffff610164351661016082015263ffffffff61018435166101808201526001600160401b0342166101a08201526001600160401b036101a435166101c0820152335f526004602052600460405f206001600160801b038351166001600160801b031982541617815561134d6001600160801b0360208501511682906001600160801b0382549181199060801b169116179055565b6040830151606084015160808086015160a087015160e01b6001600160e01b0319166001600160801b039094169290911b67ffffffffffffffff60801b169190911763ffffffff60c01b60c09290921b919091161717600182015560c083015160e084015160801b6fffffffffffffffffffffffffffffffff19166001600160801b03919091161760028201556101008301516003820180546101208601516101408701516101608801516001600160e01b03199093166001600160801b03959095169490941760809190911b63ffffffff60801b161760a09390931b63ffffffff60a01b169290921760c09290921b63ffffffff60c01b169190911790556101808301516003820180546001600160e01b031660e09290921b6001600160e01b03191691909117905501906001600160401b036101a0820151166fffffffffffffffff00000000000000006101c0845493015160401b16916001600160801b031916171790556040516114c081612487565b6001600160801b03600435168152602081016001600160401b03421681526115466001600160401b036040840192816101a435168452335f5260056020526001600160801b0360405f209551166001600160801b0319865416178555511683908154906001600160401b0360801b9060801b16906001600160401b0360801b1916179055565b5181546001600160c01b031660c09190911b6001600160c01b031916179055600660205260405f2080546115799061276f565b90556040517f893ee2884748c042330e2dba3ef220312d770a54d6d902d1c7612d9b434ab0a73391806115c14234600435846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255602060405160018152f35b60449160405191635ee1691b60e11b835260048301526024820152fd5b604460035460405190635ee1691b60e11b82525f60048301526024820152fd5b6001600160401b036101a06116359201511642612677565b90808210156111c25760249161164a91612677565b604051906365a85b4760e01b82526004820152fd5b506001600160401b036101a08201511615156111bd565b604051634ef2701560e01b81526001600160401b036101a43581166004830152919091166024820152604490fd5b604051632057875960e21b8152600490fd5b604490604051906306427aeb60e01b82526101c43560048301526024820152fd5b6040516331b3a51360e01b81526101a4356001600160401b031660048201526361cf99806024820152604490fd5b604051635467da8d60e11b8152604480356004830152620f4240602483015290fd5b6044604051635467da8d60e11b81526024356004820152620f42406024820152fd5b6044604051635467da8d60e11b81526004356004820152620f42406024820152fd5b60449060405190631e0bd6c160e31b82523460048301526024820152fd5b346102c4575f3660031901126102c4575f80516020612d68833981519152546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c4577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005415806118ec575b156118af576118036128c4565b61180b612986565b6040516020808201928284106001600160401b03851117610aef57916020611864859461185697966040525f8452604051978897600f60f81b895260e0858a015260e0890190612593565b908782036040890152612593565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061189857505050500390f35b835185528695509381019392810192600101611889565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10154156117f6565b346102c4575f3660031901126102c45761192d61271a565b005b346102c45760203660031901126102c4576001600160a01b03611950612471565b165f526006602052602060405f2054604051908152f35b346102c4575f3660031901126102c4575f80516020612de883398151915254336001600160a01b03909116036119a05761192d33612821565b60405163118cdaa760e01b8152336004820152602490fd5b346102c4575f3660031901126102c45760206040516102588152f35b346102c4575f3660031901126102c4576119ec61277d565b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d68833981519152805491821690555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c457611a7f61277d565b611a876127f6565b611a8f61279d565b8015610592577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695602047611ac48115156125d1565b611add5f80808085895af1611ad761260a565b50612639565b604051908152a260015f80516020612dc883398151915255005b346102c4575f3660031901126102c457602060ff5f80516020612da883398151915254166040519015158152f35b60803660031901126102c457602460043581356001600160401b03808216908183036102c45760448035956064358381116102c457611b68903690600401612566565b90611b7161279d565b611b796127cc565b5f54803403611e925750620f4240808911611e7657506361cf9980808710611e5a5750335f5260209860068a5260405f2054808203611e3e57509161108861108e926110808b8d611c1c97604051918201927fd0a0509035718ad455d593d20a83743ce5d6920842ee8cb1f4d76d7197a7bcb8845233604084015260608301528c608083015260a082015260a08152611c11816124be565b519020611063612b43565b6002546001600160a01b039081169116036116a457335f526005875260405f20946040805196611c4b88612487565b54916001600160801b039788841681528a810193878160801c16855260c01c928391015281871115611e15575050600154908482151580611e09575b611de5575b505050834210611dc957611ca08442612677565b9060035490818311611db15750505050611d1d9060405193611cc185612487565b85811685524282168786019081526040808701958652335f90815260058a522095518654915167ffffffffffffffff60801b1991909316166001600160c01b031990911617911660801b67ffffffffffffffff60801b16178355565b5181546001600160c01b031660c09190911b6001600160c01b0319161790556006825260405f208054611d4f9061276f565b90556040517fd1ab2b2d603dc80565da0286deeb7d3699341e28d8234689428dbe9b7d58c8ac339180611d95423487846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255604051908152f35b60405192635ee1691b60e11b84526004840152820152fd5b600354604051635ee1691b60e11b81525f600482015291820152fd5b611df191511642612677565b90808210611dff5784611c8c565b9061164a91612677565b50808251161515611c87565b604051634ef2701560e01b81526001600160401b03918216600482015291166024820152604490fd5b85925084604051926306427aeb60e01b84526004840152820152fd5b86859185604051926331b3a51360e01b84526004840152820152fd5b8885918560405192635467da8d60e11b84526004840152820152fd5b604051631e0bd6c160e31b8152346004820152938401525050fd5b346102c4575f3660031901126102c4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611f175760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b60403660031901126102c457611f3d612471565b6024356001600160401b0381116102c457366023820112156102c457611f6d903690602481600401359101612530565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156120ff575b50611f1757611fb161277d565b8116906040516352d1902d60e01b8152602081600481865afa5f91816120cb575b50611ff057604051634c9c8ce360e01b815260048101849052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc929192908181036120b35750823b1561209a5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561208157505f8083602061192d95519101845af461207b61260a565b91612ce4565b9150503461208b57005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091506020813d6020116120f7575b816120e7602093836124f4565b810103126102c457519085611fd2565b3d91506120da565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141584611fa4565b346102c45760203660031901126102c457602061214e600435611063612b43565b604051908152f35b346102c4575f3660031901126102c4576020600154604051908152f35b346102c4575f3660031901126102c45761218b61277d565b6121936127f6565b5f80516020612da883398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b346102c4575f3660031901126102c4576020600354604051908152f35b346102c45760203660031901126102c4576040612215612210612471565b612698565b825191151582526020820152f35b346102c45760203660031901126102c45760043561223f61277d565b7f0000000000000000000000000000000000000000000000000000000000000000808211612297577f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76602083805f55604051908152a1005b604051631e0bd6c160e31b815260048101929092526024820152604490fd5b346102c4575f3660031901126102c4576020604051620f42408152f35b346102c4575f3660031901126102c45760205f54604051908152f35b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c45761231d61277d565b61232561279d565b8015610592577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364602047611ac48115156125d1565b346102c45760203660031901126102c45760043561237661277d565b801515806123ed575b156123b5576020817fed1b8a3acdd1de20e69e80caa4b3762f856b4e74e0fad35189af650e20c3085a92600355604051908152a1005b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69644d617853696741676560801b6044820152606490fd5b506201518081111561237f565b346102c45760203660031901126102c45760043561241661277d565b62015180808211612452577fad8a71533bfa097e1676af0fbe86477cb4b1a4c3456cc493a1253ae5d9b7cf2d60208380600155604051908152a1005b6040516306115faf60e11b815260048101929092526024820152604490fd5b600435906001600160a01b03821682036102c457565b606081019081106001600160401b03821117610aef57604052565b6101e081019081106001600160401b03821117610aef57604052565b60c081019081106001600160401b03821117610aef57604052565b604081019081106001600160401b03821117610aef57604052565b90601f801991011681019081106001600160401b03821117610aef57604052565b6001600160401b038111610aef57601f01601f191660200190565b92919261253c82612515565b9161254a60405193846124f4565b8294818452818301116102c4578281602093845f960137010152565b9181601f840112156102c4578235916001600160401b0383116102c457602083818601950101116102c457565b91908251928382525f5b8481106125bd575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161259d565b156125d857565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b3d15612634573d9061261b82612515565b9161262960405193846124f4565b82523d5f602084013e565b606090565b1561264057565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b9190820391821161268457565b634e487b7160e01b5f52601160045260245ffd5b6001549081156127115760018060a01b03165f52600560205260405f20604051906126c282612487565b54906001600160801b038216815260406001600160401b038360801c169283602084015260c01c9101528015612711576126fc9042612677565b818110156127115761270d91612677565b5f91565b50506001905f90565b61272261277d565b61272a6127cc565b5f80516020612da8833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1565b5f1981146126845760010190565b5f80516020612d68833981519152546001600160a01b031633036119a057565b5f80516020612dc883398151915260028154146127ba5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff5f80516020612da883398151915254166127e457565b60405163d93c066560e01b8152600490fd5b60ff5f80516020612da883398151915254161561280f57565b604051638dfc202b60e01b8152600490fd5b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d6883398151915280549182166001600160a01b0393841690811790915591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600182811c921680156128ba575b60208310146128a657565b634e487b7160e01b5f52602260045260245ffd5b91607f169161289b565b604051905f825f80516020612d48833981519152918254926128e58461288c565b808452936020916001918281169081156129605750600114612913575b505050612911925003836124f4565b565b5f9081525f80516020612d888339815191529590935091905b82841061294857506129119450505081016020015f8080612902565b8554888501830152948501948794509281019261292c565b925050506020925061291194915060ff191682840152151560051b8201015f8080612902565b604051905f827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103918254926129ba8461288c565b8084529360209160019182811690811561296057506001146129e557505050612911925003836124f4565b5f9081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410612a2d57506129119450505081016020015f8080612902565b85548885018301529485019487945092810192612a11565b8151919060418303612a7557612a6e9250602082015190606060408401519301515f1a90612ba8565b9192909190565b50505f9160029190565b6004811015612aee5780612a91575050565b60018103612aab5760405163f645eedf60e01b8152600490fd5b60028103612acc5760405163fce698f760e01b815260048101839052602490fd5b600314612ad65750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612b3157565b604051631afcd79f60e31b8152600490fd5b612b4b612c35565b612b53612c9f565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152612ba2816124be565b51902090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612c2a579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612c1f575f516001600160a01b03811615612c1557905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b612c3d6128c4565b8051908115612c4d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015612c7a5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b612ca7612986565b8051908115612cb7576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612c7a5790565b90612d0b5750805115612cf957805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612d3e575b612d1c575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612d1456fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930042ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57dcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00a2646970667358221220c9e418977726284d1ff300ba9f262ea3ccb7ef8e2fd1432a9157447ed4773c0b64736f6c63430008170033a264697066735822122053a0c2232c2acdf085794b58ad7ea74fd26af355f54951b3cbe1b786379c3a5a64736f6c63430008170033",
                "sourceMap": "382:2080:46:-:0;;;;;;;;;;3166:4:3;382:2080:46;;;3166:4:3;382:2080:46;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "608060408181526004918236101562000016575f80fd5b5f925f3560e01c918263943a685614620006fa57508163bc063e1a14620006d7578163c0406226146200007e575063f8ccbf471462000053575f80fd5b346200007a57816003193601126200007a5760209060ff600c5460101c1690519015158152f35b5080fd5b90503462000650575f366003190112620006505781519163c1978d1f60e01b83526024916020908181860152600b848601526a505249564154455f4b455960a81b6044860152737109709ecfa91a80626ff3989d68f67f5b1dd12d948281606481895afa908115620006cd575f916200069a575b5083516001625e79b760e01b0319815282810182905290838287818a5afa91821562000646575f9262000654575b50863b15620006505784519063ce817d4760e01b8252838201525f818781838b5af18015620006465762000630575b50835191612fb88084019367ffffffffffffffff91818610838711176200061e5762000b4e8239858166038d7ea4c68000968781520301908af09788156200061457865190630b4988fd60e41b87830152655af3107a4000998a8a84015260018060a01b039384871680604486015260648501526064845260a0840191848310828411176200060257828b528516936102c88082019260a084019190821185831017620005ef578f95949392918791620008868639528b60c08301526200021d60e0609f19930182620007a0565b03019083f0948515620005e157813b15620005eb578951633b756e9b60e11b81529183918391829084905af18015620005e157620005b7575b505093620005b498620003f185620003965f968796620003667f332e204465706c6f7920746f2042617365204d61696e6e6574207768656e20729b6200032a636561647960e01b9f9e9c8f702232b83637bcb2b91030b2323932b9b99d60791b8f91620003108151620002c98162000743565b603081527f53636f7265436865636b65725570677261646561626c655632206465706c6f79858201526f6564207375636365737366756c6c792160801b83820152620007e0565b51916200031d8362000760565b6011835282015262000832565b8d51620003378162000760565b601781527f496d706c656d656e746174696f6e20616464726573733a0000000000000000008d82015262000832565b8b5191620003748362000760565b600e83526d283937bc3c9030b2323932b9b99d60911b8b840152169062000832565b620003c0818a51620003a88162000760565b600681526527bbb732b91d60d11b8a82015262000832565b8851620003cd8162000760565b601281527120baba3437b934bd32b21039b4b3b732b91d60711b8882015262000832565b86620004cc815192620004048462000760565b600884526726b0bc103332b29d60c11b888501528b8351918780848c810199620004436309710a9d60e41b9a8b8d528a888501526064840190620007a0565b90604483015203946200045f601f19968781018352826200077d565b516a636f6e736f6c652e6c6f67998a5afa50620004b98551620004828162000760565b601281527124b734ba34b0b61031b432b1b5903332b29d60711b8c82015286519687948d8601998a528501526064840190620007a0565b906044830152039081018352826200077d565b51915afa50620005008351620004e28162000760565b600c81526b052732bc3a1039ba32b8399d60a11b83820152620007e0565b6200054e8351620005118162000743565b602681527f312e205665726966792074686520636f6e7472616374206f6e20426173652053838201526565706f6c696160d01b85820152620007e0565b6200059883516200055f8162000743565b602281527f322e20546573742074686520636f6e74726163742066756e6374696f6e616c698382015261747960f01b85820152620007e0565b825194620005a68662000743565b8552840152820152620007e0565b80f35b620005ca9098979596929493986200071a565b620005dd57939294959091895f62000256565b8980fd5b89513d84823e3d90fd5b8280fd5b50634e487b7160e01b8f52604188528c8ffd5b8b604188634e487b7160e01b5f52525ffd5b86513d8b823e3d90fd5b634e487b7160e01b8b5260418452888bfd5b6200063d9197506200071a565b5f955f6200014f565b85513d5f823e3d90fd5b5f80fd5b9091508381813d831162000692575b6200066f81836200077d565b810103126200065057516001600160a01b03811681036200065057905f62000120565b503d62000663565b90508281813d8311620006c5575b620006b481836200077d565b810103126200065057515f620000f2565b503d620006a8565b84513d5f823e3d90fd5b823462000650575f36600319011262000650576020905166038d7ea4c680008152f35b3462000650575f366003190112620006505780655af3107a400060209252f35b67ffffffffffffffff81116200072f57604052565b634e487b7160e01b5f52604160045260245ffd5b6060810190811067ffffffffffffffff8211176200072f57604052565b6040810190811067ffffffffffffffff8211176200072f57604052565b90601f8019910116810190811067ffffffffffffffff8211176200072f57604052565b91908251928382525f5b848110620007cb575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201620007aa565b5f80916040516200081f8162000810602082019463104c13eb60e21b8652602060248401526044830190620007a0565b03601f1981018352826200077d565b51906a636f6e736f6c652e6c6f675afa50565b5f919082916200081f604051809262000865602083019563319af33360e01b8752604060248501526064840190620007a0565b6001600160a01b0391909116604483015203601f1981018352826200077d56fe60806040526102c8803803806100148161018e565b92833981019060408183031261018a5780516001600160a01b03811680820361018a5760208381015190936001600160401b03821161018a570184601f8201121561018a5780519061006d610068836101c7565b61018e565b9582875285838301011161018a5784905f5b8381106101765750505f9186010152813b1561015e577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a283511561014057505f80848461012796519101845af4903d15610137573d610118610068826101c7565b9081525f81943d92013e6101e2565b505b604051608290816102468239f35b606092506101e2565b925050503461014f5750610129565b63b398979f60e01b8152600490fd5b60249060405190634c9c8ce360e01b82526004820152fd5b81810183015188820184015286920161007f565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176101b357604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b0381116101b357601f01601f191660200190565b9061020957508051156101f757805190602001fd5b604051630a12f52160e11b8152600490fd5b8151158061023c575b61021a575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561021256fe60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e156048573d5ff35b3d5ffdfea264697066735822122003ff241d0e0c9f62eb973dd5729104fe6e1737cd4a1481575014654fa138f34f64736f6c6343000817003360c0346200016257601f62002fb838819003918201601f19168301926001600160401b0392909183851183861017620001665781602092849260409788528339810103126200016257513060805280156200011e5760a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff82851c166200010d578080831603620000c8575b8351612e3d90816200017b8239608051818181611ebf0152611f78015260a05181818161063f0152818161071001526122410152f35b6001600160401b0319909116811790915581519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f808062000092565b835163f92ee8a960e01b8152600490fd5b825162461bcd60e51b815260206004820152601560248201527f4d61784665652063616e6e6f74206265207a65726f00000000000000000000006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610085575b36156100475760405162461bcd60e51b815260206004820152600b60248201526a4e6f2066616c6c6261636b60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275111a5c9958dd08115512081b9bdd08185b1b1bddd95960521b6044820152606490fd5b5f3560e01c806310cb729f146123fa578063110b32851461235a578063164e68de146122ef5780631904863c146122d357806327ff6223146122b6578063319a2cbb1461222357806333917ca9146121f257806333b3e099146121d55780633f4ba83a146121735780633fb19a53146121565780634980f2881461212d5780634f1ef28614611f2957806351858e271461191557806352d1902d14611ead5780635836d17b14611b255780635c975abb14611af75780636ff1c9bc14611a51578063715018a6146119d4578063738fc2f9146119b857806379ba5097146119675780637ecebe001461192f5780638456cb591461191557806384b0196e146117bd5780638da5cb5b146117895780639b50c5f914610eae578063a23195ed14610cd5578063ad3cb1cc14610c8c578063b4988fd014610662578063bc063e1a14610628578063c771909c14610600578063c8910913146105a4578063d279b0ca1461051c578063d47875d0146104ac578063d91a9458146103bb578063e30c397814610387578063ee4eb93d14610369578063f2fde38b146102e5578063fede6114146102c85763ffc9896b0361000e57346102c45760203660031901126102c45760806001600160a01b03610259612471565b16805f52600560205260405f2090604080519261027584612487565b54916001600160801b038316938481526001600160401b0384871c169384602083015260c01c92839101525f52600660205260405f205491604051938452602084015260408301526060820152f35b5f80fd5b346102c4575f3660031901126102c4576020604051620151808152f35b346102c45760203660031901126102c4576102fe612471565b61030661277d565b5f80516020612de883398151915280546001600160a01b0319166001600160a01b039283169081179091555f80516020612d68833981519152549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b346102c4575f3660031901126102c45760206040516361cf99808152f35b346102c4575f3660031901126102c4575f80516020612de8833981519152546040516001600160a01b039091168152602090f35b346102c45760203660031901126102c4576001600160a01b036103dc612471565b165f5260046020526101e060405f208054906001600160801b03906001810154906001600160401b039263ffffffff906002830154600460038501549401549460405197838116895260801c60208901528281166040890152868160801c166060890152838160c01c16608089015260e01c60a088015281811660c088015260801c60e08701528216610100860152808260801c16610120860152808260a01c166101408601528160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b346102c45760203660031901126102c4576001600160a01b036104cd612471565b165f5260056020526040805f208151906104e682612487565b546001600160801b03811691828152836001600160401b038360801c169283602084015260c01c91015282519182526020820152f35b346102c45760203660031901126102c457610535612471565b61053d61277d565b6001600160a01b03168015610592576020817f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b60405163d92e233d60e01b8152600490fd5b346102c45760203660031901126102c4576001600160a01b036105c5612471565b165f526005602052606060405f2054604051906001600160801b03811682526001600160401b038160801c16602083015260c01c6040820152f35b346102c4575f3660031901126102c4576002546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c45760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102c45760603660031901126102c4576001600160a01b0360243581811681036102c457816044351680604435036102c4577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00918254916001600160401b03831680159081610c7c575b6001149081610c72575b159081610c69575b50610c575760016001600160401b0319841617845560ff8360401c1615610c38575b848216156105925715610592577f00000000000000000000000000000000000000000000000000000000000000008060043511610c185750610741612b02565b610749612b02565b610751612b02565b5f80516020612da8833981519152805460ff1916905561076f612b02565b610777612b02565b60015f80516020612dc88339815191525560405193610795856124d9565b600e85526d42617365426164676553636f726560901b6020860152604051946107bd866124d9565b60018652603160f81b60208701526107d3612b02565b6107db612b02565b8051906001600160401b038211610aef5781906108055f80516020612d488339815191525461288c565b601f8111610b9a575b50602090601f8311600114610b0e575f92610b03575b50508160011b915f199060031b1c1916175f80516020612d48833981519152555b84516001600160401b038111610aef577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10390610881825461288c565b601f8111610a8d575b506020601f82116001146109e4579181602094927f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73969460ff999a5f926109d9575b50508160011b915f199060031b1c19161790555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015561092e612b02565b6004355f55600280546001600160a01b031916838316179055601e60015561025860035561095d604435612821565b60405191168152a17f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7660206040516004358152a160401c161561099c57005b68ff00000000000000001981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508a806108cc565b601f19821697835f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75985f5b818110610a7557509260ff98997f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73979593600193836020999710610a5d575b505050811b0190556108e0565b01515f1960f88460031b161c191690558a8080610a50565b838301518b556001909a019960209384019301610a11565b825f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f830160051c81019160208410610ae5575b601f0160051c01905b818110610ada575061088a565b5f8155600101610acd565b9091508190610ac4565b634e487b7160e01b5f52604160045260245ffd5b015190508780610824565b92505f80516020612d488339815191525f525f80516020612d88833981519152905f935b601f1984168510610b7f576001945083601f19811610610b67575b505050811b015f80516020612d4883398151915255610845565b01515f1960f88460031b161c19169055878080610b4d565b81810151835560209485019460019093019290910190610b32565b9091505f80516020612d488339815191525f52601f830160051c5f80516020612d88833981519152019060208410610c03575b90601f8493920160051c5f80516020612d8883398151915201905b818110610bf5575061080e565b5f8155849350600101610be8565b5f80516020612d888339815191529150610bcd565b60449060405190631e0bd6c160e31b825260043560048301526024820152fd5b68ffffffffffffffffff19831668010000000000000001178455610701565b60405163f92ee8a960e01b8152600490fd5b905015866106df565b303b1591506106d7565b604085901c60ff161591506106cd565b346102c4575f3660031901126102c457610cd1604051610cab816124d9565b60058152640352e302e360dc1b6020820152604051918291602083526020830190612593565b0390f35b346102c45760203660031901126102c4576001600160a01b03610cf6612471565b165f5260046020526101e060405f206001600160401b03604051610d19816124a2565b8254926001600160801b03841682528360801c602083015260018101546001600160801b0381166040840152838160801c16606084015263ffffffff8160c01c1660808401528060e01c60a08401526002820154906001600160801b03821660c08501528160801c60e085015260046003840154936001600160801b03851661010087015263ffffffff8560801c1661012087015263ffffffff8560a01c1661014087015263ffffffff8560c01c166101608701528460e01c6101808701520154938585166101a08201526101c0868660401c16910152604051956001600160801b038116875260801c60208701526001600160801b0381166040870152848160801c16606087015263ffffffff8160c01c16608087015260e01c60a08601526001600160801b03811660c086015260801c60e08501526001600160801b03811661010085015263ffffffff8160801c1661012085015263ffffffff8160a01c1661014085015263ffffffff8160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b6102003660031901126102c4576001600160401b036101a435166101a435036102c4576101e4356001600160401b0381116102c457610ef1903690600401612566565b90610efa61279d565b610f026127cc565b5f5480340361176b5750620f42406004351161174957620f42406024351161172757620f424060443511611705576361cf99806001600160401b036101a43516106116d757335f52600660205260405f2054806101c435036116b65750604051917ff418e5fde2935aec5659dcc0d3addca54c1096967fe1a5e81cbcfc2ef0e4529a60208401523360408401526004356060840152602435608084015260443560a084015260643560c084015260843560e084015260a43561010084015260c43561012084015260e4356101408401526101043561016084015261012435610180840152610144356101a0840152610164356101c0840152610184356101e08401526001600160401b036101a435166102008401526102206101c435818501528352826102408101106001600160401b0361024085011117610aef5761108861108e9261108085610240611097970160405260208151910120611063612b43565b6042916040519161190160f01b8352600283015260228201522090565b923691612530565b90612a45565b90929192612a7f565b6002546001600160a01b039081169116036116a457335f52600460205260405f206001600160401b036004604051926110cf846124a2565b80546001600160801b038116855260801c602085015260018101546001600160801b0381166040860152838160801c16606086015263ffffffff8160c01c16608086015260e01c60a085015260028101546001600160801b03811660c086015260801c60e085015260038101546001600160801b03811661010086015263ffffffff8160801c1661012086015263ffffffff8160a01c1661014086015263ffffffff8160c01c1661016086015260e01c61018085015201548181166101a084015260401c16806101c0830152806001600160401b036101a4351611156116765750600154908115158061165f575b61161d575b50506001600160401b036101a4351642106115fd576111ed6001600160401b036101a4351642612677565b600354908181116115e057604051611204816124a2565b6001600160801b036004351681526001600160801b036024351660208201526001600160801b036044351660408201526001600160401b0360643516606082015263ffffffff60843516608082015263ffffffff60a4351660a08201526001600160801b0360c4351660c08201526001600160801b0360e4351660e08201526001600160801b03610104351661010082015263ffffffff610124351661012082015263ffffffff610144351661014082015263ffffffff610164351661016082015263ffffffff61018435166101808201526001600160401b0342166101a08201526001600160401b036101a435166101c0820152335f526004602052600460405f206001600160801b038351166001600160801b031982541617815561134d6001600160801b0360208501511682906001600160801b0382549181199060801b169116179055565b6040830151606084015160808086015160a087015160e01b6001600160e01b0319166001600160801b039094169290911b67ffffffffffffffff60801b169190911763ffffffff60c01b60c09290921b919091161717600182015560c083015160e084015160801b6fffffffffffffffffffffffffffffffff19166001600160801b03919091161760028201556101008301516003820180546101208601516101408701516101608801516001600160e01b03199093166001600160801b03959095169490941760809190911b63ffffffff60801b161760a09390931b63ffffffff60a01b169290921760c09290921b63ffffffff60c01b169190911790556101808301516003820180546001600160e01b031660e09290921b6001600160e01b03191691909117905501906001600160401b036101a0820151166fffffffffffffffff00000000000000006101c0845493015160401b16916001600160801b031916171790556040516114c081612487565b6001600160801b03600435168152602081016001600160401b03421681526115466001600160401b036040840192816101a435168452335f5260056020526001600160801b0360405f209551166001600160801b0319865416178555511683908154906001600160401b0360801b9060801b16906001600160401b0360801b1916179055565b5181546001600160c01b031660c09190911b6001600160c01b031916179055600660205260405f2080546115799061276f565b90556040517f893ee2884748c042330e2dba3ef220312d770a54d6d902d1c7612d9b434ab0a73391806115c14234600435846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255602060405160018152f35b60449160405191635ee1691b60e11b835260048301526024820152fd5b604460035460405190635ee1691b60e11b82525f60048301526024820152fd5b6001600160401b036101a06116359201511642612677565b90808210156111c25760249161164a91612677565b604051906365a85b4760e01b82526004820152fd5b506001600160401b036101a08201511615156111bd565b604051634ef2701560e01b81526001600160401b036101a43581166004830152919091166024820152604490fd5b604051632057875960e21b8152600490fd5b604490604051906306427aeb60e01b82526101c43560048301526024820152fd5b6040516331b3a51360e01b81526101a4356001600160401b031660048201526361cf99806024820152604490fd5b604051635467da8d60e11b8152604480356004830152620f4240602483015290fd5b6044604051635467da8d60e11b81526024356004820152620f42406024820152fd5b6044604051635467da8d60e11b81526004356004820152620f42406024820152fd5b60449060405190631e0bd6c160e31b82523460048301526024820152fd5b346102c4575f3660031901126102c4575f80516020612d68833981519152546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c4577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005415806118ec575b156118af576118036128c4565b61180b612986565b6040516020808201928284106001600160401b03851117610aef57916020611864859461185697966040525f8452604051978897600f60f81b895260e0858a015260e0890190612593565b908782036040890152612593565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061189857505050500390f35b835185528695509381019392810192600101611889565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10154156117f6565b346102c4575f3660031901126102c45761192d61271a565b005b346102c45760203660031901126102c4576001600160a01b03611950612471565b165f526006602052602060405f2054604051908152f35b346102c4575f3660031901126102c4575f80516020612de883398151915254336001600160a01b03909116036119a05761192d33612821565b60405163118cdaa760e01b8152336004820152602490fd5b346102c4575f3660031901126102c45760206040516102588152f35b346102c4575f3660031901126102c4576119ec61277d565b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d68833981519152805491821690555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c457611a7f61277d565b611a876127f6565b611a8f61279d565b8015610592577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695602047611ac48115156125d1565b611add5f80808085895af1611ad761260a565b50612639565b604051908152a260015f80516020612dc883398151915255005b346102c4575f3660031901126102c457602060ff5f80516020612da883398151915254166040519015158152f35b60803660031901126102c457602460043581356001600160401b03808216908183036102c45760448035956064358381116102c457611b68903690600401612566565b90611b7161279d565b611b796127cc565b5f54803403611e925750620f4240808911611e7657506361cf9980808710611e5a5750335f5260209860068a5260405f2054808203611e3e57509161108861108e926110808b8d611c1c97604051918201927fd0a0509035718ad455d593d20a83743ce5d6920842ee8cb1f4d76d7197a7bcb8845233604084015260608301528c608083015260a082015260a08152611c11816124be565b519020611063612b43565b6002546001600160a01b039081169116036116a457335f526005875260405f20946040805196611c4b88612487565b54916001600160801b039788841681528a810193878160801c16855260c01c928391015281871115611e15575050600154908482151580611e09575b611de5575b505050834210611dc957611ca08442612677565b9060035490818311611db15750505050611d1d9060405193611cc185612487565b85811685524282168786019081526040808701958652335f90815260058a522095518654915167ffffffffffffffff60801b1991909316166001600160c01b031990911617911660801b67ffffffffffffffff60801b16178355565b5181546001600160c01b031660c09190911b6001600160c01b0319161790556006825260405f208054611d4f9061276f565b90556040517fd1ab2b2d603dc80565da0286deeb7d3699341e28d8234689428dbe9b7d58c8ac339180611d95423487846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255604051908152f35b60405192635ee1691b60e11b84526004840152820152fd5b600354604051635ee1691b60e11b81525f600482015291820152fd5b611df191511642612677565b90808210611dff5784611c8c565b9061164a91612677565b50808251161515611c87565b604051634ef2701560e01b81526001600160401b03918216600482015291166024820152604490fd5b85925084604051926306427aeb60e01b84526004840152820152fd5b86859185604051926331b3a51360e01b84526004840152820152fd5b8885918560405192635467da8d60e11b84526004840152820152fd5b604051631e0bd6c160e31b8152346004820152938401525050fd5b346102c4575f3660031901126102c4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611f175760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b60403660031901126102c457611f3d612471565b6024356001600160401b0381116102c457366023820112156102c457611f6d903690602481600401359101612530565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156120ff575b50611f1757611fb161277d565b8116906040516352d1902d60e01b8152602081600481865afa5f91816120cb575b50611ff057604051634c9c8ce360e01b815260048101849052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc929192908181036120b35750823b1561209a5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561208157505f8083602061192d95519101845af461207b61260a565b91612ce4565b9150503461208b57005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091506020813d6020116120f7575b816120e7602093836124f4565b810103126102c457519085611fd2565b3d91506120da565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141584611fa4565b346102c45760203660031901126102c457602061214e600435611063612b43565b604051908152f35b346102c4575f3660031901126102c4576020600154604051908152f35b346102c4575f3660031901126102c45761218b61277d565b6121936127f6565b5f80516020612da883398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b346102c4575f3660031901126102c4576020600354604051908152f35b346102c45760203660031901126102c4576040612215612210612471565b612698565b825191151582526020820152f35b346102c45760203660031901126102c45760043561223f61277d565b7f0000000000000000000000000000000000000000000000000000000000000000808211612297577f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76602083805f55604051908152a1005b604051631e0bd6c160e31b815260048101929092526024820152604490fd5b346102c4575f3660031901126102c4576020604051620f42408152f35b346102c4575f3660031901126102c45760205f54604051908152f35b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c45761231d61277d565b61232561279d565b8015610592577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364602047611ac48115156125d1565b346102c45760203660031901126102c45760043561237661277d565b801515806123ed575b156123b5576020817fed1b8a3acdd1de20e69e80caa4b3762f856b4e74e0fad35189af650e20c3085a92600355604051908152a1005b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69644d617853696741676560801b6044820152606490fd5b506201518081111561237f565b346102c45760203660031901126102c45760043561241661277d565b62015180808211612452577fad8a71533bfa097e1676af0fbe86477cb4b1a4c3456cc493a1253ae5d9b7cf2d60208380600155604051908152a1005b6040516306115faf60e11b815260048101929092526024820152604490fd5b600435906001600160a01b03821682036102c457565b606081019081106001600160401b03821117610aef57604052565b6101e081019081106001600160401b03821117610aef57604052565b60c081019081106001600160401b03821117610aef57604052565b604081019081106001600160401b03821117610aef57604052565b90601f801991011681019081106001600160401b03821117610aef57604052565b6001600160401b038111610aef57601f01601f191660200190565b92919261253c82612515565b9161254a60405193846124f4565b8294818452818301116102c4578281602093845f960137010152565b9181601f840112156102c4578235916001600160401b0383116102c457602083818601950101116102c457565b91908251928382525f5b8481106125bd575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161259d565b156125d857565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b3d15612634573d9061261b82612515565b9161262960405193846124f4565b82523d5f602084013e565b606090565b1561264057565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b9190820391821161268457565b634e487b7160e01b5f52601160045260245ffd5b6001549081156127115760018060a01b03165f52600560205260405f20604051906126c282612487565b54906001600160801b038216815260406001600160401b038360801c169283602084015260c01c9101528015612711576126fc9042612677565b818110156127115761270d91612677565b5f91565b50506001905f90565b61272261277d565b61272a6127cc565b5f80516020612da8833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1565b5f1981146126845760010190565b5f80516020612d68833981519152546001600160a01b031633036119a057565b5f80516020612dc883398151915260028154146127ba5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff5f80516020612da883398151915254166127e457565b60405163d93c066560e01b8152600490fd5b60ff5f80516020612da883398151915254161561280f57565b604051638dfc202b60e01b8152600490fd5b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d6883398151915280549182166001600160a01b0393841690811790915591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600182811c921680156128ba575b60208310146128a657565b634e487b7160e01b5f52602260045260245ffd5b91607f169161289b565b604051905f825f80516020612d48833981519152918254926128e58461288c565b808452936020916001918281169081156129605750600114612913575b505050612911925003836124f4565b565b5f9081525f80516020612d888339815191529590935091905b82841061294857506129119450505081016020015f8080612902565b8554888501830152948501948794509281019261292c565b925050506020925061291194915060ff191682840152151560051b8201015f8080612902565b604051905f827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103918254926129ba8461288c565b8084529360209160019182811690811561296057506001146129e557505050612911925003836124f4565b5f9081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410612a2d57506129119450505081016020015f8080612902565b85548885018301529485019487945092810192612a11565b8151919060418303612a7557612a6e9250602082015190606060408401519301515f1a90612ba8565b9192909190565b50505f9160029190565b6004811015612aee5780612a91575050565b60018103612aab5760405163f645eedf60e01b8152600490fd5b60028103612acc5760405163fce698f760e01b815260048101839052602490fd5b600314612ad65750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612b3157565b604051631afcd79f60e31b8152600490fd5b612b4b612c35565b612b53612c9f565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152612ba2816124be565b51902090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612c2a579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612c1f575f516001600160a01b03811615612c1557905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b612c3d6128c4565b8051908115612c4d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015612c7a5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b612ca7612986565b8051908115612cb7576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612c7a5790565b90612d0b5750805115612cf957805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612d3e575b612d1c575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612d1456fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930042ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57dcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00a2646970667358221220c9e418977726284d1ff300ba9f262ea3ccb7ef8e2fd1432a9157447ed4773c0b64736f6c63430008170033a264697066735822122053a0c2232c2acdf085794b58ad7ea74fd26af355f54951b3cbe1b786379c3a5a64736f6c63430008170033",
                "sourceMap": "382:2080:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:28:1;382:2080:46;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;382:2080:46;;;;;;1590:14:0;;;;709:25:46;;1590:14:0;709:25:46;;;;;;;1590:14:0;;;;;;-1:-1:-1;;;1590:14:0;;;;382:2080:46;709:25;;;1590:14:0;709:25:46;;;;;;;;;382:2080;709:25;;;382:2080;-1:-1:-1;382:2080:46;;-1:-1:-1;;;;;;763:27:46;;;;;382:2080;;;;763:27;382:2080;763:27;382:2080;763:27;;;;;;;;382:2080;763:27;;;382:2080;1015:37;;;;;;382:2080;;1590:14:0;;;;1015:37:46;;;;;382:2080;;1015:37;;;;;;;;;;;;;382:2080;;;;1147:38;;;;;;;;;;;;;;;;;;;;515:11;;;382:2080;;;;1147:38;;;;;;;;;;382:2080;;1312:219;;;;;;;;597:12;1312:219;;;;;382:2080;1590:14:0;382:2080:46;;;;;;;;1590:14:0;;;;;;;;;;1312:219:46;;1590:14:0;;;;;;;;;;;;;;;;382:2080:46;;;1595:85;;;;;1590:14:0;1595:85:46;;;;;;;;;;;;;;;;;;;;;;;1590:14:0;;;;;;;382:2080:46;1595:85;;1590:14:0;;;;:::i;:::-;1595:85:46;;;;;;;;;;1699:18;;;;;382:2080;;-1:-1:-1;;;1699:18:46;;382:2080;;;;;;;;;1699:18;;;;;;;;382:2080;;;;2401:52;382:2080;2032:42;382:2080;1937:46;382:2080;;;;1863:64;1590:14:0;382:2080:46;1810:43;-1:-1:-1;;;382:2080:46;;;;-1:-1:-1;;;382:2080:46;;1736:64;382:2080;;1590:14:0;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1590:14:0;;;;1736:64:46;:::i;:::-;382:2080;1590:14:0;;;;:::i;:::-;;;;;;;1810:43:46;:::i;:::-;382:2080;;1590:14:0;;;:::i;:::-;;;;;;;;;1863:64:46;:::i;:::-;382:2080;;1590:14:0;;;;:::i;:::-;;;;-1:-1:-1;;;1590:14:0;;;;382:2080:46;1937:46;;:::i;:::-;1993:29;382:2080;;;1590:14:0;;;:::i;:::-;;;;-1:-1:-1;;;1590:14:0;;;;1993:29:46;:::i;:::-;382:2080;;1590:14:0;;;:::i;:::-;;;;-1:-1:-1;;;1590:14:0;;;;2032:42:46;:::i;:::-;382:2080;7112:51:15;382:2080:46;;1590:14:0;;;;:::i;:::-;;;;-1:-1:-1;;;1590:14:0;;;;382:2080:46;;;7112:51:15;;;;;;;;382:2080:46;7112:51:15;;;;;;;;;;;382:2080:46;1590:14:0;382:2080:46;;;;:::i;:::-;;1590:14:0;382:2080:46;;;7112:51:15;;;;;;;;;;;;;:::i;:::-;1590:14:0;131:42:15;762:159;;;;;382:2080:46;;;1590:14:0;;;:::i;:::-;;;;-1:-1:-1;;;1590:14:0;;;;382:2080:46;;7112:51:15;;;;;;;;;;;382:2080:46;1590:14:0;382:2080:46;;;;:::i;:::-;;1590:14:0;382:2080:46;;;7112:51:15;;;;;;;;:::i;:::-;1590:14:0;762:159:15;;;;2238:29:46;382:2080;;1590:14:0;;;:::i;:::-;;;;-1:-1:-1;;;1590:14:0;;;;2238:29:46;:::i;:::-;2277:54;382:2080;;1590:14:0;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1590:14:0;;;;2277:54:46;:::i;:::-;2341:50;382:2080;;1590:14:0;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1590:14:0;;;;2341:50:46;:::i;:::-;382:2080;;1590:14:0;;;;:::i;:::-;;;;;;;;;2401:52:46;:::i;:::-;382:2080;;1699:18;;;;;;;;;;;;:::i;:::-;382:2080;;1699:18;;;;;;;;;;382:2080;;;;1699:18;382:2080;;1590:14:0;382:2080:46;;1590:14:0;;;;1699:18:46;382:2080;;;1595:85;-1:-1:-1;;;;1590:14:0;;;;;;;;;;;;;;;382:2080:46;1590:14:0;;382:2080:46;1590:14:0;1147:38:46;382:2080;;1590:14:0;382:2080:46;;1590:14:0;;;;1147:38:46;-1:-1:-1;;;1590:14:0;;;;;;;;1015:37:46;;;;;;:::i;:::-;382:2080;1015:37;;;;;382:2080;;1590:14:0;382:2080:46;1590:14:0;;;;;1015:37:46;382:2080;;;763:27;;;;;;;;;;;;;;;;;:::i;:::-;;;1590:14:0;;;;;-1:-1:-1;;;;;382:2080:46;;1590:14:0;;;;763:27:46;;;;;;;;;709:25;;;;;;;;;;;;;;;;:::i;:::-;;;1590:14:0;;;;;709:25:46;;;;;;;;;382:2080;;1590:14:0;382:2080:46;1590:14:0;;;;;382:2080:46;;;;;;;-1:-1:-1;;382:2080:46;;;;;;;515:11;382:2080;;;;;;;;;-1:-1:-1;;382:2080:46;;;;;597:12;382:2080;;;;1590:14:0;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;382:2080:46;1590:14:0;;;;;;;;;;;382:2080:46;1590:14:0;:::o;:::-;;;7112:51:15;;1590:14:0;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7112:51:15;;1590:14:0;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;6114:121:15;762:159;6114:121;;382:2080:46;;6185:42:15;;382:2080:46;6185:42:15;;;;;;;;;;;;;382:2080:46;;;;;;:::i;:::-;6185:42:15;7112:51;;6185:42;;;;;;:::i;:::-;1590:14:0;762:159:15;131:42;762:159;;;6114:121::o;7621:145::-;762:159;7621:145;;;;7704:54;382:2080:46;;7704:54:15;;382:2080:46;7704:54:15;;;;;;;;;382:2080:46;7704:54:15;;;382:2080:46;;;;;;:::i;:::-;-1:-1:-1;;;;;382:2080:46;;;;;;;1590:14:0;7704:54:15;-1:-1:-1;;7704:54:15;;;;;;:::i",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "INITIAL_CHECK_FEE()": "943a6856",
                "IS_SCRIPT()": "f8ccbf47",
                "MAX_FEE()": "bc063e1a",
                "run()": "c0406226"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/script/DeployUpgradeable.s.sol": {
      "DeployUpgradeable": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_SCRIPT",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "run",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/DeployUpgradeable.s.sol\":\"DeployUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"script/DeployUpgradeable.s.sol\":{\"keccak256\":\"0xdef70d8979a979f05ef7d7dec256adedc08fbf3229c6136b4b73d3f975e76862\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b08b8efcd4e0f6808caf7687be6c38e55c12ada36d106d4f2c464c603174b25e\",\"dweb:/ipfs/QmQffQVaBKan6cgNtKrrmwUprWgVBS7C33F3bqMTkEgT82\"]},\"src/ScoreCheckerUpgradeable.sol\":{\"keccak256\":\"0x6db7e78f2c76e4d86224e448c7e34233fd17fd09745aa75e4bda03a88d00b9f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c980f0e01cc87a10f3442d45444f4883053e95acf114fcedf2bd006d957f70a5\",\"dweb:/ipfs/QmUQcqB6Uw3tkSQMAXv53nGigMQAfCRHQGnQnvoQpEDDyP\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 2758,
                  "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                  "label": "stdChainsInitialized",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2779,
                  "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                  "label": "chains",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)"
                },
                {
                  "astId": 2783,
                  "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                  "label": "defaultRpcUrls",
                  "offset": 0,
                  "slot": "10",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
                },
                {
                  "astId": 2787,
                  "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                  "label": "idToAlias",
                  "offset": 0,
                  "slot": "11",
                  "type": "t_mapping(t_uint256,t_string_storage)"
                },
                {
                  "astId": 2790,
                  "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                  "label": "fallbackToDefaultRpcUrls",
                  "offset": 0,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 3593,
                  "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                  "label": "gasMeteringOff",
                  "offset": 1,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 112,
                  "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                  "label": "IS_SCRIPT",
                  "offset": 2,
                  "slot": "12",
                  "type": "t_bool"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_mapping(t_string_memory_ptr,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => struct StdChains.Chain)",
                  "numberOfBytes": "32",
                  "value": "t_struct(Chain)2774_storage"
                },
                "t_mapping(t_uint256,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_string_memory_ptr": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(Chain)2774_storage": {
                  "encoding": "inplace",
                  "label": "struct StdChains.Chain",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 2767,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "name",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2769,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "chainId",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 2771,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "chainAlias",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2773,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "rpcUrl",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_string_storage"
                    }
                  ]
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "script/DeployUpgradeable.s.sol:DeployUpgradeable",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "60808060405234610027576201000162ff00ff19600c541617600c55612d46908161002c8239f35b5f80fdfe6080604081815260049182361015610015575f80fd5b5f925f3560e01c918263c04062261461006157505063f8ccbf4714610038575f80fd5b3461005d578160031936011261005d5760209060ff600c5460101c1690519015158152f35b5080fd5b90929150346104b9575f3660031901126104b95763c1978d1f60e01b81526024906020918285830152600b818301526044906a505249564154455f4b455960a81b82840152606491737109709ecfa91a80626ff3989d68f67f5b1dd12d9185858581865afa948515610591575f95610562575b5086516001625e79b760e01b031981528881018690529486868381875afa958615610539575f96610543575b50833b156104b95787519063ce817d4760e01b8252898201525f81838183885af1801561053957610526575b508651635e97348f60e01b808252898201899052600b848301526a4d41585f4645455f57454960a81b8683015266038d7ea4c680008383015290948786608481885afa95861561051c578b966104ed575b508851612388968782019067ffffffffffffffff988383108a8411176104da578e93928c928492620009898439815203019082f09485156104ce578a519384528a8c850152600d818501526c434845434b5f4645455f57454960981b838501526601c6bf526340008585015289846084818a5afa9384156104c457829461048d575b508a516301587f9560e61b8082528d82018d90526011838301527020aaaa2427a924ad22a22fa9a4a3a722a960791b858301526001600160a01b039a8b168783018190528c836084818d5afa928315610483578f8f918f8896610464575b505081519384528301526005848301526427aba722a960d91b86830152878201528b816084818c5afa93841561045957918b9493929185929461042a575b508d51630b4988fd60e41b8e8201528881019790975216908501521681830152815260a081019285841182851017610418578389528616946102c88281019360a085019283118684101761040757508b95949392918791620006c18639528860c083015261030f60e0609f19930182610620565b03019083f09687156103f957813b15610403578651633b756e9b60e11b81529183918391829084905af180156103f9576103dd575b5050906103da9461039b7f53636f7265436865636b65725570677261646561626c652061743a000000000093865161037b816105c3565b600f81526e24b6b83632b6b2b73a30ba34b7b71d60891b8782015261065e565b16926103c38482516103ac816105c3565b6006815265283937bc3c9d60d11b8682015261065e565b51916103ce836105c3565b601b835282015261065e565b80f35b6103e99093929361059b565b6103f55790855f610344565b8580fd5b86513d84823e3d90fd5b8280fd5b634e487b7160e01b8d5260418c528cfd5b8260418b634e487b7160e01b5f52525ffd5b61044b9194508d803d10610452575b61044381836105df565b810190610601565b925f61029b565b503d610439565b8d51903d90823e3d90fd5b61047b929650803d106104525761044381836105df565b935f8f61025d565b8e513d87823e3d90fd5b8a809295508193503d83116104bd575b6104a781836105df565b810103126104b9578b9051925f6101ff565b5f80fd5b503d61049d565b8b513d84823e3d90fd5b508951903d90823e3d90fd5b50634e487b7160e01b8e5260418d52858efd5b9095508781813d8311610515575b61050581836105df565b810103126104b95751945f61017d565b503d6104fb565b89513d8d823e3d90fd5b61053191995061059b565b5f975f61012c565b88513d5f823e3d90fd5b61055b919650873d89116104525761044381836105df565b945f610100565b9094508581813d831161058a575b61057a81836105df565b810103126104b95751935f6100d4565b503d610570565b87513d5f823e3d90fd5b67ffffffffffffffff81116105af57604052565b634e487b7160e01b5f52604160045260245ffd5b6040810190811067ffffffffffffffff8211176105af57604052565b90601f8019910116810190811067ffffffffffffffff8211176105af57604052565b908160209103126104b957516001600160a01b03811681036104b95790565b91908251928382525f5b84811061064a575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161062a565b5f919082916106ad604051809261068e602083019563319af33360e01b8752604060248501526064840190610620565b6001600160a01b0391909116604483015203601f1981018352826105df565b51906a636f6e736f6c652e6c6f675afa5056fe60806040526102c8803803806100148161018e565b92833981019060408183031261018a5780516001600160a01b03811680820361018a5760208381015190936001600160401b03821161018a570184601f8201121561018a5780519061006d610068836101c7565b61018e565b9582875285838301011161018a5784905f5b8381106101765750505f9186010152813b1561015e577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a283511561014057505f80848461012796519101845af4903d15610137573d610118610068826101c7565b9081525f81943d92013e6101e2565b505b604051608290816102468239f35b606092506101e2565b925050503461014f5750610129565b63b398979f60e01b8152600490fd5b60249060405190634c9c8ce360e01b82526004820152fd5b81810183015188820184015286920161007f565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176101b357604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b0381116101b357601f01601f191660200190565b9061020957508051156101f757805190602001fd5b604051630a12f52160e11b8152600490fd5b8151158061023c575b61021a575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561021256fe60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e156048573d5ff35b3d5ffdfea264697066735822122003ff241d0e0c9f62eb973dd5729104fe6e1737cd4a1481575014654fa138f34f64736f6c6343000817003360c0346200012f57601f6200238838819003918201601f19168301926001600160401b0392909183851183861017620001335781602092849260409788528339810103126200012f57513060805280156200011e5760a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff82851c166200010d578080831603620000c8575b835161224090816200014882396080518181816113b4015261146d015260a051818181610522015281816105f7015261170d0152f35b6001600160401b0319909116811790915581519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f808062000092565b835163f92ee8a960e01b8152600490fd5b825163d92e233d60e01b8152600490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610085575b36156100475760405162461bcd60e51b815260206004820152600b60248201526a4e6f2066616c6c6261636b60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275111a5c9958dd08115512081b9bdd08185b1b1bddd95960521b6044820152606490fd5b5f3560e01c806310cb729f146118c6578063110b328514611826578063164e68de146117bb5780631904863c1461179f57806327ff622314611782578063319a2cbb146116ef57806333917ca9146116be57806333b3e099146116a15780633f4ba83a1461163f5780633fb19a53146116225780634f1ef2861461141e57806351858e271461119257806352d1902d146113a25780635c975abb146113745780636ff1c9bc146112ce578063715018a614611251578063738fc2f91461123557806379ba5097146111e45780637ecebe00146111ac5780638456cb591461119257806384b0196e1461103a5780638da5cb5b14611006578063a2e362ae14610bf9578063ad3cb1cc14610bb0578063b4988fd014610545578063bc063e1a1461050b578063c771909c146104e3578063c891091314610487578063d279b0ca146103ff578063d47875d01461038f578063e30c39781461035b578063ee4eb93d1461033d578063f2fde38b146102b9578063fede61141461029c5763ffc9896b0361000e57346102985760203660031901126102985760806001600160a01b0361022d61193d565b16805f52600460205260405f2090604080519261024984611953565b54916001600160801b038316938481526001600160401b0384871c169384602083015260c01c92839101525f52600560205260405f205491604051938452602084015260408301526060820152f35b5f80fd5b34610298575f366003190112610298576020604051620151808152f35b34610298576020366003190112610298576102d261193d565b6102da611bf2565b5f805160206121eb83398151915280546001600160a01b0319166001600160a01b039283169081179091555f8051602061218b833981519152549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b34610298575f3660031901126102985760206040516361cf99808152f35b34610298575f366003190112610298575f805160206121eb833981519152546040516001600160a01b039091168152602090f35b34610298576020366003190112610298576001600160a01b036103b061193d565b165f5260046020526040805f208151906103c982611953565b546001600160801b03811691828152836001600160401b038360801c169283602084015260c01c91015282519182526020820152f35b346102985760203660031901126102985761041861193d565b610420611bf2565b6001600160a01b03168015610475576020817f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b60405163d92e233d60e01b8152600490fd5b34610298576020366003190112610298576001600160a01b036104a861193d565b165f526004602052606060405f2054604051906001600160801b03811682526001600160401b038160801c16602083015260c01c6040820152f35b34610298575f366003190112610298576002546040516001600160a01b039091168152602090f35b34610298575f3660031901126102985760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610298576060366003190112610298576001600160a01b036004356024358281168103610298576044359183831691828403610298577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00938454936001600160401b03851680159081610ba0575b6001149081610b96575b159081610b8d575b50610b7b5760016001600160401b0319861617865560ff8560401c1615610b5c575b868316156104755715610475577f0000000000000000000000000000000000000000000000000000000000000000808411610b3e575061063f9061062a611f8a565b610632611f8a565b61063a611f8a565b611c6c565b610647611f8a565b61064f611f8a565b5f805160206121ab833981519152805460ff1916905561066d611f8a565b610675611f8a565b60015f805160206121cb833981519152556040519461069386611989565b600e86526d42617365426164676553636f726560901b6020870152604051956106bb87611989565b60018752603160f81b60208801526106d1611f8a565b6106d9611f8a565b8051906001600160401b038211610a095781906107035f8051602061216b83398151915254611cd7565b601f8111610ac4575b50602090601f8311600114610a28575f92610a1d575b50508160011b915f199060031b1c1916175f8051602061216b833981519152555b85516001600160401b038111610a09577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1039061077f8254611cd7565b601f81116109a7575b506020601f82116001146108db57937f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7695937f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73938360209794889560ff9c9d5f926108d0575b50508160011b915f199060031b1c19161790555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10155610850611f8a565b845f558082166bffffffffffffffffffffffff60a01b6002541617600255601e60015561025860035560405191168152a1604051908152a160401c161561089357005b68ff00000000000000001981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508d806107ee565b601f19821698835f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75995f5b81811061098f57509360018460ff9b9c602099957f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c769b99958b987f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c739a10610977575b505050811b019055610802565b01515f1960f88460031b161c191690558d808061096a565b838301518c556001909b019a60209384019301610908565b825f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f830160051c810191602084106109ff575b601f0160051c01905b8181106109f45750610788565b5f81556001016109e7565b90915081906109de565b634e487b7160e01b5f52604160045260245ffd5b015190508880610722565b5f8051602061216b8339815191525f9081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9350601f198516905b818110610aac5750908460019594939210610a94575b505050811b015f8051602061216b83398151915255610743565b01515f1960f88460031b161c19169055888080610a7a565b92936020600181928786015181550195019301610a64565b9091505f8051602061216b8339815191525f527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d601f840160051c81019160208510610b34575b90601f859493920160051c01905b818110610b26575061070c565b5f8155849350600101610b19565b9091508190610b0b565b8360449160405191631e0bd6c160e31b835260048301526024820152fd5b68ffffffffffffffffff198516680100000000000000011786556105e8565b60405163f92ee8a960e01b8152600490fd5b905015886105c6565b303b1591506105be565b604087901c60ff161591506105b4565b34610298575f36600319011261029857610bf5604051610bcf81611989565b60058152640352e302e360dc1b6020820152604051918291602083526020830190611a16565b0390f35b60803660031901126102985760448035906004359060249081356001600160401b03606435818111610298573660238201121561029857806004013590828211610298573686838301011161029857610c50611c12565b610c58611ea3565b5f54803403610fea5750620f4240808811610fce57506361cf9980808510610fb05750335f526020976005895260405f2054808203610f94575091610d74610d7a926042610d83956040518d8101917fd0a0509035718ad455d593d20a83743ce5d6920842ee8cb1f4d76d7197a7bcb883523360408301528d60608301528a608083015260a082015260a08152610cee8161196e565b519020610cf96120bb565b8d610d02612125565b604051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152610d4f8161196e565b519020906040519161190160f01b8352600283015260228201522092893692016119e0565b90611ecd565b90929192611f07565b6002546001600160a01b03908116911603610f8257335f526004865260405f209260405193610db185611953565b5460406001600160801b0395868316815289810192858160801c16845260c01c918291015280851115610f665750600154908382151580610f5a575b610f20575b505050824210610f0357610e068342611afa565b600354808211610eea5750505060405192610e2084611953565b80861684528684019180421683526040850193168352335f526004875260405f20935116906001600160401b0360801b905160801b16916001600160401b0360c01b905160c01b1691171790556005835260405f20908154905f198214610ed75750600101905560405181815234838201524260408201527fd1ab2b2d603dc80565da0286deeb7d3699341e28d8234689428dbe9b7d58c8ac60603392a260015f805160206121cb83398151915255604051908152f35b634e487b7160e01b5f9081526011600452fd5b8660405192635ee1691b60e11b84526004840152820152fd5b8460035460405191635ee1691b60e11b83525f6004840152820152fd5b610f2c91511642611afa565b90808210610f3a5783610df2565b8691610f4591611afa565b604051906365a85b4760e01b82526004820152fd5b50808251161515610ded565b8491508660405192634ef2701560e01b84526004840152820152fd5b604051632057875960e21b8152600490fd5b86925087604051926306427aeb60e01b84526004840152820152fd5b6040516331b3a51360e01b8152600481019590955284870152505050fd5b8786918860405192635467da8d60e11b84526004840152820152fd5b86869160405191631e0bd6c160e31b8352346004840152820152fd5b34610298575f366003190112610298575f8051602061218b833981519152546040516001600160a01b039091168152602090f35b34610298575f366003190112610298577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100541580611169575b1561112c57611080611d0f565b611088611de4565b6040516020808201928284106001600160401b03851117610a09579160206110e185946110d397966040525f8452604051978897600f60f81b895260e0858a015260e0890190611a16565b908782036040890152611a16565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061111557505050500390f35b835185528695509381019392810192600101611106565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015415611073565b34610298575f366003190112610298576111aa611b9d565b005b34610298576020366003190112610298576001600160a01b036111cd61193d565b165f526005602052602060405f2054604051908152f35b34610298575f366003190112610298575f805160206121eb83398151915254336001600160a01b039091160361121d576111aa33611c6c565b60405163118cdaa760e01b8152336004820152602490fd5b34610298575f3660031901126102985760206040516102588152f35b34610298575f36600319011261029857611269611bf2565b5f805160206121eb83398151915280546001600160a01b03199081169091555f8051602061218b833981519152805491821690555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610298576020366003190112610298576004356001600160a01b03811690819003610298576112fc611bf2565b611304611c41565b61130c611c12565b8015610475577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695602047611341811515611a54565b61135a5f80808085895af1611354611a8d565b50611abc565b604051908152a260015f805160206121cb83398151915255005b34610298575f36600319011261029857602060ff5f805160206121ab83398151915254166040519015158152f35b34610298575f366003190112610298577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361140c5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b60403660031901126102985761143261193d565b6024356001600160401b0381116102985736602382011215610298576114629036906024816004013591016119e0565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156115f4575b5061140c576114a6611bf2565b8116906040516352d1902d60e01b8152602081600481865afa5f91816115c0575b506114e557604051634c9c8ce360e01b815260048101849052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc929192908181036115a85750823b1561158f5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561157657505f808360206111aa95519101845af4611570611a8d565b91612058565b9150503461158057005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091506020813d6020116115ec575b816115dc602093836119a4565b81010312610298575190856114c7565b3d91506115cf565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141584611499565b34610298575f366003190112610298576020600154604051908152f35b34610298575f36600319011261029857611657611bf2565b61165f611c41565b5f805160206121ab83398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b34610298575f366003190112610298576020600354604051908152f35b346102985760203660031901126102985760406116e16116dc61193d565b611b1b565b825191151582526020820152f35b346102985760203660031901126102985760043561170b611bf2565b7f0000000000000000000000000000000000000000000000000000000000000000808211611763577f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76602083805f55604051908152a1005b604051631e0bd6c160e31b815260048101929092526024820152604490fd5b34610298575f366003190112610298576020604051620f42408152f35b34610298575f3660031901126102985760205f54604051908152f35b34610298576020366003190112610298576004356001600160a01b03811690819003610298576117e9611bf2565b6117f1611c12565b8015610475577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364602047611341811515611a54565b3461029857602036600319011261029857600435611842611bf2565b801515806118b9575b15611881576020817fed1b8a3acdd1de20e69e80caa4b3762f856b4e74e0fad35189af650e20c3085a92600355604051908152a1005b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69644d617853696741676560801b6044820152606490fd5b506201518081111561184b565b34610298576020366003190112610298576004356118e2611bf2565b6201518080821161191e577fad8a71533bfa097e1676af0fbe86477cb4b1a4c3456cc493a1253ae5d9b7cf2d60208380600155604051908152a1005b6040516306115faf60e11b815260048101929092526024820152604490fd5b600435906001600160a01b038216820361029857565b606081019081106001600160401b03821117610a0957604052565b60c081019081106001600160401b03821117610a0957604052565b604081019081106001600160401b03821117610a0957604052565b90601f801991011681019081106001600160401b03821117610a0957604052565b6001600160401b038111610a0957601f01601f191660200190565b9291926119ec826119c5565b916119fa60405193846119a4565b829481845281830111610298578281602093845f960137010152565b91908251928382525f5b848110611a40575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201611a20565b15611a5b57565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b3d15611ab7573d90611a9e826119c5565b91611aac60405193846119a4565b82523d5f602084013e565b606090565b15611ac357565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b91908203918211611b0757565b634e487b7160e01b5f52601160045260245ffd5b600154908115611b945760018060a01b03165f52600460205260405f2060405190611b4582611953565b54906001600160801b038216815260406001600160401b038360801c169283602084015260c01c9101528015611b9457611b7f9042611afa565b81811015611b9457611b9091611afa565b5f91565b50506001905f90565b611ba5611bf2565b611bad611ea3565b5f805160206121ab833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1565b5f8051602061218b833981519152546001600160a01b0316330361121d57565b5f805160206121cb8339815191526002815414611c2f5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff5f805160206121ab833981519152541615611c5a57565b604051638dfc202b60e01b8152600490fd5b5f805160206121eb83398151915280546001600160a01b03199081169091555f8051602061218b83398151915280549182166001600160a01b0393841690811790915591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600182811c92168015611d05575b6020831014611cf157565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611ce6565b604051905f825f8051602061216b83398151915291825492611d3084611cd7565b80845293602091600191828116908115611dbe5750600114611d5e575b505050611d5c925003836119a4565b565b5f9081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9590935091905b828410611da65750611d5c9450505081016020015f8080611d4d565b85548885018301529485019487945092810192611d8a565b9250505060209250611d5c94915060ff191682840152151560051b8201015f8080611d4d565b604051905f827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10391825492611e1884611cd7565b80845293602091600191828116908115611dbe5750600114611e4357505050611d5c925003836119a4565b5f9081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410611e8b5750611d5c9450505081016020015f8080611d4d565b85548885018301529485019487945092810192611e6f565b60ff5f805160206121ab8339815191525416611ebb57565b60405163d93c066560e01b8152600490fd5b8151919060418303611efd57611ef69250602082015190606060408401519301515f1a90611fcb565b9192909190565b50505f9160029190565b6004811015611f765780611f19575050565b60018103611f335760405163f645eedf60e01b8152600490fd5b60028103611f545760405163fce698f760e01b815260048101839052602490fd5b600314611f5e5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615611fb957565b604051631afcd79f60e31b8152600490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161204d579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612042575f516001600160a01b0381161561203857905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b9061207f575080511561206d57805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806120b2575b612090575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612088565b6120c3611d0f565b80519081156120d3576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005480156121005790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b61212d611de4565b805190811561213d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612100579056fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00a2646970667358221220131fd34b8c6e95369c9bac22f6c12e835756826f3ae43bfd9b91e02203bd054864736f6c63430008170033a2646970667358221220fa4c29661cd564d524620b00dd4c4b3df43b6f8d8c1f1f74567812d4dd89884f64736f6c63430008170033",
                "sourceMap": "274:1133:47:-:0;;;;;;;;;;3166:4:3;274:1133:47;;;3166:4:3;274:1133:47;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "6080604081815260049182361015610015575f80fd5b5f925f3560e01c918263c04062261461006157505063f8ccbf4714610038575f80fd5b3461005d578160031936011261005d5760209060ff600c5460101c1690519015158152f35b5080fd5b90929150346104b9575f3660031901126104b95763c1978d1f60e01b81526024906020918285830152600b818301526044906a505249564154455f4b455960a81b82840152606491737109709ecfa91a80626ff3989d68f67f5b1dd12d9185858581865afa948515610591575f95610562575b5086516001625e79b760e01b031981528881018690529486868381875afa958615610539575f96610543575b50833b156104b95787519063ce817d4760e01b8252898201525f81838183885af1801561053957610526575b508651635e97348f60e01b808252898201899052600b848301526a4d41585f4645455f57454960a81b8683015266038d7ea4c680008383015290948786608481885afa95861561051c578b966104ed575b508851612388968782019067ffffffffffffffff988383108a8411176104da578e93928c928492620009898439815203019082f09485156104ce578a519384528a8c850152600d818501526c434845434b5f4645455f57454960981b838501526601c6bf526340008585015289846084818a5afa9384156104c457829461048d575b508a516301587f9560e61b8082528d82018d90526011838301527020aaaa2427a924ad22a22fa9a4a3a722a960791b858301526001600160a01b039a8b168783018190528c836084818d5afa928315610483578f8f918f8896610464575b505081519384528301526005848301526427aba722a960d91b86830152878201528b816084818c5afa93841561045957918b9493929185929461042a575b508d51630b4988fd60e41b8e8201528881019790975216908501521681830152815260a081019285841182851017610418578389528616946102c88281019360a085019283118684101761040757508b95949392918791620006c18639528860c083015261030f60e0609f19930182610620565b03019083f09687156103f957813b15610403578651633b756e9b60e11b81529183918391829084905af180156103f9576103dd575b5050906103da9461039b7f53636f7265436865636b65725570677261646561626c652061743a000000000093865161037b816105c3565b600f81526e24b6b83632b6b2b73a30ba34b7b71d60891b8782015261065e565b16926103c38482516103ac816105c3565b6006815265283937bc3c9d60d11b8682015261065e565b51916103ce836105c3565b601b835282015261065e565b80f35b6103e99093929361059b565b6103f55790855f610344565b8580fd5b86513d84823e3d90fd5b8280fd5b634e487b7160e01b8d5260418c528cfd5b8260418b634e487b7160e01b5f52525ffd5b61044b9194508d803d10610452575b61044381836105df565b810190610601565b925f61029b565b503d610439565b8d51903d90823e3d90fd5b61047b929650803d106104525761044381836105df565b935f8f61025d565b8e513d87823e3d90fd5b8a809295508193503d83116104bd575b6104a781836105df565b810103126104b9578b9051925f6101ff565b5f80fd5b503d61049d565b8b513d84823e3d90fd5b508951903d90823e3d90fd5b50634e487b7160e01b8e5260418d52858efd5b9095508781813d8311610515575b61050581836105df565b810103126104b95751945f61017d565b503d6104fb565b89513d8d823e3d90fd5b61053191995061059b565b5f975f61012c565b88513d5f823e3d90fd5b61055b919650873d89116104525761044381836105df565b945f610100565b9094508581813d831161058a575b61057a81836105df565b810103126104b95751935f6100d4565b503d610570565b87513d5f823e3d90fd5b67ffffffffffffffff81116105af57604052565b634e487b7160e01b5f52604160045260245ffd5b6040810190811067ffffffffffffffff8211176105af57604052565b90601f8019910116810190811067ffffffffffffffff8211176105af57604052565b908160209103126104b957516001600160a01b03811681036104b95790565b91908251928382525f5b84811061064a575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161062a565b5f919082916106ad604051809261068e602083019563319af33360e01b8752604060248501526064840190610620565b6001600160a01b0391909116604483015203601f1981018352826105df565b51906a636f6e736f6c652e6c6f675afa5056fe60806040526102c8803803806100148161018e565b92833981019060408183031261018a5780516001600160a01b03811680820361018a5760208381015190936001600160401b03821161018a570184601f8201121561018a5780519061006d610068836101c7565b61018e565b9582875285838301011161018a5784905f5b8381106101765750505f9186010152813b1561015e577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a283511561014057505f80848461012796519101845af4903d15610137573d610118610068826101c7565b9081525f81943d92013e6101e2565b505b604051608290816102468239f35b606092506101e2565b925050503461014f5750610129565b63b398979f60e01b8152600490fd5b60249060405190634c9c8ce360e01b82526004820152fd5b81810183015188820184015286920161007f565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176101b357604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b0381116101b357601f01601f191660200190565b9061020957508051156101f757805190602001fd5b604051630a12f52160e11b8152600490fd5b8151158061023c575b61021a575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561021256fe60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e156048573d5ff35b3d5ffdfea264697066735822122003ff241d0e0c9f62eb973dd5729104fe6e1737cd4a1481575014654fa138f34f64736f6c6343000817003360c0346200012f57601f6200238838819003918201601f19168301926001600160401b0392909183851183861017620001335781602092849260409788528339810103126200012f57513060805280156200011e5760a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff82851c166200010d578080831603620000c8575b835161224090816200014882396080518181816113b4015261146d015260a051818181610522015281816105f7015261170d0152f35b6001600160401b0319909116811790915581519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f808062000092565b835163f92ee8a960e01b8152600490fd5b825163d92e233d60e01b8152600490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610085575b36156100475760405162461bcd60e51b815260206004820152600b60248201526a4e6f2066616c6c6261636b60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275111a5c9958dd08115512081b9bdd08185b1b1bddd95960521b6044820152606490fd5b5f3560e01c806310cb729f146118c6578063110b328514611826578063164e68de146117bb5780631904863c1461179f57806327ff622314611782578063319a2cbb146116ef57806333917ca9146116be57806333b3e099146116a15780633f4ba83a1461163f5780633fb19a53146116225780634f1ef2861461141e57806351858e271461119257806352d1902d146113a25780635c975abb146113745780636ff1c9bc146112ce578063715018a614611251578063738fc2f91461123557806379ba5097146111e45780637ecebe00146111ac5780638456cb591461119257806384b0196e1461103a5780638da5cb5b14611006578063a2e362ae14610bf9578063ad3cb1cc14610bb0578063b4988fd014610545578063bc063e1a1461050b578063c771909c146104e3578063c891091314610487578063d279b0ca146103ff578063d47875d01461038f578063e30c39781461035b578063ee4eb93d1461033d578063f2fde38b146102b9578063fede61141461029c5763ffc9896b0361000e57346102985760203660031901126102985760806001600160a01b0361022d61193d565b16805f52600460205260405f2090604080519261024984611953565b54916001600160801b038316938481526001600160401b0384871c169384602083015260c01c92839101525f52600560205260405f205491604051938452602084015260408301526060820152f35b5f80fd5b34610298575f366003190112610298576020604051620151808152f35b34610298576020366003190112610298576102d261193d565b6102da611bf2565b5f805160206121eb83398151915280546001600160a01b0319166001600160a01b039283169081179091555f8051602061218b833981519152549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b34610298575f3660031901126102985760206040516361cf99808152f35b34610298575f366003190112610298575f805160206121eb833981519152546040516001600160a01b039091168152602090f35b34610298576020366003190112610298576001600160a01b036103b061193d565b165f5260046020526040805f208151906103c982611953565b546001600160801b03811691828152836001600160401b038360801c169283602084015260c01c91015282519182526020820152f35b346102985760203660031901126102985761041861193d565b610420611bf2565b6001600160a01b03168015610475576020817f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b60405163d92e233d60e01b8152600490fd5b34610298576020366003190112610298576001600160a01b036104a861193d565b165f526004602052606060405f2054604051906001600160801b03811682526001600160401b038160801c16602083015260c01c6040820152f35b34610298575f366003190112610298576002546040516001600160a01b039091168152602090f35b34610298575f3660031901126102985760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610298576060366003190112610298576001600160a01b036004356024358281168103610298576044359183831691828403610298577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00938454936001600160401b03851680159081610ba0575b6001149081610b96575b159081610b8d575b50610b7b5760016001600160401b0319861617865560ff8560401c1615610b5c575b868316156104755715610475577f0000000000000000000000000000000000000000000000000000000000000000808411610b3e575061063f9061062a611f8a565b610632611f8a565b61063a611f8a565b611c6c565b610647611f8a565b61064f611f8a565b5f805160206121ab833981519152805460ff1916905561066d611f8a565b610675611f8a565b60015f805160206121cb833981519152556040519461069386611989565b600e86526d42617365426164676553636f726560901b6020870152604051956106bb87611989565b60018752603160f81b60208801526106d1611f8a565b6106d9611f8a565b8051906001600160401b038211610a095781906107035f8051602061216b83398151915254611cd7565b601f8111610ac4575b50602090601f8311600114610a28575f92610a1d575b50508160011b915f199060031b1c1916175f8051602061216b833981519152555b85516001600160401b038111610a09577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1039061077f8254611cd7565b601f81116109a7575b506020601f82116001146108db57937f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7695937f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73938360209794889560ff9c9d5f926108d0575b50508160011b915f199060031b1c19161790555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10155610850611f8a565b845f558082166bffffffffffffffffffffffff60a01b6002541617600255601e60015561025860035560405191168152a1604051908152a160401c161561089357005b68ff00000000000000001981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508d806107ee565b601f19821698835f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75995f5b81811061098f57509360018460ff9b9c602099957f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c769b99958b987f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c739a10610977575b505050811b019055610802565b01515f1960f88460031b161c191690558d808061096a565b838301518c556001909b019a60209384019301610908565b825f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f830160051c810191602084106109ff575b601f0160051c01905b8181106109f45750610788565b5f81556001016109e7565b90915081906109de565b634e487b7160e01b5f52604160045260245ffd5b015190508880610722565b5f8051602061216b8339815191525f9081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9350601f198516905b818110610aac5750908460019594939210610a94575b505050811b015f8051602061216b83398151915255610743565b01515f1960f88460031b161c19169055888080610a7a565b92936020600181928786015181550195019301610a64565b9091505f8051602061216b8339815191525f527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d601f840160051c81019160208510610b34575b90601f859493920160051c01905b818110610b26575061070c565b5f8155849350600101610b19565b9091508190610b0b565b8360449160405191631e0bd6c160e31b835260048301526024820152fd5b68ffffffffffffffffff198516680100000000000000011786556105e8565b60405163f92ee8a960e01b8152600490fd5b905015886105c6565b303b1591506105be565b604087901c60ff161591506105b4565b34610298575f36600319011261029857610bf5604051610bcf81611989565b60058152640352e302e360dc1b6020820152604051918291602083526020830190611a16565b0390f35b60803660031901126102985760448035906004359060249081356001600160401b03606435818111610298573660238201121561029857806004013590828211610298573686838301011161029857610c50611c12565b610c58611ea3565b5f54803403610fea5750620f4240808811610fce57506361cf9980808510610fb05750335f526020976005895260405f2054808203610f94575091610d74610d7a926042610d83956040518d8101917fd0a0509035718ad455d593d20a83743ce5d6920842ee8cb1f4d76d7197a7bcb883523360408301528d60608301528a608083015260a082015260a08152610cee8161196e565b519020610cf96120bb565b8d610d02612125565b604051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152610d4f8161196e565b519020906040519161190160f01b8352600283015260228201522092893692016119e0565b90611ecd565b90929192611f07565b6002546001600160a01b03908116911603610f8257335f526004865260405f209260405193610db185611953565b5460406001600160801b0395868316815289810192858160801c16845260c01c918291015280851115610f665750600154908382151580610f5a575b610f20575b505050824210610f0357610e068342611afa565b600354808211610eea5750505060405192610e2084611953565b80861684528684019180421683526040850193168352335f526004875260405f20935116906001600160401b0360801b905160801b16916001600160401b0360c01b905160c01b1691171790556005835260405f20908154905f198214610ed75750600101905560405181815234838201524260408201527fd1ab2b2d603dc80565da0286deeb7d3699341e28d8234689428dbe9b7d58c8ac60603392a260015f805160206121cb83398151915255604051908152f35b634e487b7160e01b5f9081526011600452fd5b8660405192635ee1691b60e11b84526004840152820152fd5b8460035460405191635ee1691b60e11b83525f6004840152820152fd5b610f2c91511642611afa565b90808210610f3a5783610df2565b8691610f4591611afa565b604051906365a85b4760e01b82526004820152fd5b50808251161515610ded565b8491508660405192634ef2701560e01b84526004840152820152fd5b604051632057875960e21b8152600490fd5b86925087604051926306427aeb60e01b84526004840152820152fd5b6040516331b3a51360e01b8152600481019590955284870152505050fd5b8786918860405192635467da8d60e11b84526004840152820152fd5b86869160405191631e0bd6c160e31b8352346004840152820152fd5b34610298575f366003190112610298575f8051602061218b833981519152546040516001600160a01b039091168152602090f35b34610298575f366003190112610298577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100541580611169575b1561112c57611080611d0f565b611088611de4565b6040516020808201928284106001600160401b03851117610a09579160206110e185946110d397966040525f8452604051978897600f60f81b895260e0858a015260e0890190611a16565b908782036040890152611a16565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061111557505050500390f35b835185528695509381019392810192600101611106565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015415611073565b34610298575f366003190112610298576111aa611b9d565b005b34610298576020366003190112610298576001600160a01b036111cd61193d565b165f526005602052602060405f2054604051908152f35b34610298575f366003190112610298575f805160206121eb83398151915254336001600160a01b039091160361121d576111aa33611c6c565b60405163118cdaa760e01b8152336004820152602490fd5b34610298575f3660031901126102985760206040516102588152f35b34610298575f36600319011261029857611269611bf2565b5f805160206121eb83398151915280546001600160a01b03199081169091555f8051602061218b833981519152805491821690555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610298576020366003190112610298576004356001600160a01b03811690819003610298576112fc611bf2565b611304611c41565b61130c611c12565b8015610475577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695602047611341811515611a54565b61135a5f80808085895af1611354611a8d565b50611abc565b604051908152a260015f805160206121cb83398151915255005b34610298575f36600319011261029857602060ff5f805160206121ab83398151915254166040519015158152f35b34610298575f366003190112610298577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361140c5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b60403660031901126102985761143261193d565b6024356001600160401b0381116102985736602382011215610298576114629036906024816004013591016119e0565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156115f4575b5061140c576114a6611bf2565b8116906040516352d1902d60e01b8152602081600481865afa5f91816115c0575b506114e557604051634c9c8ce360e01b815260048101849052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc929192908181036115a85750823b1561158f5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561157657505f808360206111aa95519101845af4611570611a8d565b91612058565b9150503461158057005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091506020813d6020116115ec575b816115dc602093836119a4565b81010312610298575190856114c7565b3d91506115cf565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141584611499565b34610298575f366003190112610298576020600154604051908152f35b34610298575f36600319011261029857611657611bf2565b61165f611c41565b5f805160206121ab83398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b34610298575f366003190112610298576020600354604051908152f35b346102985760203660031901126102985760406116e16116dc61193d565b611b1b565b825191151582526020820152f35b346102985760203660031901126102985760043561170b611bf2565b7f0000000000000000000000000000000000000000000000000000000000000000808211611763577f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76602083805f55604051908152a1005b604051631e0bd6c160e31b815260048101929092526024820152604490fd5b34610298575f366003190112610298576020604051620f42408152f35b34610298575f3660031901126102985760205f54604051908152f35b34610298576020366003190112610298576004356001600160a01b03811690819003610298576117e9611bf2565b6117f1611c12565b8015610475577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364602047611341811515611a54565b3461029857602036600319011261029857600435611842611bf2565b801515806118b9575b15611881576020817fed1b8a3acdd1de20e69e80caa4b3762f856b4e74e0fad35189af650e20c3085a92600355604051908152a1005b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69644d617853696741676560801b6044820152606490fd5b506201518081111561184b565b34610298576020366003190112610298576004356118e2611bf2565b6201518080821161191e577fad8a71533bfa097e1676af0fbe86477cb4b1a4c3456cc493a1253ae5d9b7cf2d60208380600155604051908152a1005b6040516306115faf60e11b815260048101929092526024820152604490fd5b600435906001600160a01b038216820361029857565b606081019081106001600160401b03821117610a0957604052565b60c081019081106001600160401b03821117610a0957604052565b604081019081106001600160401b03821117610a0957604052565b90601f801991011681019081106001600160401b03821117610a0957604052565b6001600160401b038111610a0957601f01601f191660200190565b9291926119ec826119c5565b916119fa60405193846119a4565b829481845281830111610298578281602093845f960137010152565b91908251928382525f5b848110611a40575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201611a20565b15611a5b57565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b3d15611ab7573d90611a9e826119c5565b91611aac60405193846119a4565b82523d5f602084013e565b606090565b15611ac357565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b91908203918211611b0757565b634e487b7160e01b5f52601160045260245ffd5b600154908115611b945760018060a01b03165f52600460205260405f2060405190611b4582611953565b54906001600160801b038216815260406001600160401b038360801c169283602084015260c01c9101528015611b9457611b7f9042611afa565b81811015611b9457611b9091611afa565b5f91565b50506001905f90565b611ba5611bf2565b611bad611ea3565b5f805160206121ab833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1565b5f8051602061218b833981519152546001600160a01b0316330361121d57565b5f805160206121cb8339815191526002815414611c2f5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff5f805160206121ab833981519152541615611c5a57565b604051638dfc202b60e01b8152600490fd5b5f805160206121eb83398151915280546001600160a01b03199081169091555f8051602061218b83398151915280549182166001600160a01b0393841690811790915591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600182811c92168015611d05575b6020831014611cf157565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611ce6565b604051905f825f8051602061216b83398151915291825492611d3084611cd7565b80845293602091600191828116908115611dbe5750600114611d5e575b505050611d5c925003836119a4565b565b5f9081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9590935091905b828410611da65750611d5c9450505081016020015f8080611d4d565b85548885018301529485019487945092810192611d8a565b9250505060209250611d5c94915060ff191682840152151560051b8201015f8080611d4d565b604051905f827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10391825492611e1884611cd7565b80845293602091600191828116908115611dbe5750600114611e4357505050611d5c925003836119a4565b5f9081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410611e8b5750611d5c9450505081016020015f8080611d4d565b85548885018301529485019487945092810192611e6f565b60ff5f805160206121ab8339815191525416611ebb57565b60405163d93c066560e01b8152600490fd5b8151919060418303611efd57611ef69250602082015190606060408401519301515f1a90611fcb565b9192909190565b50505f9160029190565b6004811015611f765780611f19575050565b60018103611f335760405163f645eedf60e01b8152600490fd5b60028103611f545760405163fce698f760e01b815260048101839052602490fd5b600314611f5e5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615611fb957565b604051631afcd79f60e31b8152600490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161204d579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612042575f516001600160a01b0381161561203857905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b9061207f575080511561206d57805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806120b2575b612090575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612088565b6120c3611d0f565b80519081156120d3576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005480156121005790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b61212d611de4565b805190811561213d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612100579056fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00a2646970667358221220131fd34b8c6e95369c9bac22f6c12e835756826f3ae43bfd9b91e02203bd054864736f6c63430008170033a2646970667358221220fa4c29661cd564d524620b00dd4c4b3df43b6f8d8c1f1f74567812d4dd89884f64736f6c63430008170033",
                "sourceMap": "274:1133:47:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:28:1;274:1133:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;274:1133:47;;;;1590:14:0;;;364:25:47;;1590:14:0;364:25:47;;;;;;;1590:14:0;;;;;;;;-1:-1:-1;;;1590:14:0;;;;;274:1133:47;;364:25;;;;;;;;;;;;;274:1133;364:25;;;274:1133;-1:-1:-1;274:1133:47;;-1:-1:-1;;;;;;418:11:47;;;;;1590:14:0;;;274:1133:47;418:11;274:1133;418:11;274:1133;418:11;;;;;;;;274:1133;418:11;;;274:1133;440:21;;;;;;274:1133;;1590:14:0;;;;440:21:47;;;;;1590:14:0;274:1133:47;440:21;;;;;;;;;;;;;274:1133;-1:-1:-1;274:1133:47;;-1:-1:-1;;;571:38:47;;;;;;1590:14:0;;;;;;;;-1:-1:-1;;;1590:14:0;;;;603:4:47;1590:14:0;;;;274:1133:47;;571:38;274:1133;1590:14:0;274:1133:47;571:38;;;;;;;;;;;;274:1133;;;;660:35;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:14:0;;660:35:47;;;;;;;;;;274:1133;;761:40;;;;;;;1590:14:0;;;;;;-1:-1:-1;;;1590:14:0;;;;795:4:47;1590:14:0;;;;761:40:47;;1590:14:0;761:40:47;;;;;;;;;;;;;274:1133;-1:-1:-1;274:1133:47;;-1:-1:-1;;;828:39:47;;;;;;1590:14:0;;;;;;;;-1:-1:-1;;;1590:14:0;;;;-1:-1:-1;;;;;274:1133:47;;;1590:14:0;;;;;;828:39:47;274:1133;1590:14:0;274:1133:47;828:39;;;;;;;;;;;;;;;;274:1133;;;;;893:27;;;;;1590:14:0;;;;;;-1:-1:-1;;;1590:14:0;;;;;;;;893:27:47;;1590:14:0;893:27:47;;;;;;;;;;;;;;;;;;;;274:1133;-1:-1:-1;274:1133:47;;-1:-1:-1;;;955:150:47;;;;;;;1590:14:0;;;;274:1133:47;1590:14:0;;;;274:1133:47;1590:14:0;;;;955:150:47;;1590:14:0;;;;;;;;;;;;;;;;274:1133:47;;;1137:51;;;;;1590:14:0;1137:51:47;;;;;;;;;;;;;;;;;;;;;;;1590:14:0;;;;;;;274:1133:47;1137:51;;1590:14:0;;;;:::i;:::-;1137:51:47;;;;;;;;;;1199:18;;;;;274:1133;;-1:-1:-1;;;1199:18:47;;274:1133;;;;;;;;;1199:18;;;;;;;;274:1133;;;;1340:58;274:1133;1228:55;1590:14:0;274:1133:47;;;1590:14:0;;;:::i;:::-;;;;-1:-1:-1;;;1590:14:0;;;;1228:55:47;:::i;:::-;274:1133;;1293:37;274:1133;;;1590:14:0;;;:::i;:::-;;;;-1:-1:-1;;;1590:14:0;;;;1293:37:47;:::i;:::-;274:1133;1590:14:0;;;;:::i;:::-;;;;;;;1340:58:47;:::i;:::-;274:1133;;1199:18;;;;;;;:::i;:::-;274:1133;;1199:18;;;;;274:1133;;;;1199:18;274:1133;;1590:14:0;274:1133:47;;1590:14:0;;;;1199:18:47;274:1133;;;1137:51;-1:-1:-1;;;1590:14:0;;;;;;;;;;;;;;274:1133:47;1590:14:0;;274:1133:47;1590:14:0;893:27:47;;;;;;;;-1:-1:-1;893:27:47;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;274:1133;;1590:14:0;;;;;;;;828:39:47;;;;;;;-1:-1:-1;828:39:47;;;;;;:::i;:::-;;;;;;;274:1133;;1590:14:0;274:1133:47;;1590:14:0;;;;761:40:47;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1590:14:0;;;;;;;761:40:47;;;;1590:14:0;274:1133:47;;;761:40;;;;;;274:1133;;1590:14:0;274:1133:47;;1590:14:0;;;;660:35:47;274:1133;;;1590:14:0;;;;;;;;660:35:47;-1:-1:-1;;;;1590:14:0;;;;;;;;571:38:47;;;;;;;;;;;;;;;;;:::i;:::-;;;1590:14:0;;;;;571:38:47;;;;;;;;;;274:1133;;1590:14:0;274:1133:47;;1590:14:0;;;;440:21:47;;;;;;:::i;:::-;274:1133;440:21;;;;;274:1133;;1590:14:0;274:1133:47;1590:14:0;;;;;418:11:47;;;;;;;;;;;;;;;:::i;:::-;;;;;364:25;;;;;;;;;;;;;;;;;:::i;:::-;;;1590:14:0;;;;;364:25:47;;;;;;;;;;274:1133;;1590:14:0;274:1133:47;1590:14:0;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;274:1133:47;1590:14:0;;;;;;;;;;;274:1133:47;1590:14:0;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;274:1133:47;;1590:14:0;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;7621:145:15;-1:-1:-1;7621:145:15;;;;7704:54;274:1133:47;;7704:54:15;;274:1133:47;7704:54:15;;;;;;;;;274:1133:47;7704:54:15;;;274:1133:47;;;;;;:::i;:::-;-1:-1:-1;;;;;274:1133:47;;;;;;;1590:14:0;7704:54:15;-1:-1:-1;;7704:54:15;;;;;;:::i;:::-;1590:14:0;762:159:15;131:42;762:159;;;7621:145::o",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_SCRIPT()": "f8ccbf47",
                "run()": "c0406226"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/script/UpgradeContract.s.sol": {
      "IUUPSUpgradeableLike": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "upgradeToAndCall",
                "inputs": [
                  {
                    "name": "newImplementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/UpgradeContract.s.sol\":\"IUUPSUpgradeableLike\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"script/UpgradeContract.s.sol\":{\"keccak256\":\"0x2fd56005854e0f5ddd4a90679f9fd83975bd13d8e5a181765cec8a450e8aea5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://962052a94a0cf6d0fe876ea0d2ac7eed2987f7edd78289e95e36256fbb6b7b21\",\"dweb:/ipfs/QmbF6CKWdoLHX5EHaw4PGsM6B72ZQmJ5hJQa53TYWM2SJJ\"]},\"src/ScoreCheckerUpgradeable.sol\":{\"keccak256\":\"0x6db7e78f2c76e4d86224e448c7e34233fd17fd09745aa75e4bda03a88d00b9f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c980f0e01cc87a10f3442d45444f4883053e95acf114fcedf2bd006d957f70a5\",\"dweb:/ipfs/QmUQcqB6Uw3tkSQMAXv53nGigMQAfCRHQGnQnvoQpEDDyP\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "upgradeToAndCall(address,bytes)": "4f1ef286"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ],
      "UpgradeContract": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_SCRIPT",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "run",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/UpgradeContract.s.sol\":\"UpgradeContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"script/UpgradeContract.s.sol\":{\"keccak256\":\"0x2fd56005854e0f5ddd4a90679f9fd83975bd13d8e5a181765cec8a450e8aea5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://962052a94a0cf6d0fe876ea0d2ac7eed2987f7edd78289e95e36256fbb6b7b21\",\"dweb:/ipfs/QmbF6CKWdoLHX5EHaw4PGsM6B72ZQmJ5hJQa53TYWM2SJJ\"]},\"src/ScoreCheckerUpgradeable.sol\":{\"keccak256\":\"0x6db7e78f2c76e4d86224e448c7e34233fd17fd09745aa75e4bda03a88d00b9f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c980f0e01cc87a10f3442d45444f4883053e95acf114fcedf2bd006d957f70a5\",\"dweb:/ipfs/QmUQcqB6Uw3tkSQMAXv53nGigMQAfCRHQGnQnvoQpEDDyP\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 2758,
                  "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                  "label": "stdChainsInitialized",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2779,
                  "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                  "label": "chains",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)"
                },
                {
                  "astId": 2783,
                  "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                  "label": "defaultRpcUrls",
                  "offset": 0,
                  "slot": "10",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
                },
                {
                  "astId": 2787,
                  "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                  "label": "idToAlias",
                  "offset": 0,
                  "slot": "11",
                  "type": "t_mapping(t_uint256,t_string_storage)"
                },
                {
                  "astId": 2790,
                  "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                  "label": "fallbackToDefaultRpcUrls",
                  "offset": 0,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 3593,
                  "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                  "label": "gasMeteringOff",
                  "offset": 1,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 112,
                  "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                  "label": "IS_SCRIPT",
                  "offset": 2,
                  "slot": "12",
                  "type": "t_bool"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_mapping(t_string_memory_ptr,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => struct StdChains.Chain)",
                  "numberOfBytes": "32",
                  "value": "t_struct(Chain)2774_storage"
                },
                "t_mapping(t_uint256,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_string_memory_ptr": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(Chain)2774_storage": {
                  "encoding": "inplace",
                  "label": "struct StdChains.Chain",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 2767,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "name",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2769,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "chainId",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 2771,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "chainAlias",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2773,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "rpcUrl",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_string_storage"
                    }
                  ]
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "script/UpgradeContract.s.sol:UpgradeContract",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "60808060405234610027576201000162ff00ff19600c541617600c5561283b908161002c8239f35b5f80fdfe6080604081815260049182361015610015575f80fd5b5f925f3560e01c918263c04062261461006157505063f8ccbf4714610038575f80fd5b3461005d578160031936011261005d5760209060ff600c5460101c1690519015158152f35b5080fd5b83859134610389575f3660031901126103895763c1978d1f60e01b81526024936020918282820152600b868201526a505249564154455f4b455960a81b6044820152606492737109709ecfa91a80626ff3989d68f67f5b1dd12d9281838681875afa928315610429575f936103fa575b50855163350d56bf60e01b8152818101839052600d898201526c50524f58595f4144445245535360981b60448201529282848781885afa9384156103b1575f946103bb575b50843b156103895786519063ce817d4760e01b8252828201525f818a8183895af180156103b15761039e575b508551635e97348f60e01b8152818101879052600b60448201526a4d41585f4645455f57454960a81b8682015266038d7ea4c680008982015260849483828781845afa918215610394578992610361575b508751612388928382019067ffffffffffffffff948383108684111761034f5792809288928e9f9e969561047e8439815203019083f0958615610323576001600160a01b039687169616803b1561034b57828b8a89838e958651968795869463278f794360e11b86528d8601528401528160448401525af180156103415790839161032d575b5050803b1561005d57818091858b5180948193633b756e9b60e11b83525af180156103235761030b575b5050865191828801918211838310176102f957509086949795939291899752600c81526b2ab833b930b232b2103a379d60a11b828201528451948286019663319af33360e01b88528601528051978885870152875b8981106102e357505050506102cf9183876084938885819b850101526044830152601f80199101168101039081018452018261045b565b51906a636f6e736f6c652e6c6f675afa5080f35b8281018401518188018301528a98508301610298565b60418991634e487b7160e01b5f52525ffd5b61031490610433565b61031f57888a610243565b8880fd5b89513d84823e3d90fd5b61033690610433565b61005d57818c610219565b8a513d85823e3d90fd5b8280fd5b634e487b7160e01b8d52604187528d8dfd5b9091508381813d831161038d575b610379818361045b565b810103126103895751908a610193565b5f80fd5b503d61036f565b88513d8b823e3d90fd5b6103a9919750610433565b5f9588610142565b87513d5f823e3d90fd5b9093508281813d83116103f3575b6103d3818361045b565b8101031261038957516001600160a01b0381168103610389579289610116565b503d6103c9565b9092508181813d8311610422575b610412818361045b565b81010312610389575191886100d1565b503d610408565b86513d5f823e3d90fd5b67ffffffffffffffff811161044757604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176104475760405256fe60c0346200012f57601f6200238838819003918201601f19168301926001600160401b0392909183851183861017620001335781602092849260409788528339810103126200012f57513060805280156200011e5760a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff82851c166200010d578080831603620000c8575b835161224090816200014882396080518181816113b4015261146d015260a051818181610522015281816105f7015261170d0152f35b6001600160401b0319909116811790915581519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f808062000092565b835163f92ee8a960e01b8152600490fd5b825163d92e233d60e01b8152600490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610085575b36156100475760405162461bcd60e51b815260206004820152600b60248201526a4e6f2066616c6c6261636b60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275111a5c9958dd08115512081b9bdd08185b1b1bddd95960521b6044820152606490fd5b5f3560e01c806310cb729f146118c6578063110b328514611826578063164e68de146117bb5780631904863c1461179f57806327ff622314611782578063319a2cbb146116ef57806333917ca9146116be57806333b3e099146116a15780633f4ba83a1461163f5780633fb19a53146116225780634f1ef2861461141e57806351858e271461119257806352d1902d146113a25780635c975abb146113745780636ff1c9bc146112ce578063715018a614611251578063738fc2f91461123557806379ba5097146111e45780637ecebe00146111ac5780638456cb591461119257806384b0196e1461103a5780638da5cb5b14611006578063a2e362ae14610bf9578063ad3cb1cc14610bb0578063b4988fd014610545578063bc063e1a1461050b578063c771909c146104e3578063c891091314610487578063d279b0ca146103ff578063d47875d01461038f578063e30c39781461035b578063ee4eb93d1461033d578063f2fde38b146102b9578063fede61141461029c5763ffc9896b0361000e57346102985760203660031901126102985760806001600160a01b0361022d61193d565b16805f52600460205260405f2090604080519261024984611953565b54916001600160801b038316938481526001600160401b0384871c169384602083015260c01c92839101525f52600560205260405f205491604051938452602084015260408301526060820152f35b5f80fd5b34610298575f366003190112610298576020604051620151808152f35b34610298576020366003190112610298576102d261193d565b6102da611bf2565b5f805160206121eb83398151915280546001600160a01b0319166001600160a01b039283169081179091555f8051602061218b833981519152549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b34610298575f3660031901126102985760206040516361cf99808152f35b34610298575f366003190112610298575f805160206121eb833981519152546040516001600160a01b039091168152602090f35b34610298576020366003190112610298576001600160a01b036103b061193d565b165f5260046020526040805f208151906103c982611953565b546001600160801b03811691828152836001600160401b038360801c169283602084015260c01c91015282519182526020820152f35b346102985760203660031901126102985761041861193d565b610420611bf2565b6001600160a01b03168015610475576020817f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b60405163d92e233d60e01b8152600490fd5b34610298576020366003190112610298576001600160a01b036104a861193d565b165f526004602052606060405f2054604051906001600160801b03811682526001600160401b038160801c16602083015260c01c6040820152f35b34610298575f366003190112610298576002546040516001600160a01b039091168152602090f35b34610298575f3660031901126102985760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610298576060366003190112610298576001600160a01b036004356024358281168103610298576044359183831691828403610298577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00938454936001600160401b03851680159081610ba0575b6001149081610b96575b159081610b8d575b50610b7b5760016001600160401b0319861617865560ff8560401c1615610b5c575b868316156104755715610475577f0000000000000000000000000000000000000000000000000000000000000000808411610b3e575061063f9061062a611f8a565b610632611f8a565b61063a611f8a565b611c6c565b610647611f8a565b61064f611f8a565b5f805160206121ab833981519152805460ff1916905561066d611f8a565b610675611f8a565b60015f805160206121cb833981519152556040519461069386611989565b600e86526d42617365426164676553636f726560901b6020870152604051956106bb87611989565b60018752603160f81b60208801526106d1611f8a565b6106d9611f8a565b8051906001600160401b038211610a095781906107035f8051602061216b83398151915254611cd7565b601f8111610ac4575b50602090601f8311600114610a28575f92610a1d575b50508160011b915f199060031b1c1916175f8051602061216b833981519152555b85516001600160401b038111610a09577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1039061077f8254611cd7565b601f81116109a7575b506020601f82116001146108db57937f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7695937f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73938360209794889560ff9c9d5f926108d0575b50508160011b915f199060031b1c19161790555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10155610850611f8a565b845f558082166bffffffffffffffffffffffff60a01b6002541617600255601e60015561025860035560405191168152a1604051908152a160401c161561089357005b68ff00000000000000001981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508d806107ee565b601f19821698835f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75995f5b81811061098f57509360018460ff9b9c602099957f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c769b99958b987f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c739a10610977575b505050811b019055610802565b01515f1960f88460031b161c191690558d808061096a565b838301518c556001909b019a60209384019301610908565b825f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f830160051c810191602084106109ff575b601f0160051c01905b8181106109f45750610788565b5f81556001016109e7565b90915081906109de565b634e487b7160e01b5f52604160045260245ffd5b015190508880610722565b5f8051602061216b8339815191525f9081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9350601f198516905b818110610aac5750908460019594939210610a94575b505050811b015f8051602061216b83398151915255610743565b01515f1960f88460031b161c19169055888080610a7a565b92936020600181928786015181550195019301610a64565b9091505f8051602061216b8339815191525f527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d601f840160051c81019160208510610b34575b90601f859493920160051c01905b818110610b26575061070c565b5f8155849350600101610b19565b9091508190610b0b565b8360449160405191631e0bd6c160e31b835260048301526024820152fd5b68ffffffffffffffffff198516680100000000000000011786556105e8565b60405163f92ee8a960e01b8152600490fd5b905015886105c6565b303b1591506105be565b604087901c60ff161591506105b4565b34610298575f36600319011261029857610bf5604051610bcf81611989565b60058152640352e302e360dc1b6020820152604051918291602083526020830190611a16565b0390f35b60803660031901126102985760448035906004359060249081356001600160401b03606435818111610298573660238201121561029857806004013590828211610298573686838301011161029857610c50611c12565b610c58611ea3565b5f54803403610fea5750620f4240808811610fce57506361cf9980808510610fb05750335f526020976005895260405f2054808203610f94575091610d74610d7a926042610d83956040518d8101917fd0a0509035718ad455d593d20a83743ce5d6920842ee8cb1f4d76d7197a7bcb883523360408301528d60608301528a608083015260a082015260a08152610cee8161196e565b519020610cf96120bb565b8d610d02612125565b604051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152610d4f8161196e565b519020906040519161190160f01b8352600283015260228201522092893692016119e0565b90611ecd565b90929192611f07565b6002546001600160a01b03908116911603610f8257335f526004865260405f209260405193610db185611953565b5460406001600160801b0395868316815289810192858160801c16845260c01c918291015280851115610f665750600154908382151580610f5a575b610f20575b505050824210610f0357610e068342611afa565b600354808211610eea5750505060405192610e2084611953565b80861684528684019180421683526040850193168352335f526004875260405f20935116906001600160401b0360801b905160801b16916001600160401b0360c01b905160c01b1691171790556005835260405f20908154905f198214610ed75750600101905560405181815234838201524260408201527fd1ab2b2d603dc80565da0286deeb7d3699341e28d8234689428dbe9b7d58c8ac60603392a260015f805160206121cb83398151915255604051908152f35b634e487b7160e01b5f9081526011600452fd5b8660405192635ee1691b60e11b84526004840152820152fd5b8460035460405191635ee1691b60e11b83525f6004840152820152fd5b610f2c91511642611afa565b90808210610f3a5783610df2565b8691610f4591611afa565b604051906365a85b4760e01b82526004820152fd5b50808251161515610ded565b8491508660405192634ef2701560e01b84526004840152820152fd5b604051632057875960e21b8152600490fd5b86925087604051926306427aeb60e01b84526004840152820152fd5b6040516331b3a51360e01b8152600481019590955284870152505050fd5b8786918860405192635467da8d60e11b84526004840152820152fd5b86869160405191631e0bd6c160e31b8352346004840152820152fd5b34610298575f366003190112610298575f8051602061218b833981519152546040516001600160a01b039091168152602090f35b34610298575f366003190112610298577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100541580611169575b1561112c57611080611d0f565b611088611de4565b6040516020808201928284106001600160401b03851117610a09579160206110e185946110d397966040525f8452604051978897600f60f81b895260e0858a015260e0890190611a16565b908782036040890152611a16565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061111557505050500390f35b835185528695509381019392810192600101611106565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015415611073565b34610298575f366003190112610298576111aa611b9d565b005b34610298576020366003190112610298576001600160a01b036111cd61193d565b165f526005602052602060405f2054604051908152f35b34610298575f366003190112610298575f805160206121eb83398151915254336001600160a01b039091160361121d576111aa33611c6c565b60405163118cdaa760e01b8152336004820152602490fd5b34610298575f3660031901126102985760206040516102588152f35b34610298575f36600319011261029857611269611bf2565b5f805160206121eb83398151915280546001600160a01b03199081169091555f8051602061218b833981519152805491821690555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610298576020366003190112610298576004356001600160a01b03811690819003610298576112fc611bf2565b611304611c41565b61130c611c12565b8015610475577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695602047611341811515611a54565b61135a5f80808085895af1611354611a8d565b50611abc565b604051908152a260015f805160206121cb83398151915255005b34610298575f36600319011261029857602060ff5f805160206121ab83398151915254166040519015158152f35b34610298575f366003190112610298577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361140c5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b60403660031901126102985761143261193d565b6024356001600160401b0381116102985736602382011215610298576114629036906024816004013591016119e0565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156115f4575b5061140c576114a6611bf2565b8116906040516352d1902d60e01b8152602081600481865afa5f91816115c0575b506114e557604051634c9c8ce360e01b815260048101849052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc929192908181036115a85750823b1561158f5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561157657505f808360206111aa95519101845af4611570611a8d565b91612058565b9150503461158057005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091506020813d6020116115ec575b816115dc602093836119a4565b81010312610298575190856114c7565b3d91506115cf565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141584611499565b34610298575f366003190112610298576020600154604051908152f35b34610298575f36600319011261029857611657611bf2565b61165f611c41565b5f805160206121ab83398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b34610298575f366003190112610298576020600354604051908152f35b346102985760203660031901126102985760406116e16116dc61193d565b611b1b565b825191151582526020820152f35b346102985760203660031901126102985760043561170b611bf2565b7f0000000000000000000000000000000000000000000000000000000000000000808211611763577f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76602083805f55604051908152a1005b604051631e0bd6c160e31b815260048101929092526024820152604490fd5b34610298575f366003190112610298576020604051620f42408152f35b34610298575f3660031901126102985760205f54604051908152f35b34610298576020366003190112610298576004356001600160a01b03811690819003610298576117e9611bf2565b6117f1611c12565b8015610475577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364602047611341811515611a54565b3461029857602036600319011261029857600435611842611bf2565b801515806118b9575b15611881576020817fed1b8a3acdd1de20e69e80caa4b3762f856b4e74e0fad35189af650e20c3085a92600355604051908152a1005b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69644d617853696741676560801b6044820152606490fd5b506201518081111561184b565b34610298576020366003190112610298576004356118e2611bf2565b6201518080821161191e577fad8a71533bfa097e1676af0fbe86477cb4b1a4c3456cc493a1253ae5d9b7cf2d60208380600155604051908152a1005b6040516306115faf60e11b815260048101929092526024820152604490fd5b600435906001600160a01b038216820361029857565b606081019081106001600160401b03821117610a0957604052565b60c081019081106001600160401b03821117610a0957604052565b604081019081106001600160401b03821117610a0957604052565b90601f801991011681019081106001600160401b03821117610a0957604052565b6001600160401b038111610a0957601f01601f191660200190565b9291926119ec826119c5565b916119fa60405193846119a4565b829481845281830111610298578281602093845f960137010152565b91908251928382525f5b848110611a40575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201611a20565b15611a5b57565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b3d15611ab7573d90611a9e826119c5565b91611aac60405193846119a4565b82523d5f602084013e565b606090565b15611ac357565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b91908203918211611b0757565b634e487b7160e01b5f52601160045260245ffd5b600154908115611b945760018060a01b03165f52600460205260405f2060405190611b4582611953565b54906001600160801b038216815260406001600160401b038360801c169283602084015260c01c9101528015611b9457611b7f9042611afa565b81811015611b9457611b9091611afa565b5f91565b50506001905f90565b611ba5611bf2565b611bad611ea3565b5f805160206121ab833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1565b5f8051602061218b833981519152546001600160a01b0316330361121d57565b5f805160206121cb8339815191526002815414611c2f5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff5f805160206121ab833981519152541615611c5a57565b604051638dfc202b60e01b8152600490fd5b5f805160206121eb83398151915280546001600160a01b03199081169091555f8051602061218b83398151915280549182166001600160a01b0393841690811790915591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600182811c92168015611d05575b6020831014611cf157565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611ce6565b604051905f825f8051602061216b83398151915291825492611d3084611cd7565b80845293602091600191828116908115611dbe5750600114611d5e575b505050611d5c925003836119a4565b565b5f9081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9590935091905b828410611da65750611d5c9450505081016020015f8080611d4d565b85548885018301529485019487945092810192611d8a565b9250505060209250611d5c94915060ff191682840152151560051b8201015f8080611d4d565b604051905f827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10391825492611e1884611cd7565b80845293602091600191828116908115611dbe5750600114611e4357505050611d5c925003836119a4565b5f9081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410611e8b5750611d5c9450505081016020015f8080611d4d565b85548885018301529485019487945092810192611e6f565b60ff5f805160206121ab8339815191525416611ebb57565b60405163d93c066560e01b8152600490fd5b8151919060418303611efd57611ef69250602082015190606060408401519301515f1a90611fcb565b9192909190565b50505f9160029190565b6004811015611f765780611f19575050565b60018103611f335760405163f645eedf60e01b8152600490fd5b60028103611f545760405163fce698f760e01b815260048101839052602490fd5b600314611f5e5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615611fb957565b604051631afcd79f60e31b8152600490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161204d579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612042575f516001600160a01b0381161561203857905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b9061207f575080511561206d57805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806120b2575b612090575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612088565b6120c3611d0f565b80519081156120d3576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005480156121005790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b61212d611de4565b805190811561213d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612100579056fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00a2646970667358221220131fd34b8c6e95369c9bac22f6c12e835756826f3ae43bfd9b91e02203bd054864736f6c63430008170033a2646970667358221220220b8553a36a656d5e920bf3a6460c6b7598b44541303a2f6670f1e79503793864736f6c63430008170033",
                "sourceMap": "313:531:48:-:0;;;;;;;;;;3166:4:3;313:531:48;;;3166:4:3;313:531:48;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "6080604081815260049182361015610015575f80fd5b5f925f3560e01c918263c04062261461006157505063f8ccbf4714610038575f80fd5b3461005d578160031936011261005d5760209060ff600c5460101c1690519015158152f35b5080fd5b83859134610389575f3660031901126103895763c1978d1f60e01b81526024936020918282820152600b868201526a505249564154455f4b455960a81b6044820152606492737109709ecfa91a80626ff3989d68f67f5b1dd12d9281838681875afa928315610429575f936103fa575b50855163350d56bf60e01b8152818101839052600d898201526c50524f58595f4144445245535360981b60448201529282848781885afa9384156103b1575f946103bb575b50843b156103895786519063ce817d4760e01b8252828201525f818a8183895af180156103b15761039e575b508551635e97348f60e01b8152818101879052600b60448201526a4d41585f4645455f57454960a81b8682015266038d7ea4c680008982015260849483828781845afa918215610394578992610361575b508751612388928382019067ffffffffffffffff948383108684111761034f5792809288928e9f9e969561047e8439815203019083f0958615610323576001600160a01b039687169616803b1561034b57828b8a89838e958651968795869463278f794360e11b86528d8601528401528160448401525af180156103415790839161032d575b5050803b1561005d57818091858b5180948193633b756e9b60e11b83525af180156103235761030b575b5050865191828801918211838310176102f957509086949795939291899752600c81526b2ab833b930b232b2103a379d60a11b828201528451948286019663319af33360e01b88528601528051978885870152875b8981106102e357505050506102cf9183876084938885819b850101526044830152601f80199101168101039081018452018261045b565b51906a636f6e736f6c652e6c6f675afa5080f35b8281018401518188018301528a98508301610298565b60418991634e487b7160e01b5f52525ffd5b61031490610433565b61031f57888a610243565b8880fd5b89513d84823e3d90fd5b61033690610433565b61005d57818c610219565b8a513d85823e3d90fd5b8280fd5b634e487b7160e01b8d52604187528d8dfd5b9091508381813d831161038d575b610379818361045b565b810103126103895751908a610193565b5f80fd5b503d61036f565b88513d8b823e3d90fd5b6103a9919750610433565b5f9588610142565b87513d5f823e3d90fd5b9093508281813d83116103f3575b6103d3818361045b565b8101031261038957516001600160a01b0381168103610389579289610116565b503d6103c9565b9092508181813d8311610422575b610412818361045b565b81010312610389575191886100d1565b503d610408565b86513d5f823e3d90fd5b67ffffffffffffffff811161044757604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176104475760405256fe60c0346200012f57601f6200238838819003918201601f19168301926001600160401b0392909183851183861017620001335781602092849260409788528339810103126200012f57513060805280156200011e5760a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff82851c166200010d578080831603620000c8575b835161224090816200014882396080518181816113b4015261146d015260a051818181610522015281816105f7015261170d0152f35b6001600160401b0319909116811790915581519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f808062000092565b835163f92ee8a960e01b8152600490fd5b825163d92e233d60e01b8152600490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610085575b36156100475760405162461bcd60e51b815260206004820152600b60248201526a4e6f2066616c6c6261636b60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275111a5c9958dd08115512081b9bdd08185b1b1bddd95960521b6044820152606490fd5b5f3560e01c806310cb729f146118c6578063110b328514611826578063164e68de146117bb5780631904863c1461179f57806327ff622314611782578063319a2cbb146116ef57806333917ca9146116be57806333b3e099146116a15780633f4ba83a1461163f5780633fb19a53146116225780634f1ef2861461141e57806351858e271461119257806352d1902d146113a25780635c975abb146113745780636ff1c9bc146112ce578063715018a614611251578063738fc2f91461123557806379ba5097146111e45780637ecebe00146111ac5780638456cb591461119257806384b0196e1461103a5780638da5cb5b14611006578063a2e362ae14610bf9578063ad3cb1cc14610bb0578063b4988fd014610545578063bc063e1a1461050b578063c771909c146104e3578063c891091314610487578063d279b0ca146103ff578063d47875d01461038f578063e30c39781461035b578063ee4eb93d1461033d578063f2fde38b146102b9578063fede61141461029c5763ffc9896b0361000e57346102985760203660031901126102985760806001600160a01b0361022d61193d565b16805f52600460205260405f2090604080519261024984611953565b54916001600160801b038316938481526001600160401b0384871c169384602083015260c01c92839101525f52600560205260405f205491604051938452602084015260408301526060820152f35b5f80fd5b34610298575f366003190112610298576020604051620151808152f35b34610298576020366003190112610298576102d261193d565b6102da611bf2565b5f805160206121eb83398151915280546001600160a01b0319166001600160a01b039283169081179091555f8051602061218b833981519152549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b34610298575f3660031901126102985760206040516361cf99808152f35b34610298575f366003190112610298575f805160206121eb833981519152546040516001600160a01b039091168152602090f35b34610298576020366003190112610298576001600160a01b036103b061193d565b165f5260046020526040805f208151906103c982611953565b546001600160801b03811691828152836001600160401b038360801c169283602084015260c01c91015282519182526020820152f35b346102985760203660031901126102985761041861193d565b610420611bf2565b6001600160a01b03168015610475576020817f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b60405163d92e233d60e01b8152600490fd5b34610298576020366003190112610298576001600160a01b036104a861193d565b165f526004602052606060405f2054604051906001600160801b03811682526001600160401b038160801c16602083015260c01c6040820152f35b34610298575f366003190112610298576002546040516001600160a01b039091168152602090f35b34610298575f3660031901126102985760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610298576060366003190112610298576001600160a01b036004356024358281168103610298576044359183831691828403610298577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00938454936001600160401b03851680159081610ba0575b6001149081610b96575b159081610b8d575b50610b7b5760016001600160401b0319861617865560ff8560401c1615610b5c575b868316156104755715610475577f0000000000000000000000000000000000000000000000000000000000000000808411610b3e575061063f9061062a611f8a565b610632611f8a565b61063a611f8a565b611c6c565b610647611f8a565b61064f611f8a565b5f805160206121ab833981519152805460ff1916905561066d611f8a565b610675611f8a565b60015f805160206121cb833981519152556040519461069386611989565b600e86526d42617365426164676553636f726560901b6020870152604051956106bb87611989565b60018752603160f81b60208801526106d1611f8a565b6106d9611f8a565b8051906001600160401b038211610a095781906107035f8051602061216b83398151915254611cd7565b601f8111610ac4575b50602090601f8311600114610a28575f92610a1d575b50508160011b915f199060031b1c1916175f8051602061216b833981519152555b85516001600160401b038111610a09577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1039061077f8254611cd7565b601f81116109a7575b506020601f82116001146108db57937f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7695937f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73938360209794889560ff9c9d5f926108d0575b50508160011b915f199060031b1c19161790555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10155610850611f8a565b845f558082166bffffffffffffffffffffffff60a01b6002541617600255601e60015561025860035560405191168152a1604051908152a160401c161561089357005b68ff00000000000000001981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508d806107ee565b601f19821698835f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75995f5b81811061098f57509360018460ff9b9c602099957f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c769b99958b987f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c739a10610977575b505050811b019055610802565b01515f1960f88460031b161c191690558d808061096a565b838301518c556001909b019a60209384019301610908565b825f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f830160051c810191602084106109ff575b601f0160051c01905b8181106109f45750610788565b5f81556001016109e7565b90915081906109de565b634e487b7160e01b5f52604160045260245ffd5b015190508880610722565b5f8051602061216b8339815191525f9081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9350601f198516905b818110610aac5750908460019594939210610a94575b505050811b015f8051602061216b83398151915255610743565b01515f1960f88460031b161c19169055888080610a7a565b92936020600181928786015181550195019301610a64565b9091505f8051602061216b8339815191525f527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d601f840160051c81019160208510610b34575b90601f859493920160051c01905b818110610b26575061070c565b5f8155849350600101610b19565b9091508190610b0b565b8360449160405191631e0bd6c160e31b835260048301526024820152fd5b68ffffffffffffffffff198516680100000000000000011786556105e8565b60405163f92ee8a960e01b8152600490fd5b905015886105c6565b303b1591506105be565b604087901c60ff161591506105b4565b34610298575f36600319011261029857610bf5604051610bcf81611989565b60058152640352e302e360dc1b6020820152604051918291602083526020830190611a16565b0390f35b60803660031901126102985760448035906004359060249081356001600160401b03606435818111610298573660238201121561029857806004013590828211610298573686838301011161029857610c50611c12565b610c58611ea3565b5f54803403610fea5750620f4240808811610fce57506361cf9980808510610fb05750335f526020976005895260405f2054808203610f94575091610d74610d7a926042610d83956040518d8101917fd0a0509035718ad455d593d20a83743ce5d6920842ee8cb1f4d76d7197a7bcb883523360408301528d60608301528a608083015260a082015260a08152610cee8161196e565b519020610cf96120bb565b8d610d02612125565b604051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152610d4f8161196e565b519020906040519161190160f01b8352600283015260228201522092893692016119e0565b90611ecd565b90929192611f07565b6002546001600160a01b03908116911603610f8257335f526004865260405f209260405193610db185611953565b5460406001600160801b0395868316815289810192858160801c16845260c01c918291015280851115610f665750600154908382151580610f5a575b610f20575b505050824210610f0357610e068342611afa565b600354808211610eea5750505060405192610e2084611953565b80861684528684019180421683526040850193168352335f526004875260405f20935116906001600160401b0360801b905160801b16916001600160401b0360c01b905160c01b1691171790556005835260405f20908154905f198214610ed75750600101905560405181815234838201524260408201527fd1ab2b2d603dc80565da0286deeb7d3699341e28d8234689428dbe9b7d58c8ac60603392a260015f805160206121cb83398151915255604051908152f35b634e487b7160e01b5f9081526011600452fd5b8660405192635ee1691b60e11b84526004840152820152fd5b8460035460405191635ee1691b60e11b83525f6004840152820152fd5b610f2c91511642611afa565b90808210610f3a5783610df2565b8691610f4591611afa565b604051906365a85b4760e01b82526004820152fd5b50808251161515610ded565b8491508660405192634ef2701560e01b84526004840152820152fd5b604051632057875960e21b8152600490fd5b86925087604051926306427aeb60e01b84526004840152820152fd5b6040516331b3a51360e01b8152600481019590955284870152505050fd5b8786918860405192635467da8d60e11b84526004840152820152fd5b86869160405191631e0bd6c160e31b8352346004840152820152fd5b34610298575f366003190112610298575f8051602061218b833981519152546040516001600160a01b039091168152602090f35b34610298575f366003190112610298577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100541580611169575b1561112c57611080611d0f565b611088611de4565b6040516020808201928284106001600160401b03851117610a09579160206110e185946110d397966040525f8452604051978897600f60f81b895260e0858a015260e0890190611a16565b908782036040890152611a16565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061111557505050500390f35b835185528695509381019392810192600101611106565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015415611073565b34610298575f366003190112610298576111aa611b9d565b005b34610298576020366003190112610298576001600160a01b036111cd61193d565b165f526005602052602060405f2054604051908152f35b34610298575f366003190112610298575f805160206121eb83398151915254336001600160a01b039091160361121d576111aa33611c6c565b60405163118cdaa760e01b8152336004820152602490fd5b34610298575f3660031901126102985760206040516102588152f35b34610298575f36600319011261029857611269611bf2565b5f805160206121eb83398151915280546001600160a01b03199081169091555f8051602061218b833981519152805491821690555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610298576020366003190112610298576004356001600160a01b03811690819003610298576112fc611bf2565b611304611c41565b61130c611c12565b8015610475577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695602047611341811515611a54565b61135a5f80808085895af1611354611a8d565b50611abc565b604051908152a260015f805160206121cb83398151915255005b34610298575f36600319011261029857602060ff5f805160206121ab83398151915254166040519015158152f35b34610298575f366003190112610298577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361140c5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b60403660031901126102985761143261193d565b6024356001600160401b0381116102985736602382011215610298576114629036906024816004013591016119e0565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156115f4575b5061140c576114a6611bf2565b8116906040516352d1902d60e01b8152602081600481865afa5f91816115c0575b506114e557604051634c9c8ce360e01b815260048101849052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc929192908181036115a85750823b1561158f5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561157657505f808360206111aa95519101845af4611570611a8d565b91612058565b9150503461158057005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091506020813d6020116115ec575b816115dc602093836119a4565b81010312610298575190856114c7565b3d91506115cf565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141584611499565b34610298575f366003190112610298576020600154604051908152f35b34610298575f36600319011261029857611657611bf2565b61165f611c41565b5f805160206121ab83398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b34610298575f366003190112610298576020600354604051908152f35b346102985760203660031901126102985760406116e16116dc61193d565b611b1b565b825191151582526020820152f35b346102985760203660031901126102985760043561170b611bf2565b7f0000000000000000000000000000000000000000000000000000000000000000808211611763577f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76602083805f55604051908152a1005b604051631e0bd6c160e31b815260048101929092526024820152604490fd5b34610298575f366003190112610298576020604051620f42408152f35b34610298575f3660031901126102985760205f54604051908152f35b34610298576020366003190112610298576004356001600160a01b03811690819003610298576117e9611bf2565b6117f1611c12565b8015610475577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364602047611341811515611a54565b3461029857602036600319011261029857600435611842611bf2565b801515806118b9575b15611881576020817fed1b8a3acdd1de20e69e80caa4b3762f856b4e74e0fad35189af650e20c3085a92600355604051908152a1005b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69644d617853696741676560801b6044820152606490fd5b506201518081111561184b565b34610298576020366003190112610298576004356118e2611bf2565b6201518080821161191e577fad8a71533bfa097e1676af0fbe86477cb4b1a4c3456cc493a1253ae5d9b7cf2d60208380600155604051908152a1005b6040516306115faf60e11b815260048101929092526024820152604490fd5b600435906001600160a01b038216820361029857565b606081019081106001600160401b03821117610a0957604052565b60c081019081106001600160401b03821117610a0957604052565b604081019081106001600160401b03821117610a0957604052565b90601f801991011681019081106001600160401b03821117610a0957604052565b6001600160401b038111610a0957601f01601f191660200190565b9291926119ec826119c5565b916119fa60405193846119a4565b829481845281830111610298578281602093845f960137010152565b91908251928382525f5b848110611a40575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201611a20565b15611a5b57565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b3d15611ab7573d90611a9e826119c5565b91611aac60405193846119a4565b82523d5f602084013e565b606090565b15611ac357565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b91908203918211611b0757565b634e487b7160e01b5f52601160045260245ffd5b600154908115611b945760018060a01b03165f52600460205260405f2060405190611b4582611953565b54906001600160801b038216815260406001600160401b038360801c169283602084015260c01c9101528015611b9457611b7f9042611afa565b81811015611b9457611b9091611afa565b5f91565b50506001905f90565b611ba5611bf2565b611bad611ea3565b5f805160206121ab833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1565b5f8051602061218b833981519152546001600160a01b0316330361121d57565b5f805160206121cb8339815191526002815414611c2f5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff5f805160206121ab833981519152541615611c5a57565b604051638dfc202b60e01b8152600490fd5b5f805160206121eb83398151915280546001600160a01b03199081169091555f8051602061218b83398151915280549182166001600160a01b0393841690811790915591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600182811c92168015611d05575b6020831014611cf157565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611ce6565b604051905f825f8051602061216b83398151915291825492611d3084611cd7565b80845293602091600191828116908115611dbe5750600114611d5e575b505050611d5c925003836119a4565b565b5f9081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9590935091905b828410611da65750611d5c9450505081016020015f8080611d4d565b85548885018301529485019487945092810192611d8a565b9250505060209250611d5c94915060ff191682840152151560051b8201015f8080611d4d565b604051905f827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10391825492611e1884611cd7565b80845293602091600191828116908115611dbe5750600114611e4357505050611d5c925003836119a4565b5f9081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410611e8b5750611d5c9450505081016020015f8080611d4d565b85548885018301529485019487945092810192611e6f565b60ff5f805160206121ab8339815191525416611ebb57565b60405163d93c066560e01b8152600490fd5b8151919060418303611efd57611ef69250602082015190606060408401519301515f1a90611fcb565b9192909190565b50505f9160029190565b6004811015611f765780611f19575050565b60018103611f335760405163f645eedf60e01b8152600490fd5b60028103611f545760405163fce698f760e01b815260048101839052602490fd5b600314611f5e5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615611fb957565b604051631afcd79f60e31b8152600490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161204d579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612042575f516001600160a01b0381161561203857905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b9061207f575080511561206d57805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806120b2575b612090575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612088565b6120c3611d0f565b80519081156120d3576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005480156121005790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b61212d611de4565b805190811561213d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612100579056fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00a2646970667358221220131fd34b8c6e95369c9bac22f6c12e835756826f3ae43bfd9b91e02203bd054864736f6c63430008170033a2646970667358221220220b8553a36a656d5e920bf3a6460c6b7598b44541303a2f6670f1e79503793864736f6c63430008170033",
                "sourceMap": "313:531:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:28:1;313:531:48;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;313:531:48;;;;1590:14:0;;;401:25:48;;1590:14:0;401:25:48;;;;;;;1590:14:0;;;;;;-1:-1:-1;;;1590:14:0;;;;;313:531:48;;401:25;;;;;;;;;;;;;313:531;401:25;;;313:531;-1:-1:-1;313:531:48;;-1:-1:-1;;;459:30:48;;;;;1590:14:0;;;;;;;;-1:-1:-1;;;1590:14:0;;;;313:531:48;459:30;313:531;459:30;313:531;459:30;;;;;;;;313:531;459:30;;;313:531;500:21;;;;;;313:531;;1590:14:0;;;;500:21:48;;;;;1590:14:0;313:531:48;500:21;;;;;;;;;;;;;313:531;-1:-1:-1;313:531:48;;-1:-1:-1;;;549:38:48;;;;;1590:14:0;;;;;;;;-1:-1:-1;;;1590:14:0;;;;581:4:48;1590:14:0;;;;;;549:38:48;313:531;1590:14:0;313:531:48;549:38;;;;;;;;;;;;313:531;;;;631:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:14:0;;631:35:48;;;;;;;;;;-1:-1:-1;;;;;313:531:48;;;;;677:73;;;;;313:531;;;;;;;;;1590:14:0;;;;;;;;677:73:48;;;;;1590:14:0;;;;;;;;;677:73:48;;;;;;;;;;;313:531;761:18;;;;;;;313:531;;;;;;1590:14:0;;;;;;;761:18:48;;;;;;;;;;313:531;-1:-1:-1;;313:531:48;;;1590:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1590:14:0;;;;313:531:48;;7704:54:15;;;;;;;;;;;;313:531:48;;;;;;;;1590:14:0;313:531:48;;;;;;;;;;;7704:54:15;313:531:48;;;1590:14:0;313:531:48;;;;;;;;;1590:14:0;313:531:48;;1590:14:0;;;;;;;313:531:48;;7704:54:15;;;;;;;;;:::i;:::-;313:531:48;762:159:15;131:42;762:159;;;313:531:48;;;;;;;;;;;;;;;;;-1:-1:-1;313:531:48;;;;1590:14:0;;;;;;;313:531:48;1590:14:0;;313:531:48;1590:14:0;761:18:48;;;;:::i;:::-;313:531;;761:18;;;;313:531;;;;761:18;313:531;;1590:14:0;313:531:48;;1590:14:0;;;;677:73:48;;;;:::i;:::-;313:531;;677:73;;;;;313:531;;1590:14:0;313:531:48;;1590:14:0;;;;677:73:48;313:531;;;631:35;-1:-1:-1;;;1590:14:0;;;;;;;;549:38:48;;;;;;;;;;;;;;;;;:::i;:::-;;;1590:14:0;;;;;549:38:48;;;;1590:14:0;313:531:48;;;549:38;;;;;;313:531;;1590:14:0;313:531:48;;1590:14:0;;;;500:21:48;;;;;;:::i;:::-;313:531;500:21;;;;;313:531;;1590:14:0;313:531:48;1590:14:0;;;;;459:30:48;;;;;;;;;;;;;;;;;:::i;:::-;;;1590:14:0;;;;;-1:-1:-1;;;;;313:531:48;;1590:14:0;;;;459:30:48;;;;;;;;;401:25;;;;;;;;;;;;;;;;;:::i;:::-;;;1590:14:0;;;;;401:25:48;;;;;;;;;;313:531;;1590:14:0;313:531:48;1590:14:0;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_SCRIPT()": "f8ccbf47",
                "run()": "c0406226"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/script/UpgradeToV2.s.sol": {
      "UpgradeToV2": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_SCRIPT",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "run",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Script to upgrade the existing ScoreChecker contract to V2This script assumes you have a proxy contract already deployed\",\"kind\":\"dev\",\"methods\":{},\"title\":\"UpgradeToV2\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/UpgradeToV2.s.sol\":\"UpgradeToV2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"script/UpgradeToV2.s.sol\":{\"keccak256\":\"0xde7652c92023f5fe70e62ce0470a9c58a51e9a61d27c3aeae3a8f3c7b6c837af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5710e213632a85e930afc5d30067a80ef9cff1dd60e2ae882e4472c796bd0a3f\",\"dweb:/ipfs/QmXoKqNUK68rAuSQo2w5Pn7Gf57hcdzkWfdHBEyC9ykYuk\"]},\"src/ScoreCheckerUpgradeableV2.sol\":{\"keccak256\":\"0xdcd4fdfa4c1604bfbc283449c89c84dda53bfbb2f2bb24111bd0314ad35cb60c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e49a54670032a74145006fe82ec775828e90f3965e2ef795fd83221185063a8\",\"dweb:/ipfs/QmTTRzZ6w1AyFTX5QJJwgAHFnKYrC3kBTTdb1E4Vfjr5Nq\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 2758,
                  "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                  "label": "stdChainsInitialized",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2779,
                  "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                  "label": "chains",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)"
                },
                {
                  "astId": 2783,
                  "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                  "label": "defaultRpcUrls",
                  "offset": 0,
                  "slot": "10",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
                },
                {
                  "astId": 2787,
                  "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                  "label": "idToAlias",
                  "offset": 0,
                  "slot": "11",
                  "type": "t_mapping(t_uint256,t_string_storage)"
                },
                {
                  "astId": 2790,
                  "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                  "label": "fallbackToDefaultRpcUrls",
                  "offset": 0,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 3593,
                  "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                  "label": "gasMeteringOff",
                  "offset": 1,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 112,
                  "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                  "label": "IS_SCRIPT",
                  "offset": 2,
                  "slot": "12",
                  "type": "t_bool"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_mapping(t_string_memory_ptr,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => struct StdChains.Chain)",
                  "numberOfBytes": "32",
                  "value": "t_struct(Chain)2774_storage"
                },
                "t_mapping(t_uint256,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_string_memory_ptr": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(Chain)2774_storage": {
                  "encoding": "inplace",
                  "label": "struct StdChains.Chain",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 2767,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "name",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2769,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "chainId",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 2771,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "chainAlias",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2773,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "rpcUrl",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_string_storage"
                    }
                  ]
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "script/UpgradeToV2.s.sol:UpgradeToV2",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "60808060405234610027576201000162ff00ff19600c541617600c55613727908161002c8239f35b5f80fdfe6080604081815260049182361015610015575f80fd5b5f925f3560e01c918263c04062261461006157505063f8ccbf4714610038575f80fd5b3461005d578160031936011261005d5760209060ff600c5460101c1690519015158152f35b5080fd5b83859134610560575f3660031901126105605763c1978d1f60e01b81526024936020918282820152600b868201526a505249564154455f4b455960a81b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d8382606481845afa9182156105d2575f926105a3575b50845163350d56bf60e01b8152838101859052600d888201526c50524f58595f4144445245535360981b6044820152918483606481855afa928315610556575f93610564575b50813b156105605785519063ce817d4760e01b8252848201525f81898183865af1801561055657610543575b50845191612fb89283810167ffffffffffffffff948282108683111761053157828a9b9a9392899261073a833966038d7ea4c68000815203019082f092831561052557803b1561005d57818091878a5180948193633b756e9b60e11b83525af1801561051b57610503575b505061024561026f9261020188516101c281610604565b602981527f4e657720696d706c656d656e746174696f6e206465706c6f7965642073756363898201526865737366756c6c792160b81b8a82015261069c565b87519061020d82610620565b601b82527f4e657720696d706c656d656e746174696f6e20616464726573733a0000000000888301526001600160a01b0316906106ea565b855161025081610620565b600e81526d283937bc3c9030b2323932b9b99d60911b868201526106ea565b6102b9845161027d81610604565b602681527f0a546f20636f6d706c6574652074686520757067726164652c20796f75206e65858201526532b2103a379d60d11b8682015261069c565b61030b84516102c781610604565b602e81527f312e2043616c6c2075706772616465546f416e6443616c6c206f6e2074686520858201526d1c1c9bde1e4818dbdb9d1c9858dd60921b8682015261069c565b83519160808301918211838310176104f15750636561647960e01b926103be85937f342e204465706c6f7920746f2042617365204d61696e6e6574207768656e2072936104ee989752604e81527f322e204f722075736520612070726f7065722075706772616465206d65636861838201527f6e69736d206c696b65204f70656e5a657070656c696e27732075706772616465858201526d61626c6520636f6e74726163747360901b606082015261069c565b6103e983516103cc81610620565b600c81526b052732bc3a1039ba32b8399d60a11b8382015261069c565b61044a83516103f781610604565b603981527f312e2056657269667920746865206e657720696d706c656d656e746174696f6e838201527f20636f6e7472616374206f6e2042617365205365706f6c6961000000000000008582015261069c565b610499835161045881610604565b602b81527f322e20546573742074686520757067726164656420636f6e7472616374206675838201526a6e6374696f6e616c69747960a81b8582015261069c565b6104d583516104a781610620565b601f81527f332e20456e7375726520616c6c206461746120697320707265736572766564008382015261069c565b8251946104e186610604565b855284015282015261069c565b80f35b60418691634e487b7160e01b5f52525ffd5b61050c906105dc565b6105175787896101ab565b8780fd5b88513d84823e3d90fd5b508651903d90823e3d90fd5b634e487b7160e01b8a52604187528a8afd5b61054e9196506105dc565b5f9487610140565b86513d5f823e3d90fd5b5f80fd5b9092508481813d831161059c575b61057c818361063c565b8101031261056057516001600160a01b0381168103610560579188610114565b503d610572565b9091508381813d83116105cb575b6105bb818361063c565b81010312610560575190876100ce565b503d6105b1565b85513d5f823e3d90fd5b67ffffffffffffffff81116105f057604052565b634e487b7160e01b5f52604160045260245ffd5b6060810190811067ffffffffffffffff8211176105f057604052565b6040810190811067ffffffffffffffff8211176105f057604052565b90601f8019910116810190811067ffffffffffffffff8211176105f057604052565b91908251928382525f5b848110610688575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201610668565b5f80916040516106d7816106c9602082019463104c13eb60e21b865260206024840152604483019061065e565b03601f19810183528261063c565b51906a636f6e736f6c652e6c6f675afa50565b5f919082916106d7604051809261071a602083019563319af33360e01b875260406024850152606484019061065e565b6001600160a01b0391909116604483015203601f19810183528261063c56fe60c0346200016257601f62002fb838819003918201601f19168301926001600160401b0392909183851183861017620001665781602092849260409788528339810103126200016257513060805280156200011e5760a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff82851c166200010d578080831603620000c8575b8351612e3d90816200017b8239608051818181611ebf0152611f78015260a05181818161063f0152818161071001526122410152f35b6001600160401b0319909116811790915581519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f808062000092565b835163f92ee8a960e01b8152600490fd5b825162461bcd60e51b815260206004820152601560248201527f4d61784665652063616e6e6f74206265207a65726f00000000000000000000006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610085575b36156100475760405162461bcd60e51b815260206004820152600b60248201526a4e6f2066616c6c6261636b60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275111a5c9958dd08115512081b9bdd08185b1b1bddd95960521b6044820152606490fd5b5f3560e01c806310cb729f146123fa578063110b32851461235a578063164e68de146122ef5780631904863c146122d357806327ff6223146122b6578063319a2cbb1461222357806333917ca9146121f257806333b3e099146121d55780633f4ba83a146121735780633fb19a53146121565780634980f2881461212d5780634f1ef28614611f2957806351858e271461191557806352d1902d14611ead5780635836d17b14611b255780635c975abb14611af75780636ff1c9bc14611a51578063715018a6146119d4578063738fc2f9146119b857806379ba5097146119675780637ecebe001461192f5780638456cb591461191557806384b0196e146117bd5780638da5cb5b146117895780639b50c5f914610eae578063a23195ed14610cd5578063ad3cb1cc14610c8c578063b4988fd014610662578063bc063e1a14610628578063c771909c14610600578063c8910913146105a4578063d279b0ca1461051c578063d47875d0146104ac578063d91a9458146103bb578063e30c397814610387578063ee4eb93d14610369578063f2fde38b146102e5578063fede6114146102c85763ffc9896b0361000e57346102c45760203660031901126102c45760806001600160a01b03610259612471565b16805f52600560205260405f2090604080519261027584612487565b54916001600160801b038316938481526001600160401b0384871c169384602083015260c01c92839101525f52600660205260405f205491604051938452602084015260408301526060820152f35b5f80fd5b346102c4575f3660031901126102c4576020604051620151808152f35b346102c45760203660031901126102c4576102fe612471565b61030661277d565b5f80516020612de883398151915280546001600160a01b0319166001600160a01b039283169081179091555f80516020612d68833981519152549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b346102c4575f3660031901126102c45760206040516361cf99808152f35b346102c4575f3660031901126102c4575f80516020612de8833981519152546040516001600160a01b039091168152602090f35b346102c45760203660031901126102c4576001600160a01b036103dc612471565b165f5260046020526101e060405f208054906001600160801b03906001810154906001600160401b039263ffffffff906002830154600460038501549401549460405197838116895260801c60208901528281166040890152868160801c166060890152838160c01c16608089015260e01c60a088015281811660c088015260801c60e08701528216610100860152808260801c16610120860152808260a01c166101408601528160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b346102c45760203660031901126102c4576001600160a01b036104cd612471565b165f5260056020526040805f208151906104e682612487565b546001600160801b03811691828152836001600160401b038360801c169283602084015260c01c91015282519182526020820152f35b346102c45760203660031901126102c457610535612471565b61053d61277d565b6001600160a01b03168015610592576020817f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b60405163d92e233d60e01b8152600490fd5b346102c45760203660031901126102c4576001600160a01b036105c5612471565b165f526005602052606060405f2054604051906001600160801b03811682526001600160401b038160801c16602083015260c01c6040820152f35b346102c4575f3660031901126102c4576002546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c45760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102c45760603660031901126102c4576001600160a01b0360243581811681036102c457816044351680604435036102c4577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00918254916001600160401b03831680159081610c7c575b6001149081610c72575b159081610c69575b50610c575760016001600160401b0319841617845560ff8360401c1615610c38575b848216156105925715610592577f00000000000000000000000000000000000000000000000000000000000000008060043511610c185750610741612b02565b610749612b02565b610751612b02565b5f80516020612da8833981519152805460ff1916905561076f612b02565b610777612b02565b60015f80516020612dc88339815191525560405193610795856124d9565b600e85526d42617365426164676553636f726560901b6020860152604051946107bd866124d9565b60018652603160f81b60208701526107d3612b02565b6107db612b02565b8051906001600160401b038211610aef5781906108055f80516020612d488339815191525461288c565b601f8111610b9a575b50602090601f8311600114610b0e575f92610b03575b50508160011b915f199060031b1c1916175f80516020612d48833981519152555b84516001600160401b038111610aef577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10390610881825461288c565b601f8111610a8d575b506020601f82116001146109e4579181602094927f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73969460ff999a5f926109d9575b50508160011b915f199060031b1c19161790555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015561092e612b02565b6004355f55600280546001600160a01b031916838316179055601e60015561025860035561095d604435612821565b60405191168152a17f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7660206040516004358152a160401c161561099c57005b68ff00000000000000001981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508a806108cc565b601f19821697835f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75985f5b818110610a7557509260ff98997f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73979593600193836020999710610a5d575b505050811b0190556108e0565b01515f1960f88460031b161c191690558a8080610a50565b838301518b556001909a019960209384019301610a11565b825f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f830160051c81019160208410610ae5575b601f0160051c01905b818110610ada575061088a565b5f8155600101610acd565b9091508190610ac4565b634e487b7160e01b5f52604160045260245ffd5b015190508780610824565b92505f80516020612d488339815191525f525f80516020612d88833981519152905f935b601f1984168510610b7f576001945083601f19811610610b67575b505050811b015f80516020612d4883398151915255610845565b01515f1960f88460031b161c19169055878080610b4d565b81810151835560209485019460019093019290910190610b32565b9091505f80516020612d488339815191525f52601f830160051c5f80516020612d88833981519152019060208410610c03575b90601f8493920160051c5f80516020612d8883398151915201905b818110610bf5575061080e565b5f8155849350600101610be8565b5f80516020612d888339815191529150610bcd565b60449060405190631e0bd6c160e31b825260043560048301526024820152fd5b68ffffffffffffffffff19831668010000000000000001178455610701565b60405163f92ee8a960e01b8152600490fd5b905015866106df565b303b1591506106d7565b604085901c60ff161591506106cd565b346102c4575f3660031901126102c457610cd1604051610cab816124d9565b60058152640352e302e360dc1b6020820152604051918291602083526020830190612593565b0390f35b346102c45760203660031901126102c4576001600160a01b03610cf6612471565b165f5260046020526101e060405f206001600160401b03604051610d19816124a2565b8254926001600160801b03841682528360801c602083015260018101546001600160801b0381166040840152838160801c16606084015263ffffffff8160c01c1660808401528060e01c60a08401526002820154906001600160801b03821660c08501528160801c60e085015260046003840154936001600160801b03851661010087015263ffffffff8560801c1661012087015263ffffffff8560a01c1661014087015263ffffffff8560c01c166101608701528460e01c6101808701520154938585166101a08201526101c0868660401c16910152604051956001600160801b038116875260801c60208701526001600160801b0381166040870152848160801c16606087015263ffffffff8160c01c16608087015260e01c60a08601526001600160801b03811660c086015260801c60e08501526001600160801b03811661010085015263ffffffff8160801c1661012085015263ffffffff8160a01c1661014085015263ffffffff8160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b6102003660031901126102c4576001600160401b036101a435166101a435036102c4576101e4356001600160401b0381116102c457610ef1903690600401612566565b90610efa61279d565b610f026127cc565b5f5480340361176b5750620f42406004351161174957620f42406024351161172757620f424060443511611705576361cf99806001600160401b036101a43516106116d757335f52600660205260405f2054806101c435036116b65750604051917ff418e5fde2935aec5659dcc0d3addca54c1096967fe1a5e81cbcfc2ef0e4529a60208401523360408401526004356060840152602435608084015260443560a084015260643560c084015260843560e084015260a43561010084015260c43561012084015260e4356101408401526101043561016084015261012435610180840152610144356101a0840152610164356101c0840152610184356101e08401526001600160401b036101a435166102008401526102206101c435818501528352826102408101106001600160401b0361024085011117610aef5761108861108e9261108085610240611097970160405260208151910120611063612b43565b6042916040519161190160f01b8352600283015260228201522090565b923691612530565b90612a45565b90929192612a7f565b6002546001600160a01b039081169116036116a457335f52600460205260405f206001600160401b036004604051926110cf846124a2565b80546001600160801b038116855260801c602085015260018101546001600160801b0381166040860152838160801c16606086015263ffffffff8160c01c16608086015260e01c60a085015260028101546001600160801b03811660c086015260801c60e085015260038101546001600160801b03811661010086015263ffffffff8160801c1661012086015263ffffffff8160a01c1661014086015263ffffffff8160c01c1661016086015260e01c61018085015201548181166101a084015260401c16806101c0830152806001600160401b036101a4351611156116765750600154908115158061165f575b61161d575b50506001600160401b036101a4351642106115fd576111ed6001600160401b036101a4351642612677565b600354908181116115e057604051611204816124a2565b6001600160801b036004351681526001600160801b036024351660208201526001600160801b036044351660408201526001600160401b0360643516606082015263ffffffff60843516608082015263ffffffff60a4351660a08201526001600160801b0360c4351660c08201526001600160801b0360e4351660e08201526001600160801b03610104351661010082015263ffffffff610124351661012082015263ffffffff610144351661014082015263ffffffff610164351661016082015263ffffffff61018435166101808201526001600160401b0342166101a08201526001600160401b036101a435166101c0820152335f526004602052600460405f206001600160801b038351166001600160801b031982541617815561134d6001600160801b0360208501511682906001600160801b0382549181199060801b169116179055565b6040830151606084015160808086015160a087015160e01b6001600160e01b0319166001600160801b039094169290911b67ffffffffffffffff60801b169190911763ffffffff60c01b60c09290921b919091161717600182015560c083015160e084015160801b6fffffffffffffffffffffffffffffffff19166001600160801b03919091161760028201556101008301516003820180546101208601516101408701516101608801516001600160e01b03199093166001600160801b03959095169490941760809190911b63ffffffff60801b161760a09390931b63ffffffff60a01b169290921760c09290921b63ffffffff60c01b169190911790556101808301516003820180546001600160e01b031660e09290921b6001600160e01b03191691909117905501906001600160401b036101a0820151166fffffffffffffffff00000000000000006101c0845493015160401b16916001600160801b031916171790556040516114c081612487565b6001600160801b03600435168152602081016001600160401b03421681526115466001600160401b036040840192816101a435168452335f5260056020526001600160801b0360405f209551166001600160801b0319865416178555511683908154906001600160401b0360801b9060801b16906001600160401b0360801b1916179055565b5181546001600160c01b031660c09190911b6001600160c01b031916179055600660205260405f2080546115799061276f565b90556040517f893ee2884748c042330e2dba3ef220312d770a54d6d902d1c7612d9b434ab0a73391806115c14234600435846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255602060405160018152f35b60449160405191635ee1691b60e11b835260048301526024820152fd5b604460035460405190635ee1691b60e11b82525f60048301526024820152fd5b6001600160401b036101a06116359201511642612677565b90808210156111c25760249161164a91612677565b604051906365a85b4760e01b82526004820152fd5b506001600160401b036101a08201511615156111bd565b604051634ef2701560e01b81526001600160401b036101a43581166004830152919091166024820152604490fd5b604051632057875960e21b8152600490fd5b604490604051906306427aeb60e01b82526101c43560048301526024820152fd5b6040516331b3a51360e01b81526101a4356001600160401b031660048201526361cf99806024820152604490fd5b604051635467da8d60e11b8152604480356004830152620f4240602483015290fd5b6044604051635467da8d60e11b81526024356004820152620f42406024820152fd5b6044604051635467da8d60e11b81526004356004820152620f42406024820152fd5b60449060405190631e0bd6c160e31b82523460048301526024820152fd5b346102c4575f3660031901126102c4575f80516020612d68833981519152546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c4577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005415806118ec575b156118af576118036128c4565b61180b612986565b6040516020808201928284106001600160401b03851117610aef57916020611864859461185697966040525f8452604051978897600f60f81b895260e0858a015260e0890190612593565b908782036040890152612593565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061189857505050500390f35b835185528695509381019392810192600101611889565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10154156117f6565b346102c4575f3660031901126102c45761192d61271a565b005b346102c45760203660031901126102c4576001600160a01b03611950612471565b165f526006602052602060405f2054604051908152f35b346102c4575f3660031901126102c4575f80516020612de883398151915254336001600160a01b03909116036119a05761192d33612821565b60405163118cdaa760e01b8152336004820152602490fd5b346102c4575f3660031901126102c45760206040516102588152f35b346102c4575f3660031901126102c4576119ec61277d565b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d68833981519152805491821690555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c457611a7f61277d565b611a876127f6565b611a8f61279d565b8015610592577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695602047611ac48115156125d1565b611add5f80808085895af1611ad761260a565b50612639565b604051908152a260015f80516020612dc883398151915255005b346102c4575f3660031901126102c457602060ff5f80516020612da883398151915254166040519015158152f35b60803660031901126102c457602460043581356001600160401b03808216908183036102c45760448035956064358381116102c457611b68903690600401612566565b90611b7161279d565b611b796127cc565b5f54803403611e925750620f4240808911611e7657506361cf9980808710611e5a5750335f5260209860068a5260405f2054808203611e3e57509161108861108e926110808b8d611c1c97604051918201927fd0a0509035718ad455d593d20a83743ce5d6920842ee8cb1f4d76d7197a7bcb8845233604084015260608301528c608083015260a082015260a08152611c11816124be565b519020611063612b43565b6002546001600160a01b039081169116036116a457335f526005875260405f20946040805196611c4b88612487565b54916001600160801b039788841681528a810193878160801c16855260c01c928391015281871115611e15575050600154908482151580611e09575b611de5575b505050834210611dc957611ca08442612677565b9060035490818311611db15750505050611d1d9060405193611cc185612487565b85811685524282168786019081526040808701958652335f90815260058a522095518654915167ffffffffffffffff60801b1991909316166001600160c01b031990911617911660801b67ffffffffffffffff60801b16178355565b5181546001600160c01b031660c09190911b6001600160c01b0319161790556006825260405f208054611d4f9061276f565b90556040517fd1ab2b2d603dc80565da0286deeb7d3699341e28d8234689428dbe9b7d58c8ac339180611d95423487846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255604051908152f35b60405192635ee1691b60e11b84526004840152820152fd5b600354604051635ee1691b60e11b81525f600482015291820152fd5b611df191511642612677565b90808210611dff5784611c8c565b9061164a91612677565b50808251161515611c87565b604051634ef2701560e01b81526001600160401b03918216600482015291166024820152604490fd5b85925084604051926306427aeb60e01b84526004840152820152fd5b86859185604051926331b3a51360e01b84526004840152820152fd5b8885918560405192635467da8d60e11b84526004840152820152fd5b604051631e0bd6c160e31b8152346004820152938401525050fd5b346102c4575f3660031901126102c4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611f175760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b60403660031901126102c457611f3d612471565b6024356001600160401b0381116102c457366023820112156102c457611f6d903690602481600401359101612530565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156120ff575b50611f1757611fb161277d565b8116906040516352d1902d60e01b8152602081600481865afa5f91816120cb575b50611ff057604051634c9c8ce360e01b815260048101849052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc929192908181036120b35750823b1561209a5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561208157505f8083602061192d95519101845af461207b61260a565b91612ce4565b9150503461208b57005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091506020813d6020116120f7575b816120e7602093836124f4565b810103126102c457519085611fd2565b3d91506120da565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141584611fa4565b346102c45760203660031901126102c457602061214e600435611063612b43565b604051908152f35b346102c4575f3660031901126102c4576020600154604051908152f35b346102c4575f3660031901126102c45761218b61277d565b6121936127f6565b5f80516020612da883398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b346102c4575f3660031901126102c4576020600354604051908152f35b346102c45760203660031901126102c4576040612215612210612471565b612698565b825191151582526020820152f35b346102c45760203660031901126102c45760043561223f61277d565b7f0000000000000000000000000000000000000000000000000000000000000000808211612297577f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76602083805f55604051908152a1005b604051631e0bd6c160e31b815260048101929092526024820152604490fd5b346102c4575f3660031901126102c4576020604051620f42408152f35b346102c4575f3660031901126102c45760205f54604051908152f35b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c45761231d61277d565b61232561279d565b8015610592577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364602047611ac48115156125d1565b346102c45760203660031901126102c45760043561237661277d565b801515806123ed575b156123b5576020817fed1b8a3acdd1de20e69e80caa4b3762f856b4e74e0fad35189af650e20c3085a92600355604051908152a1005b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69644d617853696741676560801b6044820152606490fd5b506201518081111561237f565b346102c45760203660031901126102c45760043561241661277d565b62015180808211612452577fad8a71533bfa097e1676af0fbe86477cb4b1a4c3456cc493a1253ae5d9b7cf2d60208380600155604051908152a1005b6040516306115faf60e11b815260048101929092526024820152604490fd5b600435906001600160a01b03821682036102c457565b606081019081106001600160401b03821117610aef57604052565b6101e081019081106001600160401b03821117610aef57604052565b60c081019081106001600160401b03821117610aef57604052565b604081019081106001600160401b03821117610aef57604052565b90601f801991011681019081106001600160401b03821117610aef57604052565b6001600160401b038111610aef57601f01601f191660200190565b92919261253c82612515565b9161254a60405193846124f4565b8294818452818301116102c4578281602093845f960137010152565b9181601f840112156102c4578235916001600160401b0383116102c457602083818601950101116102c457565b91908251928382525f5b8481106125bd575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161259d565b156125d857565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b3d15612634573d9061261b82612515565b9161262960405193846124f4565b82523d5f602084013e565b606090565b1561264057565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b9190820391821161268457565b634e487b7160e01b5f52601160045260245ffd5b6001549081156127115760018060a01b03165f52600560205260405f20604051906126c282612487565b54906001600160801b038216815260406001600160401b038360801c169283602084015260c01c9101528015612711576126fc9042612677565b818110156127115761270d91612677565b5f91565b50506001905f90565b61272261277d565b61272a6127cc565b5f80516020612da8833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1565b5f1981146126845760010190565b5f80516020612d68833981519152546001600160a01b031633036119a057565b5f80516020612dc883398151915260028154146127ba5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff5f80516020612da883398151915254166127e457565b60405163d93c066560e01b8152600490fd5b60ff5f80516020612da883398151915254161561280f57565b604051638dfc202b60e01b8152600490fd5b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d6883398151915280549182166001600160a01b0393841690811790915591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600182811c921680156128ba575b60208310146128a657565b634e487b7160e01b5f52602260045260245ffd5b91607f169161289b565b604051905f825f80516020612d48833981519152918254926128e58461288c565b808452936020916001918281169081156129605750600114612913575b505050612911925003836124f4565b565b5f9081525f80516020612d888339815191529590935091905b82841061294857506129119450505081016020015f8080612902565b8554888501830152948501948794509281019261292c565b925050506020925061291194915060ff191682840152151560051b8201015f8080612902565b604051905f827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103918254926129ba8461288c565b8084529360209160019182811690811561296057506001146129e557505050612911925003836124f4565b5f9081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410612a2d57506129119450505081016020015f8080612902565b85548885018301529485019487945092810192612a11565b8151919060418303612a7557612a6e9250602082015190606060408401519301515f1a90612ba8565b9192909190565b50505f9160029190565b6004811015612aee5780612a91575050565b60018103612aab5760405163f645eedf60e01b8152600490fd5b60028103612acc5760405163fce698f760e01b815260048101839052602490fd5b600314612ad65750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612b3157565b604051631afcd79f60e31b8152600490fd5b612b4b612c35565b612b53612c9f565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152612ba2816124be565b51902090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612c2a579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612c1f575f516001600160a01b03811615612c1557905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b612c3d6128c4565b8051908115612c4d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015612c7a5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b612ca7612986565b8051908115612cb7576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612c7a5790565b90612d0b5750805115612cf957805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612d3e575b612d1c575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612d1456fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930042ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57dcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00a2646970667358221220c9e418977726284d1ff300ba9f262ea3ccb7ef8e2fd1432a9157447ed4773c0b64736f6c63430008170033a26469706673582212208cda9778543ae1babd57f6ae2db5e1cc7962dd2396bdb6db19e0cae2e2b9387b64736f6c63430008170033",
                "sourceMap": "362:1589:49:-:0;;;;;;;;;;3166:4:3;362:1589:49;;;3166:4:3;362:1589:49;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "6080604081815260049182361015610015575f80fd5b5f925f3560e01c918263c04062261461006157505063f8ccbf4714610038575f80fd5b3461005d578160031936011261005d5760209060ff600c5460101c1690519015158152f35b5080fd5b83859134610560575f3660031901126105605763c1978d1f60e01b81526024936020918282820152600b868201526a505249564154455f4b455960a81b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d8382606481845afa9182156105d2575f926105a3575b50845163350d56bf60e01b8152838101859052600d888201526c50524f58595f4144445245535360981b6044820152918483606481855afa928315610556575f93610564575b50813b156105605785519063ce817d4760e01b8252848201525f81898183865af1801561055657610543575b50845191612fb89283810167ffffffffffffffff948282108683111761053157828a9b9a9392899261073a833966038d7ea4c68000815203019082f092831561052557803b1561005d57818091878a5180948193633b756e9b60e11b83525af1801561051b57610503575b505061024561026f9261020188516101c281610604565b602981527f4e657720696d706c656d656e746174696f6e206465706c6f7965642073756363898201526865737366756c6c792160b81b8a82015261069c565b87519061020d82610620565b601b82527f4e657720696d706c656d656e746174696f6e20616464726573733a0000000000888301526001600160a01b0316906106ea565b855161025081610620565b600e81526d283937bc3c9030b2323932b9b99d60911b868201526106ea565b6102b9845161027d81610604565b602681527f0a546f20636f6d706c6574652074686520757067726164652c20796f75206e65858201526532b2103a379d60d11b8682015261069c565b61030b84516102c781610604565b602e81527f312e2043616c6c2075706772616465546f416e6443616c6c206f6e2074686520858201526d1c1c9bde1e4818dbdb9d1c9858dd60921b8682015261069c565b83519160808301918211838310176104f15750636561647960e01b926103be85937f342e204465706c6f7920746f2042617365204d61696e6e6574207768656e2072936104ee989752604e81527f322e204f722075736520612070726f7065722075706772616465206d65636861838201527f6e69736d206c696b65204f70656e5a657070656c696e27732075706772616465858201526d61626c6520636f6e74726163747360901b606082015261069c565b6103e983516103cc81610620565b600c81526b052732bc3a1039ba32b8399d60a11b8382015261069c565b61044a83516103f781610604565b603981527f312e2056657269667920746865206e657720696d706c656d656e746174696f6e838201527f20636f6e7472616374206f6e2042617365205365706f6c6961000000000000008582015261069c565b610499835161045881610604565b602b81527f322e20546573742074686520757067726164656420636f6e7472616374206675838201526a6e6374696f6e616c69747960a81b8582015261069c565b6104d583516104a781610620565b601f81527f332e20456e7375726520616c6c206461746120697320707265736572766564008382015261069c565b8251946104e186610604565b855284015282015261069c565b80f35b60418691634e487b7160e01b5f52525ffd5b61050c906105dc565b6105175787896101ab565b8780fd5b88513d84823e3d90fd5b508651903d90823e3d90fd5b634e487b7160e01b8a52604187528a8afd5b61054e9196506105dc565b5f9487610140565b86513d5f823e3d90fd5b5f80fd5b9092508481813d831161059c575b61057c818361063c565b8101031261056057516001600160a01b0381168103610560579188610114565b503d610572565b9091508381813d83116105cb575b6105bb818361063c565b81010312610560575190876100ce565b503d6105b1565b85513d5f823e3d90fd5b67ffffffffffffffff81116105f057604052565b634e487b7160e01b5f52604160045260245ffd5b6060810190811067ffffffffffffffff8211176105f057604052565b6040810190811067ffffffffffffffff8211176105f057604052565b90601f8019910116810190811067ffffffffffffffff8211176105f057604052565b91908251928382525f5b848110610688575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201610668565b5f80916040516106d7816106c9602082019463104c13eb60e21b865260206024840152604483019061065e565b03601f19810183528261063c565b51906a636f6e736f6c652e6c6f675afa50565b5f919082916106d7604051809261071a602083019563319af33360e01b875260406024850152606484019061065e565b6001600160a01b0391909116604483015203601f19810183528261063c56fe60c0346200016257601f62002fb838819003918201601f19168301926001600160401b0392909183851183861017620001665781602092849260409788528339810103126200016257513060805280156200011e5760a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff82851c166200010d578080831603620000c8575b8351612e3d90816200017b8239608051818181611ebf0152611f78015260a05181818161063f0152818161071001526122410152f35b6001600160401b0319909116811790915581519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f808062000092565b835163f92ee8a960e01b8152600490fd5b825162461bcd60e51b815260206004820152601560248201527f4d61784665652063616e6e6f74206265207a65726f00000000000000000000006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610085575b36156100475760405162461bcd60e51b815260206004820152600b60248201526a4e6f2066616c6c6261636b60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275111a5c9958dd08115512081b9bdd08185b1b1bddd95960521b6044820152606490fd5b5f3560e01c806310cb729f146123fa578063110b32851461235a578063164e68de146122ef5780631904863c146122d357806327ff6223146122b6578063319a2cbb1461222357806333917ca9146121f257806333b3e099146121d55780633f4ba83a146121735780633fb19a53146121565780634980f2881461212d5780634f1ef28614611f2957806351858e271461191557806352d1902d14611ead5780635836d17b14611b255780635c975abb14611af75780636ff1c9bc14611a51578063715018a6146119d4578063738fc2f9146119b857806379ba5097146119675780637ecebe001461192f5780638456cb591461191557806384b0196e146117bd5780638da5cb5b146117895780639b50c5f914610eae578063a23195ed14610cd5578063ad3cb1cc14610c8c578063b4988fd014610662578063bc063e1a14610628578063c771909c14610600578063c8910913146105a4578063d279b0ca1461051c578063d47875d0146104ac578063d91a9458146103bb578063e30c397814610387578063ee4eb93d14610369578063f2fde38b146102e5578063fede6114146102c85763ffc9896b0361000e57346102c45760203660031901126102c45760806001600160a01b03610259612471565b16805f52600560205260405f2090604080519261027584612487565b54916001600160801b038316938481526001600160401b0384871c169384602083015260c01c92839101525f52600660205260405f205491604051938452602084015260408301526060820152f35b5f80fd5b346102c4575f3660031901126102c4576020604051620151808152f35b346102c45760203660031901126102c4576102fe612471565b61030661277d565b5f80516020612de883398151915280546001600160a01b0319166001600160a01b039283169081179091555f80516020612d68833981519152549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b346102c4575f3660031901126102c45760206040516361cf99808152f35b346102c4575f3660031901126102c4575f80516020612de8833981519152546040516001600160a01b039091168152602090f35b346102c45760203660031901126102c4576001600160a01b036103dc612471565b165f5260046020526101e060405f208054906001600160801b03906001810154906001600160401b039263ffffffff906002830154600460038501549401549460405197838116895260801c60208901528281166040890152868160801c166060890152838160c01c16608089015260e01c60a088015281811660c088015260801c60e08701528216610100860152808260801c16610120860152808260a01c166101408601528160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b346102c45760203660031901126102c4576001600160a01b036104cd612471565b165f5260056020526040805f208151906104e682612487565b546001600160801b03811691828152836001600160401b038360801c169283602084015260c01c91015282519182526020820152f35b346102c45760203660031901126102c457610535612471565b61053d61277d565b6001600160a01b03168015610592576020817f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b60405163d92e233d60e01b8152600490fd5b346102c45760203660031901126102c4576001600160a01b036105c5612471565b165f526005602052606060405f2054604051906001600160801b03811682526001600160401b038160801c16602083015260c01c6040820152f35b346102c4575f3660031901126102c4576002546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c45760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102c45760603660031901126102c4576001600160a01b0360243581811681036102c457816044351680604435036102c4577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00918254916001600160401b03831680159081610c7c575b6001149081610c72575b159081610c69575b50610c575760016001600160401b0319841617845560ff8360401c1615610c38575b848216156105925715610592577f00000000000000000000000000000000000000000000000000000000000000008060043511610c185750610741612b02565b610749612b02565b610751612b02565b5f80516020612da8833981519152805460ff1916905561076f612b02565b610777612b02565b60015f80516020612dc88339815191525560405193610795856124d9565b600e85526d42617365426164676553636f726560901b6020860152604051946107bd866124d9565b60018652603160f81b60208701526107d3612b02565b6107db612b02565b8051906001600160401b038211610aef5781906108055f80516020612d488339815191525461288c565b601f8111610b9a575b50602090601f8311600114610b0e575f92610b03575b50508160011b915f199060031b1c1916175f80516020612d48833981519152555b84516001600160401b038111610aef577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10390610881825461288c565b601f8111610a8d575b506020601f82116001146109e4579181602094927f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73969460ff999a5f926109d9575b50508160011b915f199060031b1c19161790555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015561092e612b02565b6004355f55600280546001600160a01b031916838316179055601e60015561025860035561095d604435612821565b60405191168152a17f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7660206040516004358152a160401c161561099c57005b68ff00000000000000001981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508a806108cc565b601f19821697835f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75985f5b818110610a7557509260ff98997f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73979593600193836020999710610a5d575b505050811b0190556108e0565b01515f1960f88460031b161c191690558a8080610a50565b838301518b556001909a019960209384019301610a11565b825f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f830160051c81019160208410610ae5575b601f0160051c01905b818110610ada575061088a565b5f8155600101610acd565b9091508190610ac4565b634e487b7160e01b5f52604160045260245ffd5b015190508780610824565b92505f80516020612d488339815191525f525f80516020612d88833981519152905f935b601f1984168510610b7f576001945083601f19811610610b67575b505050811b015f80516020612d4883398151915255610845565b01515f1960f88460031b161c19169055878080610b4d565b81810151835560209485019460019093019290910190610b32565b9091505f80516020612d488339815191525f52601f830160051c5f80516020612d88833981519152019060208410610c03575b90601f8493920160051c5f80516020612d8883398151915201905b818110610bf5575061080e565b5f8155849350600101610be8565b5f80516020612d888339815191529150610bcd565b60449060405190631e0bd6c160e31b825260043560048301526024820152fd5b68ffffffffffffffffff19831668010000000000000001178455610701565b60405163f92ee8a960e01b8152600490fd5b905015866106df565b303b1591506106d7565b604085901c60ff161591506106cd565b346102c4575f3660031901126102c457610cd1604051610cab816124d9565b60058152640352e302e360dc1b6020820152604051918291602083526020830190612593565b0390f35b346102c45760203660031901126102c4576001600160a01b03610cf6612471565b165f5260046020526101e060405f206001600160401b03604051610d19816124a2565b8254926001600160801b03841682528360801c602083015260018101546001600160801b0381166040840152838160801c16606084015263ffffffff8160c01c1660808401528060e01c60a08401526002820154906001600160801b03821660c08501528160801c60e085015260046003840154936001600160801b03851661010087015263ffffffff8560801c1661012087015263ffffffff8560a01c1661014087015263ffffffff8560c01c166101608701528460e01c6101808701520154938585166101a08201526101c0868660401c16910152604051956001600160801b038116875260801c60208701526001600160801b0381166040870152848160801c16606087015263ffffffff8160c01c16608087015260e01c60a08601526001600160801b03811660c086015260801c60e08501526001600160801b03811661010085015263ffffffff8160801c1661012085015263ffffffff8160a01c1661014085015263ffffffff8160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b6102003660031901126102c4576001600160401b036101a435166101a435036102c4576101e4356001600160401b0381116102c457610ef1903690600401612566565b90610efa61279d565b610f026127cc565b5f5480340361176b5750620f42406004351161174957620f42406024351161172757620f424060443511611705576361cf99806001600160401b036101a43516106116d757335f52600660205260405f2054806101c435036116b65750604051917ff418e5fde2935aec5659dcc0d3addca54c1096967fe1a5e81cbcfc2ef0e4529a60208401523360408401526004356060840152602435608084015260443560a084015260643560c084015260843560e084015260a43561010084015260c43561012084015260e4356101408401526101043561016084015261012435610180840152610144356101a0840152610164356101c0840152610184356101e08401526001600160401b036101a435166102008401526102206101c435818501528352826102408101106001600160401b0361024085011117610aef5761108861108e9261108085610240611097970160405260208151910120611063612b43565b6042916040519161190160f01b8352600283015260228201522090565b923691612530565b90612a45565b90929192612a7f565b6002546001600160a01b039081169116036116a457335f52600460205260405f206001600160401b036004604051926110cf846124a2565b80546001600160801b038116855260801c602085015260018101546001600160801b0381166040860152838160801c16606086015263ffffffff8160c01c16608086015260e01c60a085015260028101546001600160801b03811660c086015260801c60e085015260038101546001600160801b03811661010086015263ffffffff8160801c1661012086015263ffffffff8160a01c1661014086015263ffffffff8160c01c1661016086015260e01c61018085015201548181166101a084015260401c16806101c0830152806001600160401b036101a4351611156116765750600154908115158061165f575b61161d575b50506001600160401b036101a4351642106115fd576111ed6001600160401b036101a4351642612677565b600354908181116115e057604051611204816124a2565b6001600160801b036004351681526001600160801b036024351660208201526001600160801b036044351660408201526001600160401b0360643516606082015263ffffffff60843516608082015263ffffffff60a4351660a08201526001600160801b0360c4351660c08201526001600160801b0360e4351660e08201526001600160801b03610104351661010082015263ffffffff610124351661012082015263ffffffff610144351661014082015263ffffffff610164351661016082015263ffffffff61018435166101808201526001600160401b0342166101a08201526001600160401b036101a435166101c0820152335f526004602052600460405f206001600160801b038351166001600160801b031982541617815561134d6001600160801b0360208501511682906001600160801b0382549181199060801b169116179055565b6040830151606084015160808086015160a087015160e01b6001600160e01b0319166001600160801b039094169290911b67ffffffffffffffff60801b169190911763ffffffff60c01b60c09290921b919091161717600182015560c083015160e084015160801b6fffffffffffffffffffffffffffffffff19166001600160801b03919091161760028201556101008301516003820180546101208601516101408701516101608801516001600160e01b03199093166001600160801b03959095169490941760809190911b63ffffffff60801b161760a09390931b63ffffffff60a01b169290921760c09290921b63ffffffff60c01b169190911790556101808301516003820180546001600160e01b031660e09290921b6001600160e01b03191691909117905501906001600160401b036101a0820151166fffffffffffffffff00000000000000006101c0845493015160401b16916001600160801b031916171790556040516114c081612487565b6001600160801b03600435168152602081016001600160401b03421681526115466001600160401b036040840192816101a435168452335f5260056020526001600160801b0360405f209551166001600160801b0319865416178555511683908154906001600160401b0360801b9060801b16906001600160401b0360801b1916179055565b5181546001600160c01b031660c09190911b6001600160c01b031916179055600660205260405f2080546115799061276f565b90556040517f893ee2884748c042330e2dba3ef220312d770a54d6d902d1c7612d9b434ab0a73391806115c14234600435846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255602060405160018152f35b60449160405191635ee1691b60e11b835260048301526024820152fd5b604460035460405190635ee1691b60e11b82525f60048301526024820152fd5b6001600160401b036101a06116359201511642612677565b90808210156111c25760249161164a91612677565b604051906365a85b4760e01b82526004820152fd5b506001600160401b036101a08201511615156111bd565b604051634ef2701560e01b81526001600160401b036101a43581166004830152919091166024820152604490fd5b604051632057875960e21b8152600490fd5b604490604051906306427aeb60e01b82526101c43560048301526024820152fd5b6040516331b3a51360e01b81526101a4356001600160401b031660048201526361cf99806024820152604490fd5b604051635467da8d60e11b8152604480356004830152620f4240602483015290fd5b6044604051635467da8d60e11b81526024356004820152620f42406024820152fd5b6044604051635467da8d60e11b81526004356004820152620f42406024820152fd5b60449060405190631e0bd6c160e31b82523460048301526024820152fd5b346102c4575f3660031901126102c4575f80516020612d68833981519152546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c4577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005415806118ec575b156118af576118036128c4565b61180b612986565b6040516020808201928284106001600160401b03851117610aef57916020611864859461185697966040525f8452604051978897600f60f81b895260e0858a015260e0890190612593565b908782036040890152612593565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061189857505050500390f35b835185528695509381019392810192600101611889565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10154156117f6565b346102c4575f3660031901126102c45761192d61271a565b005b346102c45760203660031901126102c4576001600160a01b03611950612471565b165f526006602052602060405f2054604051908152f35b346102c4575f3660031901126102c4575f80516020612de883398151915254336001600160a01b03909116036119a05761192d33612821565b60405163118cdaa760e01b8152336004820152602490fd5b346102c4575f3660031901126102c45760206040516102588152f35b346102c4575f3660031901126102c4576119ec61277d565b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d68833981519152805491821690555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c457611a7f61277d565b611a876127f6565b611a8f61279d565b8015610592577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695602047611ac48115156125d1565b611add5f80808085895af1611ad761260a565b50612639565b604051908152a260015f80516020612dc883398151915255005b346102c4575f3660031901126102c457602060ff5f80516020612da883398151915254166040519015158152f35b60803660031901126102c457602460043581356001600160401b03808216908183036102c45760448035956064358381116102c457611b68903690600401612566565b90611b7161279d565b611b796127cc565b5f54803403611e925750620f4240808911611e7657506361cf9980808710611e5a5750335f5260209860068a5260405f2054808203611e3e57509161108861108e926110808b8d611c1c97604051918201927fd0a0509035718ad455d593d20a83743ce5d6920842ee8cb1f4d76d7197a7bcb8845233604084015260608301528c608083015260a082015260a08152611c11816124be565b519020611063612b43565b6002546001600160a01b039081169116036116a457335f526005875260405f20946040805196611c4b88612487565b54916001600160801b039788841681528a810193878160801c16855260c01c928391015281871115611e15575050600154908482151580611e09575b611de5575b505050834210611dc957611ca08442612677565b9060035490818311611db15750505050611d1d9060405193611cc185612487565b85811685524282168786019081526040808701958652335f90815260058a522095518654915167ffffffffffffffff60801b1991909316166001600160c01b031990911617911660801b67ffffffffffffffff60801b16178355565b5181546001600160c01b031660c09190911b6001600160c01b0319161790556006825260405f208054611d4f9061276f565b90556040517fd1ab2b2d603dc80565da0286deeb7d3699341e28d8234689428dbe9b7d58c8ac339180611d95423487846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255604051908152f35b60405192635ee1691b60e11b84526004840152820152fd5b600354604051635ee1691b60e11b81525f600482015291820152fd5b611df191511642612677565b90808210611dff5784611c8c565b9061164a91612677565b50808251161515611c87565b604051634ef2701560e01b81526001600160401b03918216600482015291166024820152604490fd5b85925084604051926306427aeb60e01b84526004840152820152fd5b86859185604051926331b3a51360e01b84526004840152820152fd5b8885918560405192635467da8d60e11b84526004840152820152fd5b604051631e0bd6c160e31b8152346004820152938401525050fd5b346102c4575f3660031901126102c4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611f175760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b60403660031901126102c457611f3d612471565b6024356001600160401b0381116102c457366023820112156102c457611f6d903690602481600401359101612530565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156120ff575b50611f1757611fb161277d565b8116906040516352d1902d60e01b8152602081600481865afa5f91816120cb575b50611ff057604051634c9c8ce360e01b815260048101849052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc929192908181036120b35750823b1561209a5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561208157505f8083602061192d95519101845af461207b61260a565b91612ce4565b9150503461208b57005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091506020813d6020116120f7575b816120e7602093836124f4565b810103126102c457519085611fd2565b3d91506120da565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141584611fa4565b346102c45760203660031901126102c457602061214e600435611063612b43565b604051908152f35b346102c4575f3660031901126102c4576020600154604051908152f35b346102c4575f3660031901126102c45761218b61277d565b6121936127f6565b5f80516020612da883398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b346102c4575f3660031901126102c4576020600354604051908152f35b346102c45760203660031901126102c4576040612215612210612471565b612698565b825191151582526020820152f35b346102c45760203660031901126102c45760043561223f61277d565b7f0000000000000000000000000000000000000000000000000000000000000000808211612297577f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76602083805f55604051908152a1005b604051631e0bd6c160e31b815260048101929092526024820152604490fd5b346102c4575f3660031901126102c4576020604051620f42408152f35b346102c4575f3660031901126102c45760205f54604051908152f35b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c45761231d61277d565b61232561279d565b8015610592577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364602047611ac48115156125d1565b346102c45760203660031901126102c45760043561237661277d565b801515806123ed575b156123b5576020817fed1b8a3acdd1de20e69e80caa4b3762f856b4e74e0fad35189af650e20c3085a92600355604051908152a1005b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69644d617853696741676560801b6044820152606490fd5b506201518081111561237f565b346102c45760203660031901126102c45760043561241661277d565b62015180808211612452577fad8a71533bfa097e1676af0fbe86477cb4b1a4c3456cc493a1253ae5d9b7cf2d60208380600155604051908152a1005b6040516306115faf60e11b815260048101929092526024820152604490fd5b600435906001600160a01b03821682036102c457565b606081019081106001600160401b03821117610aef57604052565b6101e081019081106001600160401b03821117610aef57604052565b60c081019081106001600160401b03821117610aef57604052565b604081019081106001600160401b03821117610aef57604052565b90601f801991011681019081106001600160401b03821117610aef57604052565b6001600160401b038111610aef57601f01601f191660200190565b92919261253c82612515565b9161254a60405193846124f4565b8294818452818301116102c4578281602093845f960137010152565b9181601f840112156102c4578235916001600160401b0383116102c457602083818601950101116102c457565b91908251928382525f5b8481106125bd575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161259d565b156125d857565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b3d15612634573d9061261b82612515565b9161262960405193846124f4565b82523d5f602084013e565b606090565b1561264057565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b9190820391821161268457565b634e487b7160e01b5f52601160045260245ffd5b6001549081156127115760018060a01b03165f52600560205260405f20604051906126c282612487565b54906001600160801b038216815260406001600160401b038360801c169283602084015260c01c9101528015612711576126fc9042612677565b818110156127115761270d91612677565b5f91565b50506001905f90565b61272261277d565b61272a6127cc565b5f80516020612da8833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1565b5f1981146126845760010190565b5f80516020612d68833981519152546001600160a01b031633036119a057565b5f80516020612dc883398151915260028154146127ba5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff5f80516020612da883398151915254166127e457565b60405163d93c066560e01b8152600490fd5b60ff5f80516020612da883398151915254161561280f57565b604051638dfc202b60e01b8152600490fd5b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d6883398151915280549182166001600160a01b0393841690811790915591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600182811c921680156128ba575b60208310146128a657565b634e487b7160e01b5f52602260045260245ffd5b91607f169161289b565b604051905f825f80516020612d48833981519152918254926128e58461288c565b808452936020916001918281169081156129605750600114612913575b505050612911925003836124f4565b565b5f9081525f80516020612d888339815191529590935091905b82841061294857506129119450505081016020015f8080612902565b8554888501830152948501948794509281019261292c565b925050506020925061291194915060ff191682840152151560051b8201015f8080612902565b604051905f827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103918254926129ba8461288c565b8084529360209160019182811690811561296057506001146129e557505050612911925003836124f4565b5f9081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410612a2d57506129119450505081016020015f8080612902565b85548885018301529485019487945092810192612a11565b8151919060418303612a7557612a6e9250602082015190606060408401519301515f1a90612ba8565b9192909190565b50505f9160029190565b6004811015612aee5780612a91575050565b60018103612aab5760405163f645eedf60e01b8152600490fd5b60028103612acc5760405163fce698f760e01b815260048101839052602490fd5b600314612ad65750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612b3157565b604051631afcd79f60e31b8152600490fd5b612b4b612c35565b612b53612c9f565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152612ba2816124be565b51902090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612c2a579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612c1f575f516001600160a01b03811615612c1557905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b612c3d6128c4565b8051908115612c4d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015612c7a5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b612ca7612986565b8051908115612cb7576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612c7a5790565b90612d0b5750805115612cf957805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612d3e575b612d1c575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612d1456fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930042ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57dcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00a2646970667358221220c9e418977726284d1ff300ba9f262ea3ccb7ef8e2fd1432a9157447ed4773c0b64736f6c63430008170033a26469706673582212208cda9778543ae1babd57f6ae2db5e1cc7962dd2396bdb6db19e0cae2e2b9387b64736f6c63430008170033",
                "sourceMap": "362:1589:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:28:1;362:1589:49;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;362:1589:49;;;;1590:14:0;;;462:25:49;;1590:14:0;462:25:49;;;;;;;1590:14:0;;;;;;-1:-1:-1;;;1590:14:0;;;;362:1589:49;462:25;;1590:14:0;462:25:49;;;;;;;;;362:1589;462:25;;;362:1589;-1:-1:-1;362:1589:49;;-1:-1:-1;;;598:30:49;;;;;1590:14:0;;;;;;;;-1:-1:-1;;;1590:14:0;;;;362:1589:49;598:30;362:1589;1590:14:0;362:1589:49;598:30;;;;;;;;362:1589;598:30;;;362:1589;647:37;;;;;;362:1589;;1590:14:0;;;;647:37:49;;;;;1590:14:0;362:1589:49;647:37;;;;;;;;;;;;;362:1589;;;;790:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:11;1590:14:0;;790:42:49;;;;;;;;;;1114:18;;;;;362:1589;;;;;;1590:14:0;;;;;;;1114:18:49;;;;;;;;;;362:1589;;;1218:71;1299:44;362:1589;1151:57;362:1589;;1590:14:0;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1590:14:0;;;;1151:57:49;:::i;:::-;362:1589;;1590:14:0;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;362:1589:49;;1218:71;:::i;:::-;362:1589;;1590:14:0;;;:::i;:::-;;;;-1:-1:-1;;;1590:14:0;;;;1299:44:49;:::i;:::-;1353:55;362:1589;;1590:14:0;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1590:14:0;;;;1353:55:49;:::i;:::-;1418:62;362:1589;;1590:14:0;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1590:14:0;;;;1418:62:49;:::i;:::-;362:1589;;;1590:14:0;;;;;;;;;;;;;-1:-1:-1;;;1590:14:0;1490:94:49;1590:14:0;;;;1890:52:49;1590:14:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1590:14:0;;;;1490:94:49;:::i;:::-;1642:29;362:1589;;1590:14:0;;;:::i;:::-;;;;-1:-1:-1;;;1590:14:0;;;;1642:29:49;:::i;:::-;1681:73;362:1589;;1590:14:0;;;:::i;:::-;;;;;;;;;;;;;;1681:73:49;:::i;:::-;1764:59;362:1589;;1590:14:0;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1590:14:0;;;;1764:59:49;:::i;:::-;1833:47;362:1589;;1590:14:0;;;:::i;:::-;;;;;;;;;1833:47:49;:::i;:::-;362:1589;;1590:14:0;;;;:::i;:::-;;;;;;;;;1890:52:49;:::i;:::-;362:1589;;1590:14:0;;;;;;;362:1589:49;1590:14:0;;362:1589:49;1590:14:0;1114:18:49;;;;:::i;:::-;362:1589;;1114:18;;;;362:1589;;;;1114:18;362:1589;;1590:14:0;362:1589:49;;1590:14:0;;;;790:42:49;362:1589;;;1590:14:0;;;;;;;;790:42:49;-1:-1:-1;;;1590:14:0;;;;;;;;647:37:49;;;;;;:::i;:::-;362:1589;647:37;;;;;362:1589;;1590:14:0;362:1589:49;1590:14:0;;;;;647:37:49;362:1589;;;598:30;;;;;;;;;;;;;;;;;:::i;:::-;;;1590:14:0;;;;;-1:-1:-1;;;;;362:1589:49;;1590:14:0;;;;598:30:49;;;;;;;;;462:25;;;;;;;;;;;;;;;;;:::i;:::-;;;1590:14:0;;;;;462:25:49;;;;;;;;;;362:1589;;1590:14:0;362:1589:49;1590:14:0;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;362:1589:49;1590:14:0;;;;;;;;;;;362:1589:49;1590:14:0;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;362:1589:49:-;;;;;1590:14:0;;;;-1:-1:-1;362:1589:49;;;;;;;;;-1:-1:-1;1590:14:0;362:1589:49;;;;;;;1590:14:0;;;;;;362:1589:49;;;:::o;:::-;1590:14:0;362:1589:49;;;;;;;;;;;;;;;6114:121:15;762:159;6114:121;;362:1589:49;;6185:42:15;;362:1589:49;6185:42:15;;;;;;;;;;;;;362:1589:49;;;;;;:::i;:::-;6185:42:15;1590:14:0;;6185:42:15;;;;;;:::i;:::-;362:1589:49;762:159:15;131:42;762:159;;;6114:121::o;7621:145::-;762:159;7621:145;;;;7704:54;362:1589:49;;7704:54:15;;362:1589:49;7704:54:15;;;;;;;;;362:1589:49;7704:54:15;;;362:1589:49;;;;;;:::i;:::-;-1:-1:-1;;;;;362:1589:49;;;;;;;;7704:54:15;-1:-1:-1;;7704:54:15;;;;;;:::i",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_SCRIPT()": "f8ccbf47",
                "run()": "c0406226"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/src/Counter.sol": {
      "Counter": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "increment",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "number",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "setNumber",
                "inputs": [
                  {
                    "name": "newNumber",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"number\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNumber\",\"type\":\"uint256\"}],\"name\":\"setNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Counter.sol\":\"Counter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/Counter.sol\":{\"keccak256\":\"0x09277f949d59a9521708c870dc39c2c434ad8f86a5472efda6a732ef728c0053\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://94cd5258357da018bf911aeda60ed9f5b130dce27445669ee200313cd3389200\",\"dweb:/ipfs/QmNbEfWAqXCtfQpk6u7TpGa8sTHXFLpUz7uebz2FVbchSC\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 43478,
                  "contract": "src/Counter.sol:Counter",
                  "label": "number",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_uint256"
                }
              ],
              "types": {
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "608080604052346100155760d2908161001a8239f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c9081633fb5c1cb1460865781638381f58a14606f575063d09de08a146039575f80fd5b34606b575f366003190112606b575f545f1981146057576001015f55005b634e487b7160e01b5f52601160045260245ffd5b5f80fd5b34606b575f366003190112606b576020905f548152f35b34606b576020366003190112606b576004355f5500fea2646970667358221220e15aaae13de9c1d5b978b243fc64fef95771b6204bae0bce8741927550b3d6c964736f6c63430008170033",
                "sourceMap": "65:192:50:-:0;;;;;;;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "60808060405260043610156011575f80fd5b5f3560e01c9081633fb5c1cb1460865781638381f58a14606f575063d09de08a146039575f80fd5b34606b575f366003190112606b575f545f1981146057576001015f55005b634e487b7160e01b5f52601160045260245ffd5b5f80fd5b34606b575f366003190112606b576020905f548152f35b34606b576020366003190112606b576004355f5500fea2646970667358221220e15aaae13de9c1d5b978b243fc64fef95771b6204bae0bce8741927550b3d6c964736f6c63430008170033",
                "sourceMap": "65:192:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;65:192:50;;;;;;-1:-1:-1;;65:192:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;65:192:50;;;;;;;;;;;;;;;;;-1:-1:-1;;65:192:50;;;;;;;;",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "increment()": "d09de08a",
                "number()": "8381f58a",
                "setNumber(uint256)": "3fb5c1cb"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/src/ScoreCheckerUpgradeable.sol": {
      "ScoreCheckerUpgradeable": [
        {
          "contract": {
            "abi": [
              {
                "type": "constructor",
                "inputs": [
                  {
                    "name": "_maxFee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "fallback",
                "stateMutability": "payable"
              },
              {
                "type": "receive",
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "DEFAULT_MAX_SIG_AGE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "MAX_FEE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "MAX_INTERVAL",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "MAX_SCORE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "MIN_ISSUED_AT",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "UPGRADE_INTERFACE_VERSION",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "acceptOwnership",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "authorizedSigner",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "canSubmitScore",
                "inputs": [
                  {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "canSubmit",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "timeRemaining",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "checkFee",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "eip712Domain",
                "inputs": [],
                "outputs": [
                  {
                    "name": "fields",
                    "type": "bytes1",
                    "internalType": "bytes1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "version",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "verifyingContract",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "extensions",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "emergencyPause",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "emergencyWithdraw",
                "inputs": [
                  {
                    "name": "to",
                    "type": "address",
                    "internalType": "address payable"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "getScore",
                "inputs": [
                  {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "score",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "timestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getUserData",
                "inputs": [
                  {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "score",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "lastCheckTime",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "lastIssuedAt",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "nonce",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "initialize",
                "inputs": [
                  {
                    "name": "_checkFee",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "_signer",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "maxSigAge",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "minInterval",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "nonces",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "owner",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "pause",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "paused",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "pendingOwner",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "proxiableUUID",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "renounceOwnership",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setAuthorizedSigner",
                "inputs": [
                  {
                    "name": "_signer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setCheckFee",
                "inputs": [
                  {
                    "name": "_newFee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setMaxSigAge",
                "inputs": [
                  {
                    "name": "_seconds",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setMinInterval",
                "inputs": [
                  {
                    "name": "_seconds",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "submitScore",
                "inputs": [
                  {
                    "name": "score",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "issuedAt",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "nonce",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "signature",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "transferOwnership",
                "inputs": [
                  {
                    "name": "newOwner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "unpause",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "upgradeToAndCall",
                "inputs": [
                  {
                    "name": "newImplementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "userData",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "score",
                    "type": "uint128",
                    "internalType": "uint128"
                  },
                  {
                    "name": "lastCheckTime",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "lastIssuedAt",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "withdrawFees",
                "inputs": [
                  {
                    "name": "to",
                    "type": "address",
                    "internalType": "address payable"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "event",
                "name": "EIP712DomainChanged",
                "inputs": [],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "EmergencyWithdraw",
                "inputs": [
                  {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "FeeUpdated",
                "inputs": [
                  {
                    "name": "newFee",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Initialized",
                "inputs": [
                  {
                    "name": "version",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "MaxSigAgeUpdated",
                "inputs": [
                  {
                    "name": "seconds_",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "MinIntervalUpdated",
                "inputs": [
                  {
                    "name": "seconds_",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "OwnershipTransferStarted",
                "inputs": [
                  {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "OwnershipTransferred",
                "inputs": [
                  {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Paused",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "ScoreChecked",
                "inputs": [
                  {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "score",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "fee",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "timestamp",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "SignerUpdated",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Unpaused",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Upgraded",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Withdraw",
                "inputs": [
                  {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "error",
                "name": "AddressEmptyCode",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ECDSAInvalidSignature",
                "inputs": []
              },
              {
                "type": "error",
                "name": "ECDSAInvalidSignatureLength",
                "inputs": [
                  {
                    "name": "length",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ECDSAInvalidSignatureS",
                "inputs": [
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ERC1967InvalidImplementation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ERC1967NonPayable",
                "inputs": []
              },
              {
                "type": "error",
                "name": "EnforcedPause",
                "inputs": []
              },
              {
                "type": "error",
                "name": "ExpectedPause",
                "inputs": []
              },
              {
                "type": "error",
                "name": "FailedInnerCall",
                "inputs": []
              },
              {
                "type": "error",
                "name": "IntervalTooLong",
                "inputs": [
                  {
                    "name": "provided",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maximum",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "InvalidFee",
                "inputs": [
                  {
                    "name": "provided",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "required_",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "InvalidInitialization",
                "inputs": []
              },
              {
                "type": "error",
                "name": "InvalidNonce",
                "inputs": [
                  {
                    "name": "provided",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "expected",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "InvalidSigner",
                "inputs": []
              },
              {
                "type": "error",
                "name": "IssuedAtTooOld",
                "inputs": [
                  {
                    "name": "provided",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "minimum",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "NonMonotonicIssuedAt",
                "inputs": [
                  {
                    "name": "provided",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "current",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "NotInitializing",
                "inputs": []
              },
              {
                "type": "error",
                "name": "OwnableInvalidOwner",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "OwnableUnauthorizedAccount",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ReentrancyGuardReentrantCall",
                "inputs": []
              },
              {
                "type": "error",
                "name": "ScoreTooHigh",
                "inputs": [
                  {
                    "name": "provided",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maximum",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "StaleSignature",
                "inputs": [
                  {
                    "name": "age",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxAge",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "TooFrequent",
                "inputs": [
                  {
                    "name": "timeRemaining",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "UUPSUnauthorizedCallContext",
                "inputs": []
              },
              {
                "type": "error",
                "name": "UUPSUnsupportedProxiableUUID",
                "inputs": [
                  {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ZeroAddress",
                "inputs": []
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"IntervalTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required_\",\"type\":\"uint256\"}],\"name\":\"InvalidFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"}],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"}],\"name\":\"IssuedAtTooOld\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"}],\"name\":\"NonMonotonicIssuedAt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"ScoreTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAge\",\"type\":\"uint256\"}],\"name\":\"StaleSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timeRemaining\",\"type\":\"uint256\"}],\"name\":\"TooFrequent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seconds_\",\"type\":\"uint256\"}],\"name\":\"MaxSigAgeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seconds_\",\"type\":\"uint256\"}],\"name\":\"MinIntervalUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ScoreChecked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_MAX_SIG_AGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SCORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_ISSUED_AT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authorizedSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canSubmitScore\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canSubmit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timeRemaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCheckTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastIssuedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSigAge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setAuthorizedSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setCheckFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seconds\",\"type\":\"uint256\"}],\"name\":\"setMaxSigAge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seconds\",\"type\":\"uint256\"}],\"name\":\"setMinInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"submitScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userData\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"score\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"lastCheckTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lastIssuedAt\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Upgradeable contract for verifying and storing user scores with EIP-712 signatures\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"ScoreCheckerUpgradeable (UUPS)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ScoreCheckerUpgradeable.sol\":\"ScoreCheckerUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/ScoreCheckerUpgradeable.sol\":{\"keccak256\":\"0x6db7e78f2c76e4d86224e448c7e34233fd17fd09745aa75e4bda03a88d00b9f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c980f0e01cc87a10f3442d45444f4883053e95acf114fcedf2bd006d957f70a5\",\"dweb:/ipfs/QmUQcqB6Uw3tkSQMAXv53nGigMQAfCRHQGnQnvoQpEDDyP\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 43541,
                  "contract": "src/ScoreCheckerUpgradeable.sol:ScoreCheckerUpgradeable",
                  "label": "checkFee",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_uint256"
                },
                {
                  "astId": 43543,
                  "contract": "src/ScoreCheckerUpgradeable.sol:ScoreCheckerUpgradeable",
                  "label": "minInterval",
                  "offset": 0,
                  "slot": "1",
                  "type": "t_uint256"
                },
                {
                  "astId": 43545,
                  "contract": "src/ScoreCheckerUpgradeable.sol:ScoreCheckerUpgradeable",
                  "label": "authorizedSigner",
                  "offset": 0,
                  "slot": "2",
                  "type": "t_address"
                },
                {
                  "astId": 43547,
                  "contract": "src/ScoreCheckerUpgradeable.sol:ScoreCheckerUpgradeable",
                  "label": "maxSigAge",
                  "offset": 0,
                  "slot": "3",
                  "type": "t_uint256"
                },
                {
                  "astId": 43559,
                  "contract": "src/ScoreCheckerUpgradeable.sol:ScoreCheckerUpgradeable",
                  "label": "userData",
                  "offset": 0,
                  "slot": "4",
                  "type": "t_mapping(t_address,t_struct(UserData)43554_storage)"
                },
                {
                  "astId": 43563,
                  "contract": "src/ScoreCheckerUpgradeable.sol:ScoreCheckerUpgradeable",
                  "label": "nonces",
                  "offset": 0,
                  "slot": "5",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "astId": 43660,
                  "contract": "src/ScoreCheckerUpgradeable.sol:ScoreCheckerUpgradeable",
                  "label": "__gap",
                  "offset": 0,
                  "slot": "6",
                  "type": "t_array(t_uint256)50_storage"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_uint256)50_storage": {
                  "encoding": "inplace",
                  "label": "uint256[50]",
                  "numberOfBytes": "1600",
                  "base": "t_uint256"
                },
                "t_mapping(t_address,t_struct(UserData)43554_storage)": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => struct ScoreCheckerUpgradeable.UserData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(UserData)43554_storage"
                },
                "t_mapping(t_address,t_uint256)": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => uint256)",
                  "numberOfBytes": "32",
                  "value": "t_uint256"
                },
                "t_struct(UserData)43554_storage": {
                  "encoding": "inplace",
                  "label": "struct ScoreCheckerUpgradeable.UserData",
                  "numberOfBytes": "32",
                  "members": [
                    {
                      "astId": 43549,
                      "contract": "src/ScoreCheckerUpgradeable.sol:ScoreCheckerUpgradeable",
                      "label": "score",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint128"
                    },
                    {
                      "astId": 43551,
                      "contract": "src/ScoreCheckerUpgradeable.sol:ScoreCheckerUpgradeable",
                      "label": "lastCheckTime",
                      "offset": 16,
                      "slot": "0",
                      "type": "t_uint64"
                    },
                    {
                      "astId": 43553,
                      "contract": "src/ScoreCheckerUpgradeable.sol:ScoreCheckerUpgradeable",
                      "label": "lastIssuedAt",
                      "offset": 24,
                      "slot": "0",
                      "type": "t_uint64"
                    }
                  ]
                },
                "t_uint128": {
                  "encoding": "inplace",
                  "label": "uint128",
                  "numberOfBytes": "16"
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                },
                "t_uint64": {
                  "encoding": "inplace",
                  "label": "uint64",
                  "numberOfBytes": "8"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "60c0346200012f57601f6200238838819003918201601f19168301926001600160401b0392909183851183861017620001335781602092849260409788528339810103126200012f57513060805280156200011e5760a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff82851c166200010d578080831603620000c8575b835161224090816200014882396080518181816113b4015261146d015260a051818181610522015281816105f7015261170d0152f35b6001600160401b0319909116811790915581519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f808062000092565b835163f92ee8a960e01b8152600490fd5b825163d92e233d60e01b8152600490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610085575b36156100475760405162461bcd60e51b815260206004820152600b60248201526a4e6f2066616c6c6261636b60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275111a5c9958dd08115512081b9bdd08185b1b1bddd95960521b6044820152606490fd5b5f3560e01c806310cb729f146118c6578063110b328514611826578063164e68de146117bb5780631904863c1461179f57806327ff622314611782578063319a2cbb146116ef57806333917ca9146116be57806333b3e099146116a15780633f4ba83a1461163f5780633fb19a53146116225780634f1ef2861461141e57806351858e271461119257806352d1902d146113a25780635c975abb146113745780636ff1c9bc146112ce578063715018a614611251578063738fc2f91461123557806379ba5097146111e45780637ecebe00146111ac5780638456cb591461119257806384b0196e1461103a5780638da5cb5b14611006578063a2e362ae14610bf9578063ad3cb1cc14610bb0578063b4988fd014610545578063bc063e1a1461050b578063c771909c146104e3578063c891091314610487578063d279b0ca146103ff578063d47875d01461038f578063e30c39781461035b578063ee4eb93d1461033d578063f2fde38b146102b9578063fede61141461029c5763ffc9896b0361000e57346102985760203660031901126102985760806001600160a01b0361022d61193d565b16805f52600460205260405f2090604080519261024984611953565b54916001600160801b038316938481526001600160401b0384871c169384602083015260c01c92839101525f52600560205260405f205491604051938452602084015260408301526060820152f35b5f80fd5b34610298575f366003190112610298576020604051620151808152f35b34610298576020366003190112610298576102d261193d565b6102da611bf2565b5f805160206121eb83398151915280546001600160a01b0319166001600160a01b039283169081179091555f8051602061218b833981519152549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b34610298575f3660031901126102985760206040516361cf99808152f35b34610298575f366003190112610298575f805160206121eb833981519152546040516001600160a01b039091168152602090f35b34610298576020366003190112610298576001600160a01b036103b061193d565b165f5260046020526040805f208151906103c982611953565b546001600160801b03811691828152836001600160401b038360801c169283602084015260c01c91015282519182526020820152f35b346102985760203660031901126102985761041861193d565b610420611bf2565b6001600160a01b03168015610475576020817f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b60405163d92e233d60e01b8152600490fd5b34610298576020366003190112610298576001600160a01b036104a861193d565b165f526004602052606060405f2054604051906001600160801b03811682526001600160401b038160801c16602083015260c01c6040820152f35b34610298575f366003190112610298576002546040516001600160a01b039091168152602090f35b34610298575f3660031901126102985760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610298576060366003190112610298576001600160a01b036004356024358281168103610298576044359183831691828403610298577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00938454936001600160401b03851680159081610ba0575b6001149081610b96575b159081610b8d575b50610b7b5760016001600160401b0319861617865560ff8560401c1615610b5c575b868316156104755715610475577f0000000000000000000000000000000000000000000000000000000000000000808411610b3e575061063f9061062a611f8a565b610632611f8a565b61063a611f8a565b611c6c565b610647611f8a565b61064f611f8a565b5f805160206121ab833981519152805460ff1916905561066d611f8a565b610675611f8a565b60015f805160206121cb833981519152556040519461069386611989565b600e86526d42617365426164676553636f726560901b6020870152604051956106bb87611989565b60018752603160f81b60208801526106d1611f8a565b6106d9611f8a565b8051906001600160401b038211610a095781906107035f8051602061216b83398151915254611cd7565b601f8111610ac4575b50602090601f8311600114610a28575f92610a1d575b50508160011b915f199060031b1c1916175f8051602061216b833981519152555b85516001600160401b038111610a09577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1039061077f8254611cd7565b601f81116109a7575b506020601f82116001146108db57937f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7695937f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73938360209794889560ff9c9d5f926108d0575b50508160011b915f199060031b1c19161790555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10155610850611f8a565b845f558082166bffffffffffffffffffffffff60a01b6002541617600255601e60015561025860035560405191168152a1604051908152a160401c161561089357005b68ff00000000000000001981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508d806107ee565b601f19821698835f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75995f5b81811061098f57509360018460ff9b9c602099957f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c769b99958b987f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c739a10610977575b505050811b019055610802565b01515f1960f88460031b161c191690558d808061096a565b838301518c556001909b019a60209384019301610908565b825f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f830160051c810191602084106109ff575b601f0160051c01905b8181106109f45750610788565b5f81556001016109e7565b90915081906109de565b634e487b7160e01b5f52604160045260245ffd5b015190508880610722565b5f8051602061216b8339815191525f9081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9350601f198516905b818110610aac5750908460019594939210610a94575b505050811b015f8051602061216b83398151915255610743565b01515f1960f88460031b161c19169055888080610a7a565b92936020600181928786015181550195019301610a64565b9091505f8051602061216b8339815191525f527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d601f840160051c81019160208510610b34575b90601f859493920160051c01905b818110610b26575061070c565b5f8155849350600101610b19565b9091508190610b0b565b8360449160405191631e0bd6c160e31b835260048301526024820152fd5b68ffffffffffffffffff198516680100000000000000011786556105e8565b60405163f92ee8a960e01b8152600490fd5b905015886105c6565b303b1591506105be565b604087901c60ff161591506105b4565b34610298575f36600319011261029857610bf5604051610bcf81611989565b60058152640352e302e360dc1b6020820152604051918291602083526020830190611a16565b0390f35b60803660031901126102985760448035906004359060249081356001600160401b03606435818111610298573660238201121561029857806004013590828211610298573686838301011161029857610c50611c12565b610c58611ea3565b5f54803403610fea5750620f4240808811610fce57506361cf9980808510610fb05750335f526020976005895260405f2054808203610f94575091610d74610d7a926042610d83956040518d8101917fd0a0509035718ad455d593d20a83743ce5d6920842ee8cb1f4d76d7197a7bcb883523360408301528d60608301528a608083015260a082015260a08152610cee8161196e565b519020610cf96120bb565b8d610d02612125565b604051918201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152610d4f8161196e565b519020906040519161190160f01b8352600283015260228201522092893692016119e0565b90611ecd565b90929192611f07565b6002546001600160a01b03908116911603610f8257335f526004865260405f209260405193610db185611953565b5460406001600160801b0395868316815289810192858160801c16845260c01c918291015280851115610f665750600154908382151580610f5a575b610f20575b505050824210610f0357610e068342611afa565b600354808211610eea5750505060405192610e2084611953565b80861684528684019180421683526040850193168352335f526004875260405f20935116906001600160401b0360801b905160801b16916001600160401b0360c01b905160c01b1691171790556005835260405f20908154905f198214610ed75750600101905560405181815234838201524260408201527fd1ab2b2d603dc80565da0286deeb7d3699341e28d8234689428dbe9b7d58c8ac60603392a260015f805160206121cb83398151915255604051908152f35b634e487b7160e01b5f9081526011600452fd5b8660405192635ee1691b60e11b84526004840152820152fd5b8460035460405191635ee1691b60e11b83525f6004840152820152fd5b610f2c91511642611afa565b90808210610f3a5783610df2565b8691610f4591611afa565b604051906365a85b4760e01b82526004820152fd5b50808251161515610ded565b8491508660405192634ef2701560e01b84526004840152820152fd5b604051632057875960e21b8152600490fd5b86925087604051926306427aeb60e01b84526004840152820152fd5b6040516331b3a51360e01b8152600481019590955284870152505050fd5b8786918860405192635467da8d60e11b84526004840152820152fd5b86869160405191631e0bd6c160e31b8352346004840152820152fd5b34610298575f366003190112610298575f8051602061218b833981519152546040516001600160a01b039091168152602090f35b34610298575f366003190112610298577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100541580611169575b1561112c57611080611d0f565b611088611de4565b6040516020808201928284106001600160401b03851117610a09579160206110e185946110d397966040525f8452604051978897600f60f81b895260e0858a015260e0890190611a16565b908782036040890152611a16565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061111557505050500390f35b835185528695509381019392810192600101611106565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015415611073565b34610298575f366003190112610298576111aa611b9d565b005b34610298576020366003190112610298576001600160a01b036111cd61193d565b165f526005602052602060405f2054604051908152f35b34610298575f366003190112610298575f805160206121eb83398151915254336001600160a01b039091160361121d576111aa33611c6c565b60405163118cdaa760e01b8152336004820152602490fd5b34610298575f3660031901126102985760206040516102588152f35b34610298575f36600319011261029857611269611bf2565b5f805160206121eb83398151915280546001600160a01b03199081169091555f8051602061218b833981519152805491821690555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610298576020366003190112610298576004356001600160a01b03811690819003610298576112fc611bf2565b611304611c41565b61130c611c12565b8015610475577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695602047611341811515611a54565b61135a5f80808085895af1611354611a8d565b50611abc565b604051908152a260015f805160206121cb83398151915255005b34610298575f36600319011261029857602060ff5f805160206121ab83398151915254166040519015158152f35b34610298575f366003190112610298577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361140c5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b60403660031901126102985761143261193d565b6024356001600160401b0381116102985736602382011215610298576114629036906024816004013591016119e0565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156115f4575b5061140c576114a6611bf2565b8116906040516352d1902d60e01b8152602081600481865afa5f91816115c0575b506114e557604051634c9c8ce360e01b815260048101849052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc929192908181036115a85750823b1561158f5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561157657505f808360206111aa95519101845af4611570611a8d565b91612058565b9150503461158057005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091506020813d6020116115ec575b816115dc602093836119a4565b81010312610298575190856114c7565b3d91506115cf565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141584611499565b34610298575f366003190112610298576020600154604051908152f35b34610298575f36600319011261029857611657611bf2565b61165f611c41565b5f805160206121ab83398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b34610298575f366003190112610298576020600354604051908152f35b346102985760203660031901126102985760406116e16116dc61193d565b611b1b565b825191151582526020820152f35b346102985760203660031901126102985760043561170b611bf2565b7f0000000000000000000000000000000000000000000000000000000000000000808211611763577f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76602083805f55604051908152a1005b604051631e0bd6c160e31b815260048101929092526024820152604490fd5b34610298575f366003190112610298576020604051620f42408152f35b34610298575f3660031901126102985760205f54604051908152f35b34610298576020366003190112610298576004356001600160a01b03811690819003610298576117e9611bf2565b6117f1611c12565b8015610475577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364602047611341811515611a54565b3461029857602036600319011261029857600435611842611bf2565b801515806118b9575b15611881576020817fed1b8a3acdd1de20e69e80caa4b3762f856b4e74e0fad35189af650e20c3085a92600355604051908152a1005b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69644d617853696741676560801b6044820152606490fd5b506201518081111561184b565b34610298576020366003190112610298576004356118e2611bf2565b6201518080821161191e577fad8a71533bfa097e1676af0fbe86477cb4b1a4c3456cc493a1253ae5d9b7cf2d60208380600155604051908152a1005b6040516306115faf60e11b815260048101929092526024820152604490fd5b600435906001600160a01b038216820361029857565b606081019081106001600160401b03821117610a0957604052565b60c081019081106001600160401b03821117610a0957604052565b604081019081106001600160401b03821117610a0957604052565b90601f801991011681019081106001600160401b03821117610a0957604052565b6001600160401b038111610a0957601f01601f191660200190565b9291926119ec826119c5565b916119fa60405193846119a4565b829481845281830111610298578281602093845f960137010152565b91908251928382525f5b848110611a40575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201611a20565b15611a5b57565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b3d15611ab7573d90611a9e826119c5565b91611aac60405193846119a4565b82523d5f602084013e565b606090565b15611ac357565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b91908203918211611b0757565b634e487b7160e01b5f52601160045260245ffd5b600154908115611b945760018060a01b03165f52600460205260405f2060405190611b4582611953565b54906001600160801b038216815260406001600160401b038360801c169283602084015260c01c9101528015611b9457611b7f9042611afa565b81811015611b9457611b9091611afa565b5f91565b50506001905f90565b611ba5611bf2565b611bad611ea3565b5f805160206121ab833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1565b5f8051602061218b833981519152546001600160a01b0316330361121d57565b5f805160206121cb8339815191526002815414611c2f5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff5f805160206121ab833981519152541615611c5a57565b604051638dfc202b60e01b8152600490fd5b5f805160206121eb83398151915280546001600160a01b03199081169091555f8051602061218b83398151915280549182166001600160a01b0393841690811790915591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600182811c92168015611d05575b6020831014611cf157565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611ce6565b604051905f825f8051602061216b83398151915291825492611d3084611cd7565b80845293602091600191828116908115611dbe5750600114611d5e575b505050611d5c925003836119a4565b565b5f9081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9590935091905b828410611da65750611d5c9450505081016020015f8080611d4d565b85548885018301529485019487945092810192611d8a565b9250505060209250611d5c94915060ff191682840152151560051b8201015f8080611d4d565b604051905f827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10391825492611e1884611cd7565b80845293602091600191828116908115611dbe5750600114611e4357505050611d5c925003836119a4565b5f9081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410611e8b5750611d5c9450505081016020015f8080611d4d565b85548885018301529485019487945092810192611e6f565b60ff5f805160206121ab8339815191525416611ebb57565b60405163d93c066560e01b8152600490fd5b8151919060418303611efd57611ef69250602082015190606060408401519301515f1a90611fcb565b9192909190565b50505f9160029190565b6004811015611f765780611f19575050565b60018103611f335760405163f645eedf60e01b8152600490fd5b60028103611f545760405163fce698f760e01b815260048101839052602490fd5b600314611f5e5750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615611fb957565b604051631afcd79f60e31b8152600490fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161204d579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612042575f516001600160a01b0381161561203857905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b9061207f575080511561206d57805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806120b2575b612090575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612088565b6120c3611d0f565b80519081156120d3576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005480156121005790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b61212d611de4565b805190811561213d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612100579056fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00a2646970667358221220131fd34b8c6e95369c9bac22f6c12e835756826f3ae43bfd9b91e02203bd054864736f6c63430008170033",
                "sourceMap": "917:8333:51:-:0;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1171:4:27;1163:13;;3311:12:51;;3307:38;;3355:17;;8837:64:26;917:8333:51;;;;;;;;;7896:76:26;;917:8333:51;;;;7985:34:26;7981:146;;-1:-1:-1;917:8333:51;;;;;;;;1163:13:27;917:8333:51;;;;;;;;;;3355:17;917:8333;;;;;;;;;;;;;;;;7981:146:26;-1:-1:-1;;;;;;917:8333:51;;;;;;;;;;;;;8087:29:26;;917:8333:51;;8087:29:26;7981:146;;;;;7896:76;917:8333:51;;-1:-1:-1;;;7938:23:26;;;;;3307:38:51;917:8333;;-1:-1:-1;;;3332:13:51;;;;;917:8333;-1:-1:-1;917:8333:51;;;;;;-1:-1:-1;917:8333:51;;;;;-1:-1:-1;917:8333:51",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "917:8333:51:-:0;;;;;;;;;-1:-1:-1;917:8333:51;;;;;;-1:-1:-1;;;9224:21:51;;917:8333;;9224:21;;917:8333;;;;;;-1:-1:-1;;;917:8333:51;;;;;;9224:21;917:8333;;;-1:-1:-1;;;9154:32:51;;917:8333;;9154:32;;917:8333;;;;;;-1:-1:-1;;;917:8333:51;;;;;;9154:32;917:8333;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;;-1:-1:-1;;;;;917:8333:51;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;917:8333:51;;;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;;;;;;;;;8542:6;917:8333;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;;;;1426:6;917:8333;;;;;;;;;-1:-1:-1;;917:8333:51;;;;;;:::i;:::-;2303:62:25;;:::i;:::-;-1:-1:-1;;;;;;;;;;;917:8333:51;;-1:-1:-1;;;;;;917:8333:51;-1:-1:-1;;;;;917:8333:51;;;;;;;;;-1:-1:-1;;;;;;;;;;;917:8333:51;;;;2238:43:24;-1:-1:-1;;2238:43:24;917:8333:51;;;;;;;-1:-1:-1;;917:8333:51;;;;;;;1356:10;917:8333;;;;;;;;;-1:-1:-1;;917:8333:51;;;;-1:-1:-1;;;;;;;;;;;917:8333:51;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;-1:-1:-1;;;;;917:8333:51;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;917:8333:51;;;;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;;;:::i;:::-;2303:62:25;;:::i;:::-;-1:-1:-1;;;;;917:8333:51;4264:21;;4260:47;;917:8333;;4358:22;917:8333;;;;4317:26;917:8333;;;4317:26;917:8333;;;;;;4358:22;917:8333;4260:47;917:8333;;-1:-1:-1;;;4294:13:51;;917:8333;;4294:13;917:8333;;;;;;-1:-1:-1;;917:8333:51;;;;-1:-1:-1;;;;;917:8333:51;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;917:8333:51;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;1611:31;917:8333;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;;;;1464:32;917:8333;;;;;;;;;-1:-1:-1;;917:8333:51;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;8837:64:26;917:8333:51;;;;-1:-1:-1;;;;;917:8333:51;;4726:16:26;;:34;;;;917:8333:51;;4790:16:26;:50;;;;917:8333:51;4855:13:26;:30;;;;917:8333:51;4851:91:26;;;917:8333:51;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;4301:16:26;4979:67;;917:8333:51;;;;3552:21;3548:47;;3609:20;3605:46;;3677:7;3665:19;;;3661:62;;6893:76:26;2195:12:25;6893:76:26;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;2195:12:25;:::i;:::-;6893:76:26;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;917:8333:51;;-1:-1:-1;;917:8333:51;;;6893:76:26;;:::i;:::-;;;:::i;:::-;917:8333:51;-1:-1:-1;;;;;;;;;;;917:8333:51;;;;;;;:::i;:::-;;;;-1:-1:-1;;;917:8333:51;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;917:8333:51;;;;6893:76:26;;:::i;:::-;;;:::i;:::-;917:8333:51;;;-1:-1:-1;;;;;917:8333:51;;;;;;;-1:-1:-1;;;;;;;;;;;917:8333:51;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;3038:91;;;917:8333;;;;;;;-1:-1:-1;;;;;;;;;;;917:8333:51;;;;-1:-1:-1;;;;;917:8333:51;;;;3790:10:31;917:8333:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4130:21;917:8333;;4093:22;917:8333;;;;;;;;;;;;;;;;;;;;3038:91;;;917:8333;3790:10:31;917:8333:51;;;;;;;;;2806:64:31;917:8333:51;;3902:16:31;917:8333:51;6893:76:26;;:::i;:::-;917:8333:51;;;;;;;;;3766:7:31;917:8333:51;;;3766:7:31;917:8333:51;4019:2;917:8333;;1249:10;3790::31;917:8333:51;;;;;;;4093:22;917:8333;;;;;4130:21;917:8333;;;4301:16:26;5066:101;;917:8333:51;5066:101:26;917:8333:51;;;;;;;5142:14:26;917:8333:51;;;;;;5142:14:26;917:8333:51;;;;;-1:-1:-1;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4130:21;917:8333;;;;;4093:22;917:8333;;;;;;;;;;;;;;;;;;3038:91;;917:8333;;3790:10:31;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;917:8333:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;917:8333:51;;;;;-1:-1:-1;;;;;;;;;;;917:8333:51;;;;;;-1:-1:-1;;;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;917:8333:51;;;;;;3038:91;;917:8333;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;917:8333:51;;;;;;;-1:-1:-1;917:8333:51;;;;3661:62;917:8333;;;;;4490:28;;;;3693:30;;917:8333;3693:30;;917:8333;;;;;3693:30;4979:67:26;-1:-1:-1;;917:8333:51;;;;;;4979:67:26;;4851:91;917:8333:51;;-1:-1:-1;;;4908:23:26;;917:8333:51;;4908:23:26;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:26;;4726:34;917:8333:51;;;;;;4301:16:26;;-1:-1:-1;4726:34:26;;917:8333:51;;;;;;-1:-1:-1;;917:8333:51;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;917:8333:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;917:8333:51;;;;;;;;;;;;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3217:103:30;;:::i;:::-;2281:72:29;;:::i;:::-;917:8333:51;;5545:9;;:21;5541:65;;1301:9;;5620:17;;;5616:60;;1356:10;;5690:24;;;5686:76;;5792:10;;917:8333;;;;5785:6;917:8333;;;;;;5776:27;;;5772:79;;917:8333;;3038:91;3859:27:41;917:8333:51;3515:233:42;3915:8:41;917:8333:51;;;5921:132;;;917:8333;3038:91;917:8333;;5792:10;917:8333;3038:91;;917:8333;3038:91;917:8333;3038:91;;917:8333;3038:91;917:8333;3038:91;;917:8333;3038:91;;;917:8333;3038:91;5921:132;;;;;:::i;:::-;917:8333;5911:143;;4243:17:31;;:::i;:::-;4262:20;;;:::i;:::-;917:8333:51;;4221:92:31;;;917:8333:51;2073:95:31;917:8333:51;;;2073:95:31;;917:8333:51;;2073:95:31;;917:8333:51;4284:13:31;917:8333:51;2073:95:31;;917:8333:51;4307:4:31;3038:91:51;2073:95:31;;917:8333:51;3038:91;4221:92:31;;;;;:::i;:::-;917:8333:51;4211:103:31;;3515:233:42;917:8333:51;3515:233:42;;-1:-1:-1;;;3515:233:42;;;;;;;;;;;917:8333:51;;;;;3038:91;:::i;:::-;3859:27:41;;:::i;:::-;3915:8;;;;;:::i;:::-;3515:233:42;917:8333:51;-1:-1:-1;;;;;917:8333:51;;;;;6182:26;6178:54;;5792:10;917:8333;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;;;;;;;3038:91;917:8333;;;;;;6301:29;;;;6297:116;;917:8333;;;6467:12;;;;;:39;;;917:8333;6463:238;;917:8333;6715:15;;;;;:26;6711:67;;6811:26;6715:15;;6811:26;:::i;:::-;6866:9;917:8333;6851:24;;;6847:76;;917:8333;;;;;;;;;:::i;:::-;;;;;;6957:151;;;6715:15;;;917:8333;;;;6957:151;;917:8333;;;;5792:10;917:8333;;;;;;;;3038:91;;917:8333;3038:91;-1:-1:-1;;;;;3038:91:51;;917:8333;;;3038:91;;;-1:-1:-1;;;;;3038:91:51;;917:8333;;3038:91;;;;;;;;5785:6;917:8333;;;;;;;;3038:91;;;;;;;;917:8333;3038:91;917:8333;;;;;;;5545:9;3038:91;;;917:8333;6715:15;917:8333;3038:91;;917:8333;7154:59;917:8333;5792:10;7154:59;;917:8333;-1:-1:-1;;;;;;;;;;;917:8333:51;;;;;;;3038:91;-1:-1:-1;;;917:8333:51;;;;;;;;6847:76;917:8333;;;6750:28;;;;6884:39;;917:8333;6884:39;;917:8333;;;;6884:39;6711:67;917:8333;6768:9;917:8333;;;6750:28;;;;;;917:8333;;6750:28;;917:8333;3038:91;;917:8333;6750:28;6463:238;6542:36;917:8333;;;6542:15;:36;:::i;:::-;6596:20;;;;6592:99;;6463:238;;;6592:99;6655:20;;;;;:::i;:::-;917:8333;;6643:33;;;;;;917:8333;6643:33;;917:8333;6643:33;6467:39;917:8333;;;;;6483:23;;6467:39;;6297:116;917:8333;;;;;;6353:49;;;;;;917:8333;6353:49;;917:8333;3038:91;;917:8333;6353:49;6178:54;917:8333;;-1:-1:-1;;;6217:15:51;;917:8333;;6217:15;5772:79;917:8333;;;;;;5812:39;;;;;;917:8333;5812:39;;917:8333;;;;5812:39;5686:76;917:8333;;-1:-1:-1;;;5723:39:51;;917:8333;5723:39;;917:8333;;;;;;;;-1:-1:-1;;;5723:39:51;5616:60;917:8333;;;;;;5646:30;;;;;;917:8333;5646:30;;917:8333;;;;5646:30;5541:65;917:8333;;;;;4490:28;;;;5575:31;;5545:9;917:8333;5575:31;;917:8333;;;;5575:31;917:8333;;;;;;-1:-1:-1;;917:8333:51;;;;-1:-1:-1;;;;;;;;;;;917:8333:51;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;2806:64:31;917:8333:51;5777:18:31;:43;;;917:8333:51;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5965:13:31;;917:8333:51;;;;6000:4:31;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;917:8333:51;;;;;;;;;;;;;;;-1:-1:-1;;;917:8333:51;;;;;;;;;;;;-1:-1:-1;;;917:8333:51;;;;;;;5777:43:31;917:8333:51;5799:16:31;917:8333:51;5799:21:31;5777:43;;917:8333:51;;;;;;-1:-1:-1;;917:8333:51;;;;5091:49;;:::i;:::-;917:8333;;;;;;;-1:-1:-1;;917:8333:51;;;;-1:-1:-1;;;;;917:8333:51;;:::i;:::-;;;;1879:41;917:8333;;;;;;;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;-1:-1:-1;;;;;;;;;;;917:8333:51;966:10:28;-1:-1:-1;;;;;917:8333:51;;;2869:24:24;2865:96;;2989:6;966:10:28;2989:6:24;:::i;2865:96::-;917:8333:51;;-1:-1:-1;;;2916:34:24;;966:10:28;917:8333:51;2916:34:24;;917:8333:51;;;2916:34:24;917:8333:51;;;;;;-1:-1:-1;;917:8333:51;;;;;;;1249:10;917:8333;;;;;;;;;-1:-1:-1;;917:8333:51;;;;2303:62:25;;:::i;:::-;-1:-1:-1;;;;;;;;;;;917:8333:51;;-1:-1:-1;;;;;;917:8333:51;;;;;;-1:-1:-1;;;;;;;;;;;917:8333:51;;;;;;;;;-1:-1:-1;;;;;917:8333:51;3975:40:25;917:8333:51;;3975:40:25;917:8333:51;;;;;;;-1:-1:-1;;917:8333:51;;;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;2303:62:25;;:::i;:::-;2531:66:29;;:::i;:::-;3217:103:30;;:::i;:::-;7732:16:51;;7728:42;;7969:30;917:8333;7798:21;7829:34;7837:11;;;7829:34;:::i;:::-;7924:30;917:8333;7887:27;;;;;;;;;:::i;:::-;;7924:30;:::i;:::-;917:8333;;;;;7969:30;1805:1:30;-1:-1:-1;;;;;;;;;;;917:8333:51;;;;;;;;-1:-1:-1;;917:8333:51;;;;;;-1:-1:-1;;;;;;;;;;;917:8333:51;;;;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;5111:6:27;-1:-1:-1;;;;;917:8333:51;5102:4:27;5094:23;5090:145;;917:8333:51;;;1327:66:35;917:8333:51;;;5090:145:27;917:8333:51;;-1:-1:-1;;;5195:29:27;;917:8333:51;;5195:29:27;917:8333:51;;;-1:-1:-1;;917:8333:51;;;;;;:::i;:::-;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;4688:6:27;917:8333:51;;4679:4:27;4671:23;;;:120;;;;917:8333:51;4654:251:27;;;2303:62:25;;:::i;:::-;917:8333:51;;;;;;;;6151:52:27;;917:8333:51;6151:52:27;917:8333:51;6151:52:27;;;;917:8333:51;;6151:52:27;;;917:8333:51;-1:-1:-1;6147:437:27;;917:8333:51;;-1:-1:-1;;;6513:60:27;;917:8333:51;6513:60:27;;917:8333:51;;;;;6513:60:27;6147:437;1327:66:35;;;;6245:40:27;;;;6241:120;;2263:29:35;;;:34;2259:119;;917:8333:51;;-1:-1:-1;;;;;;917:8333:51;;;;;;;;2922:27:35;-1:-1:-1;;2922:27:35;917:8333:51;;2964:15:35;:11;;4255:25:38;917:8333:51;4255:25:38;;917:8333:51;4297:55:38;4255:25;;;;;;;;;:::i;:::-;4297:55;;:::i;2960:148:35:-;6648:9;;;;6644:70;;917:8333:51;6644:70:35;-1:-1:-1;;;6684:19:35;;917:8333:51;;6684:19:35;2259:119;917:8333:51;;-1:-1:-1;;;2320:47:35;;917:8333:51;2320:47:35;;917:8333:51;;;;;2320:47:35;6241:120:27;917:8333:51;;;;6312:34:27;;;;;;917:8333:51;6312:34:27;;917:8333:51;6312:34:27;6151:52;;;;917:8333:51;6151:52:27;;917:8333:51;6151:52:27;;;;;;917:8333:51;6151:52:27;;;:::i;:::-;;;917:8333:51;;;;;6151:52:27;;;;;;;-1:-1:-1;6151:52:27;;4671:120;917:8333:51;;;1327:66:35;917:8333:51;;4749:42:27;;4671:120;;;917:8333:51;;;;;;-1:-1:-1;;917:8333:51;;;;;1555:26;917:8333;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;2303:62:25;;:::i;:::-;2531:66:29;;:::i;:::-;-1:-1:-1;;;;;;;;;;;917:8333:51;;;;;;;3823:22:29;917:8333:51;;;966:10:28;917:8333:51;;3823:22:29;917:8333:51;;;;;;;-1:-1:-1;;917:8333:51;;;;;1648:24;917:8333;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;;;2303:62:25;;:::i;:::-;4474:7:51;4464:17;;;4460:58;;4561:19;917:8333;;;;;;;;;;4561:19;917:8333;4460:58;917:8333;;-1:-1:-1;;;4490:28:51;;917:8333;4490:28;;917:8333;;;;;;;;;;4490:28;917:8333;;;;;;-1:-1:-1;;917:8333:51;;;;;;;1301:9;917:8333;;;;;;;;;-1:-1:-1;;917:8333:51;;;;;;;;;;;;;;;;;;;-1:-1:-1;;917:8333:51;;;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;2303:62:25;;:::i;:::-;3217:103:30;;:::i;:::-;7357:16:51;;7353:42;;7594:21;917:8333;7423:21;7454:34;7462:11;;;7454:34;:::i;917:8333::-;;;;;;-1:-1:-1;;917:8333:51;;;;;;2303:62:25;;:::i;:::-;4952:12:51;;;:34;;;917:8333;;;;;;5052:26;917:8333;5017:20;917:8333;;;;;;5052:26;917:8333;;;;-1:-1:-1;;;917:8333:51;;;;;;;;;;;;-1:-1:-1;;;917:8333:51;;;;;;;4952:34;4968:18;4980:6;4968:18;;;4952:34;;917:8333;;;;;;-1:-1:-1;;917:8333:51;;;;;;2303:62:25;;:::i;:::-;1426:6:51;4668:23;;;4664:75;;4786:28;917:8333;;;;;;;;;;4786:28;917:8333;4664:75;917:8333;;-1:-1:-1;;;4700:39:51;;917:8333;4700:39;;917:8333;;;;;;;;;;4700:39;917:8333;;;;-1:-1:-1;;;;;917:8333:51;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;:::o;:::-;3038:91;917:8333;;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;:::o;:::-;-1:-1:-1;;;;;917:8333:51;;;;;;-1:-1:-1;;917:8333:51;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;917:8333:51;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;917:8333:51;;;;;;;;;-1:-1:-1;917:8333:51;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;917:8333:51;;;;;;;;;;;;-1:-1:-1;;;917:8333:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;917:8333:51;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;917:8333:51;;;;;;;;;;;;-1:-1:-1;;;917:8333:51;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;8568:419;8682:11;917:8333;8682:16;;;8678:38;;917:8333;;;;;;-1:-1:-1;917:8333:51;8746:8;8774:15;917:8333;;-1:-1:-1;917:8333:51;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;917:8333:51;;;;;-1:-1:-1;;;;;917:8333:51;;;;;;8774:15;917:8333;;;;;;;;8774:20;;8770:42;;8842:33;:15;;:33;:::i;:::-;8889:24;;;;8885:46;;8956:23;;;:::i;:::-;-1:-1:-1;;8568:419:51:o;8885:46::-;8915:16;;8682:11;8915:16;-1:-1:-1;8915:16:51;:::o;2303:62:25:-;;;:::i;:::-;2281:72:29;;:::i;:::-;-1:-1:-1;;;;;;;;;;;3496:4:29;917:8333:51;;;;;;;;3515:20:29;917:8333:51;;;966:10:28;917:8333:51;;3515:20:29;2303:62:25:o;2658:162::-;-1:-1:-1;;;;;;;;;;;917:8333:51;-1:-1:-1;;;;;917:8333:51;966:10:28;2717:23:25;2713:101;;2658:162::o;3326:384:30:-;-1:-1:-1;;;;;;;;;;;1847:1:30;917:8333:51;;3526:20:30;3522:88;;1847:1;917:8333:51;;3326:384:30:o;3522:88::-;917:8333:51;;-1:-1:-1;;;3569:30:30;;;;;3105:126:29;917:8333:51;-1:-1:-1;;;;;;;;;;;917:8333:51;;3167:9:29;3163:62;;3105:126::o;3163:62::-;917:8333:51;;-1:-1:-1;;;3199:15:29;;;;;2472:222:24;-1:-1:-1;;;;;;;;;;;917:8333:51;;-1:-1:-1;;;;;;917:8333:51;;;;;;-1:-1:-1;;;;;;;;;;;917:8333:51;;;;;-1:-1:-1;;;;;917:8333:51;;;;;;;;;;;3975:40:25;-1:-1:-1;;3975:40:25;2472:222:24:o;917:8333:51:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6441:7:31;-1:-1:-1;;;;;;;;;;;917:8333:51;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;917:8333:51;;;;;-1:-1:-1;;;917:8333:51;;;;;;;;-1:-1:-1;917:8333:51;;-1:-1:-1;;;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6826:10:31;;917:8333:51;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;917:8333:51;;;;;-1:-1:-1;;;917:8333:51;;;;;;;;-1:-1:-1;917:8333:51;;-1:-1:-1;;;917:8333:51;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;917:8333:51;;;;;;2905:128:29;917:8333:51;-1:-1:-1;;;;;;;;;;;917:8333:51;;2966:61:29;;2905:128::o;2966:61::-;917:8333:51;;-1:-1:-1;;;3001:15:29;;;;;2129:766:41;917:8333:51;;;2129:766:41;2276:2;2256:22;;2276:2;;2739:25;2539:180;;;;;;;;;;;;;;;-1:-1:-1;2539:180:41;2739:25;;:::i;:::-;2732:32;;;;;:::o;2252:637::-;2795:83;;2811:1;2795:83;2815:35;2795:83;;:::o;7196:532::-;917:8333:51;;;;;;7282:29:41;;;7327:7;;:::o;7278:444::-;917:8333:51;7378:38:41;;917:8333:51;;;;-1:-1:-1;;;7439:23:41;;917:8333:51;;7439:23:41;7374:348;7492:35;7483:44;;7492:35;;917:8333:51;;-1:-1:-1;;;7550:46:41;;917:8333:51;7550:46:41;;917:8333:51;;;;;7550:46:41;7479:243;7626:30;7617:39;7613:109;;7479:243;7196:532::o;7613:109::-;917:8333:51;;;;7679:32:41;;;;;;917:8333:51;7679:32:41;;917:8333:51;7679:32:41;917:8333:51;;;;7291:20:41;917:8333:51;;;;;7291:20:41;917:8333:51;7084:141:26;917:8333:51;8837:64:26;917:8333:51;;;;7150:18:26;7146:73;;7084:141::o;7146:73::-;917:8333:51;;-1:-1:-1;;;7191:17:26;;;;;5140:1530:41;;;6199:66;6186:79;;6182:164;;917:8333:51;;;;;;-1:-1:-1;917:8333:51;;;;;;;;;;;;;;;;;;;6457:24:41;;;;;;;;;-1:-1:-1;6457:24:41;-1:-1:-1;;;;;917:8333:51;;6495:20:41;6491:113;;6614:49;-1:-1:-1;6614:49:41;-1:-1:-1;5140:1530:41;:::o;6491:113::-;6531:62;-1:-1:-1;6531:62:41;6457:24;6531:62;-1:-1:-1;6531:62:41;:::o;6457:24::-;917:8333:51;;;-1:-1:-1;917:8333:51;;;;;6182:164:41;6281:54;;;6297:1;6281:54;6301:30;6281:54;;:::o;4625:582:38:-;;4797:8;;-1:-1:-1;917:8333:51;;5874:21:38;:17;;6046:142;;;;;;5870:383;917:8333:51;;-1:-1:-1;;;6225:17:38;;;;;4793:408;917:8333:51;;5045:22:38;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;917:8333:51;;-1:-1:-1;;;5121:24:38;;-1:-1:-1;;;;;917:8333:51;;;5121:24:38;;;917:8333:51;;;5121:24:38;5045:49;5071:18;;;:23;5045:49;;7058:687:31;917:8333:51;;:::i;:::-;;;;7230:22:31;;;;917:8333:51;;7275:22:31;7268:29;:::o;7226:513::-;-1:-1:-1;;2806:64:31;917:8333:51;7603:15:31;;;;7638:17;:::o;7599:130::-;7694:20;7701:13;7694:20;:::o;7966:723::-;917:8333:51;;:::i;:::-;;;;8147:25:31;;;;917:8333:51;;8195:25:31;8188:32;:::o;8143:540::-;-1:-1:-1;;8507:16:31;917:8333:51;8541:18:31;;;;8579:20;:::o",
                "linkReferences": {},
                "immutableReferences": {
                  "39435": [
                    {
                      "start": 5044,
                      "length": 32
                    },
                    {
                      "start": 5229,
                      "length": 32
                    }
                  ],
                  "43539": [
                    {
                      "start": 1314,
                      "length": 32
                    },
                    {
                      "start": 1527,
                      "length": 32
                    },
                    {
                      "start": 5901,
                      "length": 32
                    }
                  ]
                }
              },
              "methodIdentifiers": {
                "DEFAULT_MAX_SIG_AGE()": "738fc2f9",
                "MAX_FEE()": "bc063e1a",
                "MAX_INTERVAL()": "fede6114",
                "MAX_SCORE()": "27ff6223",
                "MIN_ISSUED_AT()": "ee4eb93d",
                "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
                "acceptOwnership()": "79ba5097",
                "authorizedSigner()": "c771909c",
                "canSubmitScore(address)": "33917ca9",
                "checkFee()": "1904863c",
                "eip712Domain()": "84b0196e",
                "emergencyPause()": "51858e27",
                "emergencyWithdraw(address)": "6ff1c9bc",
                "getScore(address)": "d47875d0",
                "getUserData(address)": "ffc9896b",
                "initialize(uint256,address,address)": "b4988fd0",
                "maxSigAge()": "33b3e099",
                "minInterval()": "3fb19a53",
                "nonces(address)": "7ecebe00",
                "owner()": "8da5cb5b",
                "pause()": "8456cb59",
                "paused()": "5c975abb",
                "pendingOwner()": "e30c3978",
                "proxiableUUID()": "52d1902d",
                "renounceOwnership()": "715018a6",
                "setAuthorizedSigner(address)": "d279b0ca",
                "setCheckFee(uint256)": "319a2cbb",
                "setMaxSigAge(uint256)": "110b3285",
                "setMinInterval(uint256)": "10cb729f",
                "submitScore(uint256,uint256,uint256,bytes)": "a2e362ae",
                "transferOwnership(address)": "f2fde38b",
                "unpause()": "3f4ba83a",
                "upgradeToAndCall(address,bytes)": "4f1ef286",
                "userData(address)": "c8910913",
                "withdrawFees(address)": "164e68de"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/src/ScoreCheckerUpgradeableV2.sol": {
      "ScoreCheckerUpgradeableV2": [
        {
          "contract": {
            "abi": [
              {
                "type": "constructor",
                "inputs": [
                  {
                    "name": "_maxFee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "nonpayable"
              },
              {
                "type": "fallback",
                "stateMutability": "payable"
              },
              {
                "type": "receive",
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "DEFAULT_MAX_SIG_AGE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "MAX_FEE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "MAX_INTERVAL",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "MAX_SCORE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "MIN_ISSUED_AT",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "UPGRADE_INTERFACE_VERSION",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "acceptOwnership",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "authorizedSigner",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "canSubmitScore",
                "inputs": [
                  {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "canSubmit",
                    "type": "bool",
                    "internalType": "bool"
                  },
                  {
                    "name": "timeRemaining",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "checkFee",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "eip712Domain",
                "inputs": [],
                "outputs": [
                  {
                    "name": "fields",
                    "type": "bytes1",
                    "internalType": "bytes1"
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "version",
                    "type": "string",
                    "internalType": "string"
                  },
                  {
                    "name": "chainId",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "verifyingContract",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "salt",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  },
                  {
                    "name": "extensions",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "emergencyPause",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "emergencyWithdraw",
                "inputs": [
                  {
                    "name": "to",
                    "type": "address",
                    "internalType": "address payable"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "getScore",
                "inputs": [
                  {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "score",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "timestamp",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getScoreCard",
                "inputs": [
                  {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "totalScore",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "baseScore",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "securityScore",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "numberOfTransactions",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "currentStreak",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxStreak",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "currentBalance",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "avgBalanceLastMonth",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "gasPaid",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "suspiciousTokens",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "suspiciousContracts",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "dangerousInteractions",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "suspiciousOilCompanies",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "lastCheckTime",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "lastIssuedAt",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "getUserData",
                "inputs": [
                  {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "score",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "lastCheckTime",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "lastIssuedAt",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "nonce",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "hashTypedDataV4",
                "inputs": [
                  {
                    "name": "structHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "initialize",
                "inputs": [
                  {
                    "name": "_checkFee",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "_signer",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "_owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "maxSigAge",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "minInterval",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "nonces",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "owner",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "pause",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "paused",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "pendingOwner",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "proxiableUUID",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "renounceOwnership",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setAuthorizedSigner",
                "inputs": [
                  {
                    "name": "_signer",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setCheckFee",
                "inputs": [
                  {
                    "name": "_newFee",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setMaxSigAge",
                "inputs": [
                  {
                    "name": "_seconds",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "setMinInterval",
                "inputs": [
                  {
                    "name": "_seconds",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "submitScore",
                "inputs": [
                  {
                    "name": "score",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "issuedAt",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "nonce",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "signature",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "submitScoreCard",
                "inputs": [
                  {
                    "name": "totalScore",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "baseScore",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "securityScore",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "numberOfTransactions",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "currentStreak",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxStreak",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "currentBalance",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "avgBalanceLastMonth",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "gasPaid",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "suspiciousTokens",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "suspiciousContracts",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "dangerousInteractions",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "suspiciousOilCompanies",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "issuedAt",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "nonce",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "signature",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "transferOwnership",
                "inputs": [
                  {
                    "name": "newOwner",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "unpause",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "upgradeToAndCall",
                "inputs": [
                  {
                    "name": "newImplementation",
                    "type": "address",
                    "internalType": "address"
                  },
                  {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                  }
                ],
                "outputs": [],
                "stateMutability": "payable"
              },
              {
                "type": "function",
                "name": "userData",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "score",
                    "type": "uint128",
                    "internalType": "uint128"
                  },
                  {
                    "name": "lastCheckTime",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "lastIssuedAt",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "userScoreCards",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "outputs": [
                  {
                    "name": "totalScore",
                    "type": "uint128",
                    "internalType": "uint128"
                  },
                  {
                    "name": "baseScore",
                    "type": "uint128",
                    "internalType": "uint128"
                  },
                  {
                    "name": "securityScore",
                    "type": "uint128",
                    "internalType": "uint128"
                  },
                  {
                    "name": "numberOfTransactions",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "currentStreak",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "maxStreak",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "currentBalance",
                    "type": "uint128",
                    "internalType": "uint128"
                  },
                  {
                    "name": "avgBalanceLastMonth",
                    "type": "uint128",
                    "internalType": "uint128"
                  },
                  {
                    "name": "gasPaid",
                    "type": "uint128",
                    "internalType": "uint128"
                  },
                  {
                    "name": "suspiciousTokens",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "suspiciousContracts",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "dangerousInteractions",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "suspiciousOilCompanies",
                    "type": "uint32",
                    "internalType": "uint32"
                  },
                  {
                    "name": "lastCheckTime",
                    "type": "uint64",
                    "internalType": "uint64"
                  },
                  {
                    "name": "lastIssuedAt",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "withdrawFees",
                "inputs": [
                  {
                    "name": "to",
                    "type": "address",
                    "internalType": "address payable"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "event",
                "name": "EIP712DomainChanged",
                "inputs": [],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "EmergencyWithdraw",
                "inputs": [
                  {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "FeeUpdated",
                "inputs": [
                  {
                    "name": "newFee",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Initialized",
                "inputs": [
                  {
                    "name": "version",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "MaxSigAgeUpdated",
                "inputs": [
                  {
                    "name": "seconds_",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "MinIntervalUpdated",
                "inputs": [
                  {
                    "name": "seconds_",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "OwnershipTransferStarted",
                "inputs": [
                  {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "OwnershipTransferred",
                "inputs": [
                  {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Paused",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "ScoreCardUpdated",
                "inputs": [
                  {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "totalScore",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "fee",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "timestamp",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "ScoreChecked",
                "inputs": [
                  {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "score",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "fee",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "timestamp",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "SignerUpdated",
                "inputs": [
                  {
                    "name": "signer",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Unpaused",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Upgraded",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "Withdraw",
                "inputs": [
                  {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                  },
                  {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "error",
                "name": "AddressEmptyCode",
                "inputs": [
                  {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ECDSAInvalidSignature",
                "inputs": []
              },
              {
                "type": "error",
                "name": "ECDSAInvalidSignatureLength",
                "inputs": [
                  {
                    "name": "length",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ECDSAInvalidSignatureS",
                "inputs": [
                  {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ERC1967InvalidImplementation",
                "inputs": [
                  {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ERC1967NonPayable",
                "inputs": []
              },
              {
                "type": "error",
                "name": "EnforcedPause",
                "inputs": []
              },
              {
                "type": "error",
                "name": "ExpectedPause",
                "inputs": []
              },
              {
                "type": "error",
                "name": "FailedInnerCall",
                "inputs": []
              },
              {
                "type": "error",
                "name": "IntervalTooLong",
                "inputs": [
                  {
                    "name": "provided",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maximum",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "InvalidFee",
                "inputs": [
                  {
                    "name": "provided",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "required_",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "InvalidInitialization",
                "inputs": []
              },
              {
                "type": "error",
                "name": "InvalidNonce",
                "inputs": [
                  {
                    "name": "provided",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "expected",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "InvalidSigner",
                "inputs": []
              },
              {
                "type": "error",
                "name": "InvalidTokenId",
                "inputs": [
                  {
                    "name": "tokenId",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "IssuedAtTooOld",
                "inputs": [
                  {
                    "name": "provided",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "minimum",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "NonMonotonicIssuedAt",
                "inputs": [
                  {
                    "name": "provided",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "current",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "NotInitializing",
                "inputs": []
              },
              {
                "type": "error",
                "name": "OwnableInvalidOwner",
                "inputs": [
                  {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "OwnableUnauthorizedAccount",
                "inputs": [
                  {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ReentrancyGuardReentrantCall",
                "inputs": []
              },
              {
                "type": "error",
                "name": "ScoreTooHigh",
                "inputs": [
                  {
                    "name": "provided",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maximum",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "SoulboundToken",
                "inputs": []
              },
              {
                "type": "error",
                "name": "StaleSignature",
                "inputs": [
                  {
                    "name": "age",
                    "type": "uint256",
                    "internalType": "uint256"
                  },
                  {
                    "name": "maxAge",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "TooFrequent",
                "inputs": [
                  {
                    "name": "timeRemaining",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ]
              },
              {
                "type": "error",
                "name": "UUPSUnauthorizedCallContext",
                "inputs": []
              },
              {
                "type": "error",
                "name": "UUPSUnsupportedProxiableUUID",
                "inputs": [
                  {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                  }
                ]
              },
              {
                "type": "error",
                "name": "ZeroAddress",
                "inputs": []
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"IntervalTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required_\",\"type\":\"uint256\"}],\"name\":\"InvalidFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"}],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"}],\"name\":\"IssuedAtTooOld\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"}],\"name\":\"NonMonotonicIssuedAt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"ScoreTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SoulboundToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAge\",\"type\":\"uint256\"}],\"name\":\"StaleSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timeRemaining\",\"type\":\"uint256\"}],\"name\":\"TooFrequent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seconds_\",\"type\":\"uint256\"}],\"name\":\"MaxSigAgeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seconds_\",\"type\":\"uint256\"}],\"name\":\"MinIntervalUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalScore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ScoreCardUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ScoreChecked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_MAX_SIG_AGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SCORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_ISSUED_AT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authorizedSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canSubmitScore\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canSubmit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timeRemaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getScoreCard\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"securityScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTransactions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentStreak\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxStreak\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"avgBalanceLastMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"suspiciousTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"suspiciousContracts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dangerousInteractions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"suspiciousOilCompanies\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCheckTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastIssuedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCheckTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastIssuedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"structHash\",\"type\":\"bytes32\"}],\"name\":\"hashTypedDataV4\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSigAge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setAuthorizedSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setCheckFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seconds\",\"type\":\"uint256\"}],\"name\":\"setMaxSigAge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_seconds\",\"type\":\"uint256\"}],\"name\":\"setMinInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"issuedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"submitScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"securityScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTransactions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentStreak\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxStreak\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"avgBalanceLastMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"suspiciousTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"suspiciousContracts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dangerousInteractions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"suspiciousOilCompanies\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"issuedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"submitScoreCard\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userData\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"score\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"lastCheckTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lastIssuedAt\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userScoreCards\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"totalScore\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"baseScore\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"securityScore\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"numberOfTransactions\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"currentStreak\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxStreak\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"currentBalance\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"avgBalanceLastMonth\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"gasPaid\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"suspiciousTokens\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"suspiciousContracts\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"dangerousInteractions\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"suspiciousOilCompanies\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"lastCheckTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"lastIssuedAt\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Upgradeable contract for verifying and storing complete user scorecard data with EIP-712 signaturesThis version stores all Base Metrics, Security Analysis, and other scorecard components onchain\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"ScoreCheckerUpgradeableV2 (UUPS)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ScoreCheckerUpgradeableV2.sol\":\"ScoreCheckerUpgradeableV2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/ScoreCheckerUpgradeableV2.sol\":{\"keccak256\":\"0xdcd4fdfa4c1604bfbc283449c89c84dda53bfbb2f2bb24111bd0314ad35cb60c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e49a54670032a74145006fe82ec775828e90f3965e2ef795fd83221185063a8\",\"dweb:/ipfs/QmTTRzZ6w1AyFTX5QJJwgAHFnKYrC3kBTTdb1E4Vfjr5Nq\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 44419,
                  "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                  "label": "checkFee",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_uint256"
                },
                {
                  "astId": 44421,
                  "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                  "label": "minInterval",
                  "offset": 0,
                  "slot": "1",
                  "type": "t_uint256"
                },
                {
                  "astId": 44423,
                  "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                  "label": "authorizedSigner",
                  "offset": 0,
                  "slot": "2",
                  "type": "t_address"
                },
                {
                  "astId": 44425,
                  "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                  "label": "maxSigAge",
                  "offset": 0,
                  "slot": "3",
                  "type": "t_uint256"
                },
                {
                  "astId": 44468,
                  "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                  "label": "userScoreCards",
                  "offset": 0,
                  "slot": "4",
                  "type": "t_mapping(t_address,t_struct(UserScoreCard)44456_storage)"
                },
                {
                  "astId": 44473,
                  "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                  "label": "userData",
                  "offset": 0,
                  "slot": "5",
                  "type": "t_mapping(t_address,t_struct(UserData)44463_storage)"
                },
                {
                  "astId": 44477,
                  "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                  "label": "nonces",
                  "offset": 0,
                  "slot": "6",
                  "type": "t_mapping(t_address,t_uint256)"
                },
                {
                  "astId": 44595,
                  "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                  "label": "__gap",
                  "offset": 0,
                  "slot": "7",
                  "type": "t_array(t_uint256)50_storage"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_uint256)50_storage": {
                  "encoding": "inplace",
                  "label": "uint256[50]",
                  "numberOfBytes": "1600",
                  "base": "t_uint256"
                },
                "t_mapping(t_address,t_struct(UserData)44463_storage)": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => struct ScoreCheckerUpgradeableV2.UserData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(UserData)44463_storage"
                },
                "t_mapping(t_address,t_struct(UserScoreCard)44456_storage)": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => struct ScoreCheckerUpgradeableV2.UserScoreCard)",
                  "numberOfBytes": "32",
                  "value": "t_struct(UserScoreCard)44456_storage"
                },
                "t_mapping(t_address,t_uint256)": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => uint256)",
                  "numberOfBytes": "32",
                  "value": "t_uint256"
                },
                "t_struct(UserData)44463_storage": {
                  "encoding": "inplace",
                  "label": "struct ScoreCheckerUpgradeableV2.UserData",
                  "numberOfBytes": "32",
                  "members": [
                    {
                      "astId": 44458,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "score",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint128"
                    },
                    {
                      "astId": 44460,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "lastCheckTime",
                      "offset": 16,
                      "slot": "0",
                      "type": "t_uint64"
                    },
                    {
                      "astId": 44462,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "lastIssuedAt",
                      "offset": 24,
                      "slot": "0",
                      "type": "t_uint64"
                    }
                  ]
                },
                "t_struct(UserScoreCard)44456_storage": {
                  "encoding": "inplace",
                  "label": "struct ScoreCheckerUpgradeableV2.UserScoreCard",
                  "numberOfBytes": "160",
                  "members": [
                    {
                      "astId": 44427,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "totalScore",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint128"
                    },
                    {
                      "astId": 44429,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "baseScore",
                      "offset": 16,
                      "slot": "0",
                      "type": "t_uint128"
                    },
                    {
                      "astId": 44431,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "securityScore",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint128"
                    },
                    {
                      "astId": 44433,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "numberOfTransactions",
                      "offset": 16,
                      "slot": "1",
                      "type": "t_uint64"
                    },
                    {
                      "astId": 44435,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "currentStreak",
                      "offset": 24,
                      "slot": "1",
                      "type": "t_uint32"
                    },
                    {
                      "astId": 44437,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "maxStreak",
                      "offset": 28,
                      "slot": "1",
                      "type": "t_uint32"
                    },
                    {
                      "astId": 44439,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "currentBalance",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint128"
                    },
                    {
                      "astId": 44441,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "avgBalanceLastMonth",
                      "offset": 16,
                      "slot": "2",
                      "type": "t_uint128"
                    },
                    {
                      "astId": 44443,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "gasPaid",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint128"
                    },
                    {
                      "astId": 44445,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "suspiciousTokens",
                      "offset": 16,
                      "slot": "3",
                      "type": "t_uint32"
                    },
                    {
                      "astId": 44447,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "suspiciousContracts",
                      "offset": 20,
                      "slot": "3",
                      "type": "t_uint32"
                    },
                    {
                      "astId": 44449,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "dangerousInteractions",
                      "offset": 24,
                      "slot": "3",
                      "type": "t_uint32"
                    },
                    {
                      "astId": 44451,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "suspiciousOilCompanies",
                      "offset": 28,
                      "slot": "3",
                      "type": "t_uint32"
                    },
                    {
                      "astId": 44453,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "lastCheckTime",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_uint64"
                    },
                    {
                      "astId": 44455,
                      "contract": "src/ScoreCheckerUpgradeableV2.sol:ScoreCheckerUpgradeableV2",
                      "label": "lastIssuedAt",
                      "offset": 8,
                      "slot": "4",
                      "type": "t_uint64"
                    }
                  ]
                },
                "t_uint128": {
                  "encoding": "inplace",
                  "label": "uint128",
                  "numberOfBytes": "16"
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                },
                "t_uint32": {
                  "encoding": "inplace",
                  "label": "uint32",
                  "numberOfBytes": "4"
                },
                "t_uint64": {
                  "encoding": "inplace",
                  "label": "uint64",
                  "numberOfBytes": "8"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "60c0346200016257601f62002fb838819003918201601f19168301926001600160401b0392909183851183861017620001665781602092849260409788528339810103126200016257513060805280156200011e5760a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff82851c166200010d578080831603620000c8575b8351612e3d90816200017b8239608051818181611ebf0152611f78015260a05181818161063f0152818161071001526122410152f35b6001600160401b0319909116811790915581519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f808062000092565b835163f92ee8a960e01b8152600490fd5b825162461bcd60e51b815260206004820152601560248201527f4d61784665652063616e6e6f74206265207a65726f00000000000000000000006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610085575b36156100475760405162461bcd60e51b815260206004820152600b60248201526a4e6f2066616c6c6261636b60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275111a5c9958dd08115512081b9bdd08185b1b1bddd95960521b6044820152606490fd5b5f3560e01c806310cb729f146123fa578063110b32851461235a578063164e68de146122ef5780631904863c146122d357806327ff6223146122b6578063319a2cbb1461222357806333917ca9146121f257806333b3e099146121d55780633f4ba83a146121735780633fb19a53146121565780634980f2881461212d5780634f1ef28614611f2957806351858e271461191557806352d1902d14611ead5780635836d17b14611b255780635c975abb14611af75780636ff1c9bc14611a51578063715018a6146119d4578063738fc2f9146119b857806379ba5097146119675780637ecebe001461192f5780638456cb591461191557806384b0196e146117bd5780638da5cb5b146117895780639b50c5f914610eae578063a23195ed14610cd5578063ad3cb1cc14610c8c578063b4988fd014610662578063bc063e1a14610628578063c771909c14610600578063c8910913146105a4578063d279b0ca1461051c578063d47875d0146104ac578063d91a9458146103bb578063e30c397814610387578063ee4eb93d14610369578063f2fde38b146102e5578063fede6114146102c85763ffc9896b0361000e57346102c45760203660031901126102c45760806001600160a01b03610259612471565b16805f52600560205260405f2090604080519261027584612487565b54916001600160801b038316938481526001600160401b0384871c169384602083015260c01c92839101525f52600660205260405f205491604051938452602084015260408301526060820152f35b5f80fd5b346102c4575f3660031901126102c4576020604051620151808152f35b346102c45760203660031901126102c4576102fe612471565b61030661277d565b5f80516020612de883398151915280546001600160a01b0319166001600160a01b039283169081179091555f80516020612d68833981519152549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b346102c4575f3660031901126102c45760206040516361cf99808152f35b346102c4575f3660031901126102c4575f80516020612de8833981519152546040516001600160a01b039091168152602090f35b346102c45760203660031901126102c4576001600160a01b036103dc612471565b165f5260046020526101e060405f208054906001600160801b03906001810154906001600160401b039263ffffffff906002830154600460038501549401549460405197838116895260801c60208901528281166040890152868160801c166060890152838160c01c16608089015260e01c60a088015281811660c088015260801c60e08701528216610100860152808260801c16610120860152808260a01c166101408601528160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b346102c45760203660031901126102c4576001600160a01b036104cd612471565b165f5260056020526040805f208151906104e682612487565b546001600160801b03811691828152836001600160401b038360801c169283602084015260c01c91015282519182526020820152f35b346102c45760203660031901126102c457610535612471565b61053d61277d565b6001600160a01b03168015610592576020817f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b60405163d92e233d60e01b8152600490fd5b346102c45760203660031901126102c4576001600160a01b036105c5612471565b165f526005602052606060405f2054604051906001600160801b03811682526001600160401b038160801c16602083015260c01c6040820152f35b346102c4575f3660031901126102c4576002546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c45760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102c45760603660031901126102c4576001600160a01b0360243581811681036102c457816044351680604435036102c4577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00918254916001600160401b03831680159081610c7c575b6001149081610c72575b159081610c69575b50610c575760016001600160401b0319841617845560ff8360401c1615610c38575b848216156105925715610592577f00000000000000000000000000000000000000000000000000000000000000008060043511610c185750610741612b02565b610749612b02565b610751612b02565b5f80516020612da8833981519152805460ff1916905561076f612b02565b610777612b02565b60015f80516020612dc88339815191525560405193610795856124d9565b600e85526d42617365426164676553636f726560901b6020860152604051946107bd866124d9565b60018652603160f81b60208701526107d3612b02565b6107db612b02565b8051906001600160401b038211610aef5781906108055f80516020612d488339815191525461288c565b601f8111610b9a575b50602090601f8311600114610b0e575f92610b03575b50508160011b915f199060031b1c1916175f80516020612d48833981519152555b84516001600160401b038111610aef577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10390610881825461288c565b601f8111610a8d575b506020601f82116001146109e4579181602094927f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73969460ff999a5f926109d9575b50508160011b915f199060031b1c19161790555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015561092e612b02565b6004355f55600280546001600160a01b031916838316179055601e60015561025860035561095d604435612821565b60405191168152a17f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7660206040516004358152a160401c161561099c57005b68ff00000000000000001981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508a806108cc565b601f19821697835f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75985f5b818110610a7557509260ff98997f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73979593600193836020999710610a5d575b505050811b0190556108e0565b01515f1960f88460031b161c191690558a8080610a50565b838301518b556001909a019960209384019301610a11565b825f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f830160051c81019160208410610ae5575b601f0160051c01905b818110610ada575061088a565b5f8155600101610acd565b9091508190610ac4565b634e487b7160e01b5f52604160045260245ffd5b015190508780610824565b92505f80516020612d488339815191525f525f80516020612d88833981519152905f935b601f1984168510610b7f576001945083601f19811610610b67575b505050811b015f80516020612d4883398151915255610845565b01515f1960f88460031b161c19169055878080610b4d565b81810151835560209485019460019093019290910190610b32565b9091505f80516020612d488339815191525f52601f830160051c5f80516020612d88833981519152019060208410610c03575b90601f8493920160051c5f80516020612d8883398151915201905b818110610bf5575061080e565b5f8155849350600101610be8565b5f80516020612d888339815191529150610bcd565b60449060405190631e0bd6c160e31b825260043560048301526024820152fd5b68ffffffffffffffffff19831668010000000000000001178455610701565b60405163f92ee8a960e01b8152600490fd5b905015866106df565b303b1591506106d7565b604085901c60ff161591506106cd565b346102c4575f3660031901126102c457610cd1604051610cab816124d9565b60058152640352e302e360dc1b6020820152604051918291602083526020830190612593565b0390f35b346102c45760203660031901126102c4576001600160a01b03610cf6612471565b165f5260046020526101e060405f206001600160401b03604051610d19816124a2565b8254926001600160801b03841682528360801c602083015260018101546001600160801b0381166040840152838160801c16606084015263ffffffff8160c01c1660808401528060e01c60a08401526002820154906001600160801b03821660c08501528160801c60e085015260046003840154936001600160801b03851661010087015263ffffffff8560801c1661012087015263ffffffff8560a01c1661014087015263ffffffff8560c01c166101608701528460e01c6101808701520154938585166101a08201526101c0868660401c16910152604051956001600160801b038116875260801c60208701526001600160801b0381166040870152848160801c16606087015263ffffffff8160c01c16608087015260e01c60a08601526001600160801b03811660c086015260801c60e08501526001600160801b03811661010085015263ffffffff8160801c1661012085015263ffffffff8160a01c1661014085015263ffffffff8160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b6102003660031901126102c4576001600160401b036101a435166101a435036102c4576101e4356001600160401b0381116102c457610ef1903690600401612566565b90610efa61279d565b610f026127cc565b5f5480340361176b5750620f42406004351161174957620f42406024351161172757620f424060443511611705576361cf99806001600160401b036101a43516106116d757335f52600660205260405f2054806101c435036116b65750604051917ff418e5fde2935aec5659dcc0d3addca54c1096967fe1a5e81cbcfc2ef0e4529a60208401523360408401526004356060840152602435608084015260443560a084015260643560c084015260843560e084015260a43561010084015260c43561012084015260e4356101408401526101043561016084015261012435610180840152610144356101a0840152610164356101c0840152610184356101e08401526001600160401b036101a435166102008401526102206101c435818501528352826102408101106001600160401b0361024085011117610aef5761108861108e9261108085610240611097970160405260208151910120611063612b43565b6042916040519161190160f01b8352600283015260228201522090565b923691612530565b90612a45565b90929192612a7f565b6002546001600160a01b039081169116036116a457335f52600460205260405f206001600160401b036004604051926110cf846124a2565b80546001600160801b038116855260801c602085015260018101546001600160801b0381166040860152838160801c16606086015263ffffffff8160c01c16608086015260e01c60a085015260028101546001600160801b03811660c086015260801c60e085015260038101546001600160801b03811661010086015263ffffffff8160801c1661012086015263ffffffff8160a01c1661014086015263ffffffff8160c01c1661016086015260e01c61018085015201548181166101a084015260401c16806101c0830152806001600160401b036101a4351611156116765750600154908115158061165f575b61161d575b50506001600160401b036101a4351642106115fd576111ed6001600160401b036101a4351642612677565b600354908181116115e057604051611204816124a2565b6001600160801b036004351681526001600160801b036024351660208201526001600160801b036044351660408201526001600160401b0360643516606082015263ffffffff60843516608082015263ffffffff60a4351660a08201526001600160801b0360c4351660c08201526001600160801b0360e4351660e08201526001600160801b03610104351661010082015263ffffffff610124351661012082015263ffffffff610144351661014082015263ffffffff610164351661016082015263ffffffff61018435166101808201526001600160401b0342166101a08201526001600160401b036101a435166101c0820152335f526004602052600460405f206001600160801b038351166001600160801b031982541617815561134d6001600160801b0360208501511682906001600160801b0382549181199060801b169116179055565b6040830151606084015160808086015160a087015160e01b6001600160e01b0319166001600160801b039094169290911b67ffffffffffffffff60801b169190911763ffffffff60c01b60c09290921b919091161717600182015560c083015160e084015160801b6fffffffffffffffffffffffffffffffff19166001600160801b03919091161760028201556101008301516003820180546101208601516101408701516101608801516001600160e01b03199093166001600160801b03959095169490941760809190911b63ffffffff60801b161760a09390931b63ffffffff60a01b169290921760c09290921b63ffffffff60c01b169190911790556101808301516003820180546001600160e01b031660e09290921b6001600160e01b03191691909117905501906001600160401b036101a0820151166fffffffffffffffff00000000000000006101c0845493015160401b16916001600160801b031916171790556040516114c081612487565b6001600160801b03600435168152602081016001600160401b03421681526115466001600160401b036040840192816101a435168452335f5260056020526001600160801b0360405f209551166001600160801b0319865416178555511683908154906001600160401b0360801b9060801b16906001600160401b0360801b1916179055565b5181546001600160c01b031660c09190911b6001600160c01b031916179055600660205260405f2080546115799061276f565b90556040517f893ee2884748c042330e2dba3ef220312d770a54d6d902d1c7612d9b434ab0a73391806115c14234600435846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255602060405160018152f35b60449160405191635ee1691b60e11b835260048301526024820152fd5b604460035460405190635ee1691b60e11b82525f60048301526024820152fd5b6001600160401b036101a06116359201511642612677565b90808210156111c25760249161164a91612677565b604051906365a85b4760e01b82526004820152fd5b506001600160401b036101a08201511615156111bd565b604051634ef2701560e01b81526001600160401b036101a43581166004830152919091166024820152604490fd5b604051632057875960e21b8152600490fd5b604490604051906306427aeb60e01b82526101c43560048301526024820152fd5b6040516331b3a51360e01b81526101a4356001600160401b031660048201526361cf99806024820152604490fd5b604051635467da8d60e11b8152604480356004830152620f4240602483015290fd5b6044604051635467da8d60e11b81526024356004820152620f42406024820152fd5b6044604051635467da8d60e11b81526004356004820152620f42406024820152fd5b60449060405190631e0bd6c160e31b82523460048301526024820152fd5b346102c4575f3660031901126102c4575f80516020612d68833981519152546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c4577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005415806118ec575b156118af576118036128c4565b61180b612986565b6040516020808201928284106001600160401b03851117610aef57916020611864859461185697966040525f8452604051978897600f60f81b895260e0858a015260e0890190612593565b908782036040890152612593565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061189857505050500390f35b835185528695509381019392810192600101611889565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10154156117f6565b346102c4575f3660031901126102c45761192d61271a565b005b346102c45760203660031901126102c4576001600160a01b03611950612471565b165f526006602052602060405f2054604051908152f35b346102c4575f3660031901126102c4575f80516020612de883398151915254336001600160a01b03909116036119a05761192d33612821565b60405163118cdaa760e01b8152336004820152602490fd5b346102c4575f3660031901126102c45760206040516102588152f35b346102c4575f3660031901126102c4576119ec61277d565b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d68833981519152805491821690555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c457611a7f61277d565b611a876127f6565b611a8f61279d565b8015610592577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695602047611ac48115156125d1565b611add5f80808085895af1611ad761260a565b50612639565b604051908152a260015f80516020612dc883398151915255005b346102c4575f3660031901126102c457602060ff5f80516020612da883398151915254166040519015158152f35b60803660031901126102c457602460043581356001600160401b03808216908183036102c45760448035956064358381116102c457611b68903690600401612566565b90611b7161279d565b611b796127cc565b5f54803403611e925750620f4240808911611e7657506361cf9980808710611e5a5750335f5260209860068a5260405f2054808203611e3e57509161108861108e926110808b8d611c1c97604051918201927fd0a0509035718ad455d593d20a83743ce5d6920842ee8cb1f4d76d7197a7bcb8845233604084015260608301528c608083015260a082015260a08152611c11816124be565b519020611063612b43565b6002546001600160a01b039081169116036116a457335f526005875260405f20946040805196611c4b88612487565b54916001600160801b039788841681528a810193878160801c16855260c01c928391015281871115611e15575050600154908482151580611e09575b611de5575b505050834210611dc957611ca08442612677565b9060035490818311611db15750505050611d1d9060405193611cc185612487565b85811685524282168786019081526040808701958652335f90815260058a522095518654915167ffffffffffffffff60801b1991909316166001600160c01b031990911617911660801b67ffffffffffffffff60801b16178355565b5181546001600160c01b031660c09190911b6001600160c01b0319161790556006825260405f208054611d4f9061276f565b90556040517fd1ab2b2d603dc80565da0286deeb7d3699341e28d8234689428dbe9b7d58c8ac339180611d95423487846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255604051908152f35b60405192635ee1691b60e11b84526004840152820152fd5b600354604051635ee1691b60e11b81525f600482015291820152fd5b611df191511642612677565b90808210611dff5784611c8c565b9061164a91612677565b50808251161515611c87565b604051634ef2701560e01b81526001600160401b03918216600482015291166024820152604490fd5b85925084604051926306427aeb60e01b84526004840152820152fd5b86859185604051926331b3a51360e01b84526004840152820152fd5b8885918560405192635467da8d60e11b84526004840152820152fd5b604051631e0bd6c160e31b8152346004820152938401525050fd5b346102c4575f3660031901126102c4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611f175760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b60403660031901126102c457611f3d612471565b6024356001600160401b0381116102c457366023820112156102c457611f6d903690602481600401359101612530565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156120ff575b50611f1757611fb161277d565b8116906040516352d1902d60e01b8152602081600481865afa5f91816120cb575b50611ff057604051634c9c8ce360e01b815260048101849052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc929192908181036120b35750823b1561209a5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561208157505f8083602061192d95519101845af461207b61260a565b91612ce4565b9150503461208b57005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091506020813d6020116120f7575b816120e7602093836124f4565b810103126102c457519085611fd2565b3d91506120da565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141584611fa4565b346102c45760203660031901126102c457602061214e600435611063612b43565b604051908152f35b346102c4575f3660031901126102c4576020600154604051908152f35b346102c4575f3660031901126102c45761218b61277d565b6121936127f6565b5f80516020612da883398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b346102c4575f3660031901126102c4576020600354604051908152f35b346102c45760203660031901126102c4576040612215612210612471565b612698565b825191151582526020820152f35b346102c45760203660031901126102c45760043561223f61277d565b7f0000000000000000000000000000000000000000000000000000000000000000808211612297577f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76602083805f55604051908152a1005b604051631e0bd6c160e31b815260048101929092526024820152604490fd5b346102c4575f3660031901126102c4576020604051620f42408152f35b346102c4575f3660031901126102c45760205f54604051908152f35b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c45761231d61277d565b61232561279d565b8015610592577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364602047611ac48115156125d1565b346102c45760203660031901126102c45760043561237661277d565b801515806123ed575b156123b5576020817fed1b8a3acdd1de20e69e80caa4b3762f856b4e74e0fad35189af650e20c3085a92600355604051908152a1005b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69644d617853696741676560801b6044820152606490fd5b506201518081111561237f565b346102c45760203660031901126102c45760043561241661277d565b62015180808211612452577fad8a71533bfa097e1676af0fbe86477cb4b1a4c3456cc493a1253ae5d9b7cf2d60208380600155604051908152a1005b6040516306115faf60e11b815260048101929092526024820152604490fd5b600435906001600160a01b03821682036102c457565b606081019081106001600160401b03821117610aef57604052565b6101e081019081106001600160401b03821117610aef57604052565b60c081019081106001600160401b03821117610aef57604052565b604081019081106001600160401b03821117610aef57604052565b90601f801991011681019081106001600160401b03821117610aef57604052565b6001600160401b038111610aef57601f01601f191660200190565b92919261253c82612515565b9161254a60405193846124f4565b8294818452818301116102c4578281602093845f960137010152565b9181601f840112156102c4578235916001600160401b0383116102c457602083818601950101116102c457565b91908251928382525f5b8481106125bd575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161259d565b156125d857565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b3d15612634573d9061261b82612515565b9161262960405193846124f4565b82523d5f602084013e565b606090565b1561264057565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b9190820391821161268457565b634e487b7160e01b5f52601160045260245ffd5b6001549081156127115760018060a01b03165f52600560205260405f20604051906126c282612487565b54906001600160801b038216815260406001600160401b038360801c169283602084015260c01c9101528015612711576126fc9042612677565b818110156127115761270d91612677565b5f91565b50506001905f90565b61272261277d565b61272a6127cc565b5f80516020612da8833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1565b5f1981146126845760010190565b5f80516020612d68833981519152546001600160a01b031633036119a057565b5f80516020612dc883398151915260028154146127ba5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff5f80516020612da883398151915254166127e457565b60405163d93c066560e01b8152600490fd5b60ff5f80516020612da883398151915254161561280f57565b604051638dfc202b60e01b8152600490fd5b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d6883398151915280549182166001600160a01b0393841690811790915591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600182811c921680156128ba575b60208310146128a657565b634e487b7160e01b5f52602260045260245ffd5b91607f169161289b565b604051905f825f80516020612d48833981519152918254926128e58461288c565b808452936020916001918281169081156129605750600114612913575b505050612911925003836124f4565b565b5f9081525f80516020612d888339815191529590935091905b82841061294857506129119450505081016020015f8080612902565b8554888501830152948501948794509281019261292c565b925050506020925061291194915060ff191682840152151560051b8201015f8080612902565b604051905f827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103918254926129ba8461288c565b8084529360209160019182811690811561296057506001146129e557505050612911925003836124f4565b5f9081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410612a2d57506129119450505081016020015f8080612902565b85548885018301529485019487945092810192612a11565b8151919060418303612a7557612a6e9250602082015190606060408401519301515f1a90612ba8565b9192909190565b50505f9160029190565b6004811015612aee5780612a91575050565b60018103612aab5760405163f645eedf60e01b8152600490fd5b60028103612acc5760405163fce698f760e01b815260048101839052602490fd5b600314612ad65750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612b3157565b604051631afcd79f60e31b8152600490fd5b612b4b612c35565b612b53612c9f565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152612ba2816124be565b51902090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612c2a579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612c1f575f516001600160a01b03811615612c1557905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b612c3d6128c4565b8051908115612c4d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015612c7a5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b612ca7612986565b8051908115612cb7576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612c7a5790565b90612d0b5750805115612cf957805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612d3e575b612d1c575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612d1456fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930042ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57dcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00a2646970667358221220c9e418977726284d1ff300ba9f262ea3ccb7ef8e2fd1432a9157447ed4773c0b64736f6c63430008170033",
                "sourceMap": "1040:15564:52:-:0;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1171:4:27;1163:13;;5002:12:52;;4998:49;;5057:17;;8837:64:26;1040:15564:52;;;;;;;;;7896:76:26;;1040:15564:52;;;;7985:34:26;7981:146;;-1:-1:-1;1040:15564:52;;;;;;;;1163:13:27;1040:15564:52;;;;;;;;;;5057:17;1040:15564;;;;;;;;;;;;;;;;7981:146:26;-1:-1:-1;;;;;;1040:15564:52;;;;;;;;;;;;;8087:29:26;;1040:15564:52;;8087:29:26;7981:146;;;;;7896:76;1040:15564:52;;-1:-1:-1;;;7938:23:26;;;;;4998:49:52;1040:15564;;-1:-1:-1;;;5016:31:52;;1040:15564;5016:31;;;1040:15564;;;;;;;;;;;;;5016:31;1040:15564;-1:-1:-1;1040:15564:52;;;;;;-1:-1:-1;1040:15564:52;;;;;-1:-1:-1;1040:15564:52",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "60806040526004361015610085575b36156100475760405162461bcd60e51b815260206004820152600b60248201526a4e6f2066616c6c6261636b60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275111a5c9958dd08115512081b9bdd08185b1b1bddd95960521b6044820152606490fd5b5f3560e01c806310cb729f146123fa578063110b32851461235a578063164e68de146122ef5780631904863c146122d357806327ff6223146122b6578063319a2cbb1461222357806333917ca9146121f257806333b3e099146121d55780633f4ba83a146121735780633fb19a53146121565780634980f2881461212d5780634f1ef28614611f2957806351858e271461191557806352d1902d14611ead5780635836d17b14611b255780635c975abb14611af75780636ff1c9bc14611a51578063715018a6146119d4578063738fc2f9146119b857806379ba5097146119675780637ecebe001461192f5780638456cb591461191557806384b0196e146117bd5780638da5cb5b146117895780639b50c5f914610eae578063a23195ed14610cd5578063ad3cb1cc14610c8c578063b4988fd014610662578063bc063e1a14610628578063c771909c14610600578063c8910913146105a4578063d279b0ca1461051c578063d47875d0146104ac578063d91a9458146103bb578063e30c397814610387578063ee4eb93d14610369578063f2fde38b146102e5578063fede6114146102c85763ffc9896b0361000e57346102c45760203660031901126102c45760806001600160a01b03610259612471565b16805f52600560205260405f2090604080519261027584612487565b54916001600160801b038316938481526001600160401b0384871c169384602083015260c01c92839101525f52600660205260405f205491604051938452602084015260408301526060820152f35b5f80fd5b346102c4575f3660031901126102c4576020604051620151808152f35b346102c45760203660031901126102c4576102fe612471565b61030661277d565b5f80516020612de883398151915280546001600160a01b0319166001600160a01b039283169081179091555f80516020612d68833981519152549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b346102c4575f3660031901126102c45760206040516361cf99808152f35b346102c4575f3660031901126102c4575f80516020612de8833981519152546040516001600160a01b039091168152602090f35b346102c45760203660031901126102c4576001600160a01b036103dc612471565b165f5260046020526101e060405f208054906001600160801b03906001810154906001600160401b039263ffffffff906002830154600460038501549401549460405197838116895260801c60208901528281166040890152868160801c166060890152838160c01c16608089015260e01c60a088015281811660c088015260801c60e08701528216610100860152808260801c16610120860152808260a01c166101408601528160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b346102c45760203660031901126102c4576001600160a01b036104cd612471565b165f5260056020526040805f208151906104e682612487565b546001600160801b03811691828152836001600160401b038360801c169283602084015260c01c91015282519182526020820152f35b346102c45760203660031901126102c457610535612471565b61053d61277d565b6001600160a01b03168015610592576020817f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b60405163d92e233d60e01b8152600490fd5b346102c45760203660031901126102c4576001600160a01b036105c5612471565b165f526005602052606060405f2054604051906001600160801b03811682526001600160401b038160801c16602083015260c01c6040820152f35b346102c4575f3660031901126102c4576002546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c45760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102c45760603660031901126102c4576001600160a01b0360243581811681036102c457816044351680604435036102c4577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00918254916001600160401b03831680159081610c7c575b6001149081610c72575b159081610c69575b50610c575760016001600160401b0319841617845560ff8360401c1615610c38575b848216156105925715610592577f00000000000000000000000000000000000000000000000000000000000000008060043511610c185750610741612b02565b610749612b02565b610751612b02565b5f80516020612da8833981519152805460ff1916905561076f612b02565b610777612b02565b60015f80516020612dc88339815191525560405193610795856124d9565b600e85526d42617365426164676553636f726560901b6020860152604051946107bd866124d9565b60018652603160f81b60208701526107d3612b02565b6107db612b02565b8051906001600160401b038211610aef5781906108055f80516020612d488339815191525461288c565b601f8111610b9a575b50602090601f8311600114610b0e575f92610b03575b50508160011b915f199060031b1c1916175f80516020612d48833981519152555b84516001600160401b038111610aef577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10390610881825461288c565b601f8111610a8d575b506020601f82116001146109e4579181602094927f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73969460ff999a5f926109d9575b50508160011b915f199060031b1c19161790555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015561092e612b02565b6004355f55600280546001600160a01b031916838316179055601e60015561025860035561095d604435612821565b60405191168152a17f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7660206040516004358152a160401c161561099c57005b68ff00000000000000001981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508a806108cc565b601f19821697835f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75985f5b818110610a7557509260ff98997f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73979593600193836020999710610a5d575b505050811b0190556108e0565b01515f1960f88460031b161c191690558a8080610a50565b838301518b556001909a019960209384019301610a11565b825f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f830160051c81019160208410610ae5575b601f0160051c01905b818110610ada575061088a565b5f8155600101610acd565b9091508190610ac4565b634e487b7160e01b5f52604160045260245ffd5b015190508780610824565b92505f80516020612d488339815191525f525f80516020612d88833981519152905f935b601f1984168510610b7f576001945083601f19811610610b67575b505050811b015f80516020612d4883398151915255610845565b01515f1960f88460031b161c19169055878080610b4d565b81810151835560209485019460019093019290910190610b32565b9091505f80516020612d488339815191525f52601f830160051c5f80516020612d88833981519152019060208410610c03575b90601f8493920160051c5f80516020612d8883398151915201905b818110610bf5575061080e565b5f8155849350600101610be8565b5f80516020612d888339815191529150610bcd565b60449060405190631e0bd6c160e31b825260043560048301526024820152fd5b68ffffffffffffffffff19831668010000000000000001178455610701565b60405163f92ee8a960e01b8152600490fd5b905015866106df565b303b1591506106d7565b604085901c60ff161591506106cd565b346102c4575f3660031901126102c457610cd1604051610cab816124d9565b60058152640352e302e360dc1b6020820152604051918291602083526020830190612593565b0390f35b346102c45760203660031901126102c4576001600160a01b03610cf6612471565b165f5260046020526101e060405f206001600160401b03604051610d19816124a2565b8254926001600160801b03841682528360801c602083015260018101546001600160801b0381166040840152838160801c16606084015263ffffffff8160c01c1660808401528060e01c60a08401526002820154906001600160801b03821660c08501528160801c60e085015260046003840154936001600160801b03851661010087015263ffffffff8560801c1661012087015263ffffffff8560a01c1661014087015263ffffffff8560c01c166101608701528460e01c6101808701520154938585166101a08201526101c0868660401c16910152604051956001600160801b038116875260801c60208701526001600160801b0381166040870152848160801c16606087015263ffffffff8160c01c16608087015260e01c60a08601526001600160801b03811660c086015260801c60e08501526001600160801b03811661010085015263ffffffff8160801c1661012085015263ffffffff8160a01c1661014085015263ffffffff8160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b6102003660031901126102c4576001600160401b036101a435166101a435036102c4576101e4356001600160401b0381116102c457610ef1903690600401612566565b90610efa61279d565b610f026127cc565b5f5480340361176b5750620f42406004351161174957620f42406024351161172757620f424060443511611705576361cf99806001600160401b036101a43516106116d757335f52600660205260405f2054806101c435036116b65750604051917ff418e5fde2935aec5659dcc0d3addca54c1096967fe1a5e81cbcfc2ef0e4529a60208401523360408401526004356060840152602435608084015260443560a084015260643560c084015260843560e084015260a43561010084015260c43561012084015260e4356101408401526101043561016084015261012435610180840152610144356101a0840152610164356101c0840152610184356101e08401526001600160401b036101a435166102008401526102206101c435818501528352826102408101106001600160401b0361024085011117610aef5761108861108e9261108085610240611097970160405260208151910120611063612b43565b6042916040519161190160f01b8352600283015260228201522090565b923691612530565b90612a45565b90929192612a7f565b6002546001600160a01b039081169116036116a457335f52600460205260405f206001600160401b036004604051926110cf846124a2565b80546001600160801b038116855260801c602085015260018101546001600160801b0381166040860152838160801c16606086015263ffffffff8160c01c16608086015260e01c60a085015260028101546001600160801b03811660c086015260801c60e085015260038101546001600160801b03811661010086015263ffffffff8160801c1661012086015263ffffffff8160a01c1661014086015263ffffffff8160c01c1661016086015260e01c61018085015201548181166101a084015260401c16806101c0830152806001600160401b036101a4351611156116765750600154908115158061165f575b61161d575b50506001600160401b036101a4351642106115fd576111ed6001600160401b036101a4351642612677565b600354908181116115e057604051611204816124a2565b6001600160801b036004351681526001600160801b036024351660208201526001600160801b036044351660408201526001600160401b0360643516606082015263ffffffff60843516608082015263ffffffff60a4351660a08201526001600160801b0360c4351660c08201526001600160801b0360e4351660e08201526001600160801b03610104351661010082015263ffffffff610124351661012082015263ffffffff610144351661014082015263ffffffff610164351661016082015263ffffffff61018435166101808201526001600160401b0342166101a08201526001600160401b036101a435166101c0820152335f526004602052600460405f206001600160801b038351166001600160801b031982541617815561134d6001600160801b0360208501511682906001600160801b0382549181199060801b169116179055565b6040830151606084015160808086015160a087015160e01b6001600160e01b0319166001600160801b039094169290911b67ffffffffffffffff60801b169190911763ffffffff60c01b60c09290921b919091161717600182015560c083015160e084015160801b6fffffffffffffffffffffffffffffffff19166001600160801b03919091161760028201556101008301516003820180546101208601516101408701516101608801516001600160e01b03199093166001600160801b03959095169490941760809190911b63ffffffff60801b161760a09390931b63ffffffff60a01b169290921760c09290921b63ffffffff60c01b169190911790556101808301516003820180546001600160e01b031660e09290921b6001600160e01b03191691909117905501906001600160401b036101a0820151166fffffffffffffffff00000000000000006101c0845493015160401b16916001600160801b031916171790556040516114c081612487565b6001600160801b03600435168152602081016001600160401b03421681526115466001600160401b036040840192816101a435168452335f5260056020526001600160801b0360405f209551166001600160801b0319865416178555511683908154906001600160401b0360801b9060801b16906001600160401b0360801b1916179055565b5181546001600160c01b031660c09190911b6001600160c01b031916179055600660205260405f2080546115799061276f565b90556040517f893ee2884748c042330e2dba3ef220312d770a54d6d902d1c7612d9b434ab0a73391806115c14234600435846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255602060405160018152f35b60449160405191635ee1691b60e11b835260048301526024820152fd5b604460035460405190635ee1691b60e11b82525f60048301526024820152fd5b6001600160401b036101a06116359201511642612677565b90808210156111c25760249161164a91612677565b604051906365a85b4760e01b82526004820152fd5b506001600160401b036101a08201511615156111bd565b604051634ef2701560e01b81526001600160401b036101a43581166004830152919091166024820152604490fd5b604051632057875960e21b8152600490fd5b604490604051906306427aeb60e01b82526101c43560048301526024820152fd5b6040516331b3a51360e01b81526101a4356001600160401b031660048201526361cf99806024820152604490fd5b604051635467da8d60e11b8152604480356004830152620f4240602483015290fd5b6044604051635467da8d60e11b81526024356004820152620f42406024820152fd5b6044604051635467da8d60e11b81526004356004820152620f42406024820152fd5b60449060405190631e0bd6c160e31b82523460048301526024820152fd5b346102c4575f3660031901126102c4575f80516020612d68833981519152546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c4577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005415806118ec575b156118af576118036128c4565b61180b612986565b6040516020808201928284106001600160401b03851117610aef57916020611864859461185697966040525f8452604051978897600f60f81b895260e0858a015260e0890190612593565b908782036040890152612593565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061189857505050500390f35b835185528695509381019392810192600101611889565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10154156117f6565b346102c4575f3660031901126102c45761192d61271a565b005b346102c45760203660031901126102c4576001600160a01b03611950612471565b165f526006602052602060405f2054604051908152f35b346102c4575f3660031901126102c4575f80516020612de883398151915254336001600160a01b03909116036119a05761192d33612821565b60405163118cdaa760e01b8152336004820152602490fd5b346102c4575f3660031901126102c45760206040516102588152f35b346102c4575f3660031901126102c4576119ec61277d565b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d68833981519152805491821690555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c457611a7f61277d565b611a876127f6565b611a8f61279d565b8015610592577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695602047611ac48115156125d1565b611add5f80808085895af1611ad761260a565b50612639565b604051908152a260015f80516020612dc883398151915255005b346102c4575f3660031901126102c457602060ff5f80516020612da883398151915254166040519015158152f35b60803660031901126102c457602460043581356001600160401b03808216908183036102c45760448035956064358381116102c457611b68903690600401612566565b90611b7161279d565b611b796127cc565b5f54803403611e925750620f4240808911611e7657506361cf9980808710611e5a5750335f5260209860068a5260405f2054808203611e3e57509161108861108e926110808b8d611c1c97604051918201927fd0a0509035718ad455d593d20a83743ce5d6920842ee8cb1f4d76d7197a7bcb8845233604084015260608301528c608083015260a082015260a08152611c11816124be565b519020611063612b43565b6002546001600160a01b039081169116036116a457335f526005875260405f20946040805196611c4b88612487565b54916001600160801b039788841681528a810193878160801c16855260c01c928391015281871115611e15575050600154908482151580611e09575b611de5575b505050834210611dc957611ca08442612677565b9060035490818311611db15750505050611d1d9060405193611cc185612487565b85811685524282168786019081526040808701958652335f90815260058a522095518654915167ffffffffffffffff60801b1991909316166001600160c01b031990911617911660801b67ffffffffffffffff60801b16178355565b5181546001600160c01b031660c09190911b6001600160c01b0319161790556006825260405f208054611d4f9061276f565b90556040517fd1ab2b2d603dc80565da0286deeb7d3699341e28d8234689428dbe9b7d58c8ac339180611d95423487846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255604051908152f35b60405192635ee1691b60e11b84526004840152820152fd5b600354604051635ee1691b60e11b81525f600482015291820152fd5b611df191511642612677565b90808210611dff5784611c8c565b9061164a91612677565b50808251161515611c87565b604051634ef2701560e01b81526001600160401b03918216600482015291166024820152604490fd5b85925084604051926306427aeb60e01b84526004840152820152fd5b86859185604051926331b3a51360e01b84526004840152820152fd5b8885918560405192635467da8d60e11b84526004840152820152fd5b604051631e0bd6c160e31b8152346004820152938401525050fd5b346102c4575f3660031901126102c4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611f175760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b60403660031901126102c457611f3d612471565b6024356001600160401b0381116102c457366023820112156102c457611f6d903690602481600401359101612530565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156120ff575b50611f1757611fb161277d565b8116906040516352d1902d60e01b8152602081600481865afa5f91816120cb575b50611ff057604051634c9c8ce360e01b815260048101849052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc929192908181036120b35750823b1561209a5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561208157505f8083602061192d95519101845af461207b61260a565b91612ce4565b9150503461208b57005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091506020813d6020116120f7575b816120e7602093836124f4565b810103126102c457519085611fd2565b3d91506120da565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141584611fa4565b346102c45760203660031901126102c457602061214e600435611063612b43565b604051908152f35b346102c4575f3660031901126102c4576020600154604051908152f35b346102c4575f3660031901126102c45761218b61277d565b6121936127f6565b5f80516020612da883398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b346102c4575f3660031901126102c4576020600354604051908152f35b346102c45760203660031901126102c4576040612215612210612471565b612698565b825191151582526020820152f35b346102c45760203660031901126102c45760043561223f61277d565b7f0000000000000000000000000000000000000000000000000000000000000000808211612297577f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76602083805f55604051908152a1005b604051631e0bd6c160e31b815260048101929092526024820152604490fd5b346102c4575f3660031901126102c4576020604051620f42408152f35b346102c4575f3660031901126102c45760205f54604051908152f35b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c45761231d61277d565b61232561279d565b8015610592577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364602047611ac48115156125d1565b346102c45760203660031901126102c45760043561237661277d565b801515806123ed575b156123b5576020817fed1b8a3acdd1de20e69e80caa4b3762f856b4e74e0fad35189af650e20c3085a92600355604051908152a1005b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69644d617853696741676560801b6044820152606490fd5b506201518081111561237f565b346102c45760203660031901126102c45760043561241661277d565b62015180808211612452577fad8a71533bfa097e1676af0fbe86477cb4b1a4c3456cc493a1253ae5d9b7cf2d60208380600155604051908152a1005b6040516306115faf60e11b815260048101929092526024820152604490fd5b600435906001600160a01b03821682036102c457565b606081019081106001600160401b03821117610aef57604052565b6101e081019081106001600160401b03821117610aef57604052565b60c081019081106001600160401b03821117610aef57604052565b604081019081106001600160401b03821117610aef57604052565b90601f801991011681019081106001600160401b03821117610aef57604052565b6001600160401b038111610aef57601f01601f191660200190565b92919261253c82612515565b9161254a60405193846124f4565b8294818452818301116102c4578281602093845f960137010152565b9181601f840112156102c4578235916001600160401b0383116102c457602083818601950101116102c457565b91908251928382525f5b8481106125bd575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161259d565b156125d857565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b3d15612634573d9061261b82612515565b9161262960405193846124f4565b82523d5f602084013e565b606090565b1561264057565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b9190820391821161268457565b634e487b7160e01b5f52601160045260245ffd5b6001549081156127115760018060a01b03165f52600560205260405f20604051906126c282612487565b54906001600160801b038216815260406001600160401b038360801c169283602084015260c01c9101528015612711576126fc9042612677565b818110156127115761270d91612677565b5f91565b50506001905f90565b61272261277d565b61272a6127cc565b5f80516020612da8833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1565b5f1981146126845760010190565b5f80516020612d68833981519152546001600160a01b031633036119a057565b5f80516020612dc883398151915260028154146127ba5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff5f80516020612da883398151915254166127e457565b60405163d93c066560e01b8152600490fd5b60ff5f80516020612da883398151915254161561280f57565b604051638dfc202b60e01b8152600490fd5b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d6883398151915280549182166001600160a01b0393841690811790915591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600182811c921680156128ba575b60208310146128a657565b634e487b7160e01b5f52602260045260245ffd5b91607f169161289b565b604051905f825f80516020612d48833981519152918254926128e58461288c565b808452936020916001918281169081156129605750600114612913575b505050612911925003836124f4565b565b5f9081525f80516020612d888339815191529590935091905b82841061294857506129119450505081016020015f8080612902565b8554888501830152948501948794509281019261292c565b925050506020925061291194915060ff191682840152151560051b8201015f8080612902565b604051905f827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103918254926129ba8461288c565b8084529360209160019182811690811561296057506001146129e557505050612911925003836124f4565b5f9081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410612a2d57506129119450505081016020015f8080612902565b85548885018301529485019487945092810192612a11565b8151919060418303612a7557612a6e9250602082015190606060408401519301515f1a90612ba8565b9192909190565b50505f9160029190565b6004811015612aee5780612a91575050565b60018103612aab5760405163f645eedf60e01b8152600490fd5b60028103612acc5760405163fce698f760e01b815260048101839052602490fd5b600314612ad65750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612b3157565b604051631afcd79f60e31b8152600490fd5b612b4b612c35565b612b53612c9f565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152612ba2816124be565b51902090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612c2a579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612c1f575f516001600160a01b03811615612c1557905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b612c3d6128c4565b8051908115612c4d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015612c7a5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b612ca7612986565b8051908115612cb7576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612c7a5790565b90612d0b5750805115612cf957805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612d3e575b612d1c575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612d1456fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930042ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57dcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00a2646970667358221220c9e418977726284d1ff300ba9f262ea3ccb7ef8e2fd1432a9157447ed4773c0b64736f6c63430008170033",
                "sourceMap": "1040:15564:52:-:0;;;;;;;;;-1:-1:-1;1040:15564:52;;;;;;-1:-1:-1;;;16578:21:52;;1040:15564;;16578:21;;1040:15564;;;;;;-1:-1:-1;;;1040:15564:52;;;;;;16578:21;1040:15564;;;-1:-1:-1;;;16508:32:52;;1040:15564;;16508:32;;1040:15564;;;;;;-1:-1:-1;;;1040:15564:52;;;;;;16508:32;1040:15564;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4430:390;1040:15564;4430:390;;;1040:15564;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;;-1:-1:-1;;;;;1040:15564:52;;:::i;:::-;;;;;14266:8;1040:15564;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1040:15564:52;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;;;;;;;;14367:6;1040:15564;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;;;;1551:6;1040:15564;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;;;:::i;:::-;2303:62:25;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1040:15564:52;;-1:-1:-1;;;;;;1040:15564:52;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;-1:-1:-1;;;;;;;;;;;4239:91:52;1040:15564;;;2238:43:24;-1:-1:-1;;2238:43:24;1040:15564:52;;;;;;;-1:-1:-1;;1040:15564:52;;;;;;;1481:10;1040:15564;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;-1:-1:-1;;;;;;;;;;;4239:91:52;1040:15564;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;-1:-1:-1;;;;;1040:15564:52;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;2759:55:52;;;;1040:15564;;-1:-1:-1;;;;;1040:15564:52;;2759:55;;;;1040:15564;;2759:55;;;1040:15564;2759:55;;1040:15564;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;-1:-1:-1;;;;;1040:15564:52;;:::i;:::-;;;;13977:8;1040:15564;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1040:15564:52;;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;;;:::i;:::-;2303:62:25;;:::i;:::-;-1:-1:-1;;;;;1040:15564:52;6062:21;;6058:47;;1040:15564;;6156:22;1040:15564;;;;6115:26;1040:15564;;;6115:26;1040:15564;;;;;;6156:22;1040:15564;6058:47;1040:15564;;-1:-1:-1;;;6092:13:52;;1040:15564;;6092:13;1040:15564;;;;;;-1:-1:-1;;1040:15564:52;;;;-1:-1:-1;;;;;1040:15564:52;;:::i;:::-;;;;2820:44;1040:15564;;;;;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;1736:31;1040:15564;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;;;;1589:32;1040:15564;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;;;;;;;;8837:64:26;1040:15564:52;;;;-1:-1:-1;;;;;1040:15564:52;;4726:16:26;;:34;;;;1040:15564:52;;4790:16:26;:50;;;;1040:15564:52;4855:13:26;:30;;;;1040:15564:52;4851:91:26;;;1040:15564:52;-1:-1:-1;;;;;4430:390:52;;;;;;1040:15564;;;;;4301:16:26;4979:67;;1040:15564:52;;;;5254:21;5250:47;;5311:20;5307:46;;5379:7;1040:15564;;;5367:19;5363:62;;6893:76:26;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1040:15564:52;;-1:-1:-1;;1040:15564:52;;;6893:76:26;;:::i;:::-;;;:::i;:::-;1040:15564:52;-1:-1:-1;;;;;;;;;;;1040:15564:52;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1040:15564:52;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1040:15564:52;;;;6893:76:26;;:::i;:::-;;;:::i;:::-;1040:15564:52;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;-1:-1:-1;;;;;;;;;;;1040:15564:52;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1040:15564:52;;;;-1:-1:-1;;;;;1040:15564:52;;;;3790:10:31;1040:15564:52;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5891:22;1040:15564;;;;;;;;;;;;;;;;;;;3790:10:31;1040:15564:52;;;;;;;;;2806:64:31;1040:15564:52;;3902:16:31;1040:15564:52;6893:76:26;;:::i;:::-;1040:15564:52;;;;3766:7:31;1040:15564:52;;-1:-1:-1;;;;;;1040:15564:52;;;;;;;5727:2;-1:-1:-1;1040:15564:52;1374:10;3790::31;1040:15564:52;5868:6;1040:15564;;5868:6;:::i;:::-;1040:15564;;;;;;5891:22;5928:21;1040:15564;;;;;;;5928:21;1040:15564;;;4301:16:26;5066:101;;1040:15564:52;5066:101:26;1040:15564:52;;;;;;;5142:14:26;1040:15564:52;;;;;;5142:14:26;1040:15564:52;;;;;-1:-1:-1;1040:15564:52;;;;;;;;;;;;;;;;;;;;;;;;;;;5891:22;1040:15564;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3790:10:31;1040:15564:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1040:15564:52;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1040:15564:52;;;;;;;-1:-1:-1;;;;;;;;;;;1040:15564:52;;-1:-1:-1;;;;;;;;;;;1040:15564:52;;;;-1:-1:-1;;1040:15564:52;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1040:15564:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1040:15564:52;;;;;;;-1:-1:-1;;;;;;;;;;;1040:15564:52;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1040:15564:52;;;;;;;;;;;;;;;;;-1:-1:-1;1040:15564:52;;;;;-1:-1:-1;;;;;;;;;;;1040:15564:52;-1:-1:-1;1040:15564:52;;5363:62;1040:15564;;;;6288:28;;;;5395:30;;1040:15564;;;5395:30;;1040:15564;;;;;5395:30;4979:67:26;-1:-1:-1;;1040:15564:52;;;;;;4979:67:26;;4851:91;1040:15564:52;;-1:-1:-1;;;4908:23:26;;1040:15564:52;;4908:23:26;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:26;;4726:34;1040:15564:52;;;;;;4301:16:26;;-1:-1:-1;4726:34:26;;1040:15564:52;;;;;;-1:-1:-1;;1040:15564:52;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1040:15564:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;-1:-1:-1;;;;;1040:15564:52;;:::i;:::-;;;;;;;4430:390;1040:15564;;;-1:-1:-1;;;;;1040:15564:52;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;4430:390;;1040:15564;4430:390;;;1040:15564;-1:-1:-1;;;;;1040:15564:52;;;4430:390;;1040:15564;;;;;;4430:390;;;1040:15564;;;;;;;4430:390;;;1040:15564;;;4430:390;;;;;;;1040:15564;;-1:-1:-1;;;;;1040:15564:52;;;4430:390;;1040:15564;;;;;4430:390;;1040:15564;;4430:390;;;1040:15564;;-1:-1:-1;;;;;1040:15564:52;;4430:390;;;1040:15564;;;;;;4430:390;;;;1040:15564;;4430:390;1040:15564;;4430:390;;;;1040:15564;;;;;4430:390;;;;1040:15564;;;4430:390;;;;;1040:15564;;;;;4430:390;;;1040:15564;4430:390;1040:15564;;;;;4430:390;;1040:15564;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;4430:390;1040:15564;;;;;;;;;;;;;;4430:390;1040:15564;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;-1:-1:-1;;;;;1040:15564:52;;4430:390;1040:15564;;;;;;;;4430:390;1040:15564;;;;;4430:390;1040:15564;;4430:390;1040:15564;;;;;;;;4430:390;1040:15564;;;;;4430:390;1040:15564;;;;;;4430:390;1040:15564;;;;;;4430:390;1040:15564;;;;;;;-1:-1:-1;;1040:15564:52;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;:::i;:::-;3217:103:30;;;:::i;:::-;2281:72:29;;:::i;:::-;1040:15564:52;;7726:9;;:21;7722:65;;1040:15564;1426:9;1040:15564;;7801:22;7797:70;;1426:9;1040:15564;;7881:21;7877:68;;1426:9;1040:15564;;7959:25;7955:76;;1481:10;-1:-1:-1;;;;;1040:15564:52;;;8045:24;8041:76;;8147:10;1040:15564;;8140:6;1040:15564;;;;;;;;;8131:27;8127:79;;1040:15564;;;8299:491;4430:390;1040:15564;8299:491;;1040:15564;8147:10;1040:15564;4430:390;;1040:15564;;;;4430:390;;1040:15564;;;;4430:390;;1040:15564;;;;4430:390;;1040:15564;;;;4430:390;;1040:15564;;;;4430:390;;1040:15564;;;;4430:390;;1040:15564;;;;4430:390;;1040:15564;;;;4430:390;;1040:15564;;;;4430:390;;1040:15564;;;;4430:390;;1040:15564;;;;4430:390;;1040:15564;;;;4430:390;;1040:15564;;;;4430:390;;1040:15564;-1:-1:-1;;;;;1040:15564:52;;;;4430:390;;1040:15564;4430:390;1040:15564;;4430:390;;;1040:15564;8299:491;;1040:15564;4430:390;1040:15564;;;-1:-1:-1;;;;;4430:390:52;1040:15564;;;;;;4239:91;3859:27:41;1040:15564:52;5049:66:31;1040:15564:52;4430:390;3915:8:41;1040:15564:52;;;;;;;8299:491;;8289:502;4094:23:31;;:::i;:::-;3515:233:42;3353:401;3515:233;;;-1:-1:-1;;;3515:233:42;;;;;;;;;;;3353:401;;5049:66:31;1040:15564:52;;4239:91;;:::i;:::-;3859:27:41;;:::i;:::-;3915:8;;;;;:::i;:::-;8929:16:52;4239:91;-1:-1:-1;;;;;1040:15564:52;;;;;8919:26;8915:54;;8147:10;1040:15564;;;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;4430:390;;1040:15564;;4430:390;;1040:15564;-1:-1:-1;;;;;1040:15564:52;;;4430:390;;1040:15564;;;;;;;4430:390;;1040:15564;;;;;;;4430:390;;;1040:15564;;;4430:390;;;8929:16;4430:390;;1040:15564;-1:-1:-1;;;;;1040:15564:52;;;4430:390;;1040:15564;;;;4430:390;;1040:15564;4430:390;;;1040:15564;-1:-1:-1;;;;;1040:15564:52;;;4430:390;;1040:15564;;;;;;;4430:390;;;1040:15564;;;;;;4430:390;;;1040:15564;;;;;;4430:390;;;1040:15564;;;4430:390;;;;1040:15564;;;;;4430:390;;1040:15564;;;;4430:390;1040:15564;4430:390;;1040:15564;;-1:-1:-1;;;;;1040:15564:52;;;9053:33;;9049:124;;1040:15564;;;9227:12;;;;:43;;;1040:15564;9223:246;;1040:15564;;;-1:-1:-1;;;;;1040:15564:52;;;9483:15;:26;9479:67;;9579:26;-1:-1:-1;;;;;1040:15564:52;;;9483:15;9579:26;:::i;:::-;4430:390;1040:15564;9619:24;;;;9615:76;;1040:15564;;;;;:::i;:::-;-1:-1:-1;;;;;1040:15564:52;;;;;-1:-1:-1;;;;;1040:15564:52;;;;9767:823;;1040:15564;-1:-1:-1;;;;;1040:15564:52;;;;9767:823;;1040:15564;-1:-1:-1;;;;;1040:15564:52;;;;9767:823;;1040:15564;;;;;;9767:823;;4430:390;1040:15564;;;;;9767:823;;4430:390;-1:-1:-1;;;;;1040:15564:52;;;;9767:823;;1040:15564;-1:-1:-1;;;;;1040:15564:52;;;;9767:823;;1040:15564;-1:-1:-1;;;;;1040:15564:52;;;;9767:823;;1040:15564;;;;;;9767:823;;4430:390;1040:15564;;;;;9767:823;;4430:390;1040:15564;;;;;9767:823;;4430:390;1040:15564;;;;;9767:823;;4430:390;-1:-1:-1;;;;;9483:15:52;1040:15564;;9767:823;;1040:15564;-1:-1:-1;;;;;1040:15564:52;;;;9767:823;;1040:15564;8147:10;1040:15564;;;;;;;;;-1:-1:-1;;;;;4239:91:52;;1040:15564;-1:-1:-1;;;;;4239:91:52;;;;;;;4430:390;-1:-1:-1;;;;;1040:15564:52;9767:823;;4239:91;1040:15564;4430:390;;-1:-1:-1;;;;;4430:390:52;;4239:91;;;;;;;4430:390;;;;;;;1040:15564;9767:823;;4239:91;1040:15564;9767:823;;1040:15564;4239:91;9767:823;;;4430:390;1040:15564;9767:823;;4430:390;;;-1:-1:-1;;;;;;4430:390:52;-1:-1:-1;;;;;1040:15564:52;;;4239:91;;;;-1:-1:-1;;;4239:91:52;4430:390;;;;-1:-1:-1;;;4239:91:52;;;;;;;;;4430:390;;1040:15564;4430:390;;;1040:15564;9767:823;;4239:91;1040:15564;9767:823;;4239:91;;;-1:-1:-1;;4239:91:52;-1:-1:-1;;;;;1040:15564:52;;;;4430:390;8929:16;4430:390;;;1040:15564;9767:823;;4239:91;4430:390;;;4239:91;;1040:15564;9767:823;;4430:390;1040:15564;9767:823;;4430:390;1040:15564;9767:823;;4430:390;-1:-1:-1;;;;;;4430:390:52;;;-1:-1:-1;;;;;1040:15564:52;;;;4430:390;;;;4239:91;;;;;-1:-1:-1;;;4239:91:52;4430:390;;;;;;-1:-1:-1;;;4430:390:52;;;;;4239:91;;;;;-1:-1:-1;;;4239:91:52;4430:390;;;;;;1040:15564;9767:823;;4430:390;;;;;;-1:-1:-1;;;;;4430:390:52;;;;;;-1:-1:-1;;;;;;4430:390:52;;;;;;;;9767:823;-1:-1:-1;;;;;1040:15564:52;9767:823;;1040:15564;;4430:390;1040:15564;4430:390;;9767:823;;1040:15564;;4430:390;;4239:91;-1:-1:-1;;;;;4239:91:52;4430:390;;;;;1040:15564;;;;;:::i;:::-;-1:-1:-1;;;;;1040:15564:52;;;;;;10690:156;;-1:-1:-1;;;;;9483:15:52;1040:15564;;;4239:91;-1:-1:-1;;;;;1040:15564:52;10690:156;;1040:15564;;;;;;;8147:10;1040:15564;;10667:8;1040:15564;;-1:-1:-1;;;;;1040:15564:52;;;4239:91;;1040:15564;-1:-1:-1;;;;;4239:91:52;;;;;;;1040:15564;;4239:91;;;;;-1:-1:-1;;;;;4239:91:52;;;;;;;-1:-1:-1;;;;;4239:91:52;;;;;;;;;1040:15564;4239:91;;-1:-1:-1;;;;;4239:91:52;;;;;;-1:-1:-1;;;;;;4239:91:52;;;;8140:6;1040:15564;;;-1:-1:-1;1040:15564:52;;;10857:20;;;:::i;:::-;1040:15564;;;;10892:68;8147:10;9483:15;;10892:68;9483:15;7726:9;1040:15564;;10892:68;4239:91;;;;;;;;1040:15564;;;4239:91;;;1040:15564;4239:91;1040:15564;4239:91;10892:68;;;;1040:15564;-1:-1:-1;;;;;;;;;;;1040:15564:52;;;;;;;;9615:76;1040:15564;;;;12519:28;;;;9652:39;;1040:15564;9652:39;;1040:15564;;;;;9652:39;9479:67;1040:15564;4430:390;1040:15564;;;12519:28;;;;9518;;1040:15564;;9518:28;;1040:15564;;4239:91;;1040:15564;9518:28;9223:246;-1:-1:-1;;;;;1040:15564:52;9306:40;4430:390;;1040:15564;;9306:15;:40;:::i;:::-;9364:20;;;;9360:99;9223:246;9360:99;1040:15564;9423:20;;;;:::i;:::-;1040:15564;;12412:33;;;;9411;;1040:15564;9411:33;;1040:15564;9411:33;9227:43;4430:390;-1:-1:-1;;;;;1040:15564:52;4430:390;;1040:15564;;9243:27;;9227:43;;9049:124;1040:15564;;-1:-1:-1;;;9109:53:52;;-1:-1:-1;;;;;1040:15564:52;;;;;9109:53;;1040:15564;;;;;4239:91;;;1040:15564;4239:91;;9109:53;8915:54;1040:15564;;-1:-1:-1;;;8954:15:52;;1040:15564;;8954:15;8127:79;1040:15564;;;;11581:39;;;;8167;;1040:15564;;;8167:39;;1040:15564;;;;;8167:39;8041:76;1040:15564;;-1:-1:-1;;;8078:39:52;;1040:15564;;-1:-1:-1;;;;;1040:15564:52;;8078:39;;1040:15564;1481:10;1040:15564;;;;;;8078:39;7955:76;1040:15564;;-1:-1:-1;;;7993:38:52;;1040:15564;;;;7993:38;;1040:15564;1426:9;1040:15564;;;;;7993:38;7877:68;1040:15564;;;11415:30;;;7911:34;;1040:15564;;;7911:34;;1040:15564;1426:9;1040:15564;;;;7911:34;7797:70;1040:15564;;;11415:30;;;7832:35;;1040:15564;;;7832:35;;1040:15564;1426:9;1040:15564;;;;7832:35;7722:65;1040:15564;;;;6288:28;;;;7756:31;;7726:9;1040:15564;7756:31;;1040:15564;;;;;7756:31;1040:15564;;;;;;-1:-1:-1;;1040:15564:52;;;;-1:-1:-1;;;;;;;;;;;4239:91:52;1040:15564;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;2806:64:31;1040:15564:52;5777:18:31;:43;;;1040:15564:52;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5965:13:31;;1040:15564:52;;;;6000:4:31;1040:15564:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1040:15564:52;;;;;;;;;;;;;;;-1:-1:-1;;;1040:15564:52;;;;;;;;;;;;-1:-1:-1;;;1040:15564:52;;;;;;;5777:43:31;1040:15564:52;5799:16:31;1040:15564:52;5799:21:31;5777:43;;1040:15564:52;;;;;;-1:-1:-1;;1040:15564:52;;;;6889:49;;:::i;:::-;1040:15564;;;;;;;-1:-1:-1;;1040:15564:52;;;;-1:-1:-1;;;;;1040:15564:52;;:::i;:::-;;;;2915:41;1040:15564;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;-1:-1:-1;;;;;;;;;;;4239:91:52;966:10:28;-1:-1:-1;;;;;1040:15564:52;;;2869:24:24;2865:96;;2989:6;966:10:28;2989:6:24;:::i;2865:96::-;1040:15564:52;;-1:-1:-1;;;2916:34:24;;966:10:28;1040:15564:52;2916:34:24;;1040:15564:52;;;2916:34:24;1040:15564:52;;;;;;-1:-1:-1;;1040:15564:52;;;;;;;1374:10;1040:15564;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;2303:62:25;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1040:15564:52;;-1:-1:-1;;;;;;1040:15564:52;;;;;;-1:-1:-1;;;;;;;;;;;4239:91:52;;1040:15564;;;;;;;-1:-1:-1;;;;;1040:15564:52;3975:40:25;1040:15564:52;;3975:40:25;1040:15564:52;;;;;;;-1:-1:-1;;1040:15564:52;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;2303:62:25;;:::i;:::-;2531:66:29;;:::i;:::-;3217:103:30;;:::i;:::-;13501:16:52;;13497:42;;13738:30;1040:15564;13567:21;13598:34;13606:11;;;13598:34;:::i;:::-;13693:30;1040:15564;13656:27;;;;;;;;;:::i;:::-;;13693:30;:::i;:::-;1040:15564;;;;;13738:30;1805:1:30;-1:-1:-1;;;;;;;;;;;1040:15564:52;;;;;;;;-1:-1:-1;;1040:15564:52;;;;;;-1:-1:-1;;;;;;;;;;;1040:15564:52;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3217:103:30;;;:::i;:::-;2281:72:29;;:::i;:::-;1040:15564:52;;11314:9;;:21;11310:65;;1426:9;;11389:17;;;11385:60;;1481:10;;11459:24;;;11455:76;;11561:10;;1040:15564;;;;11554:6;1040:15564;;;;;;11545:27;;;11541:79;;1040:15564;;4239:91;3859:27:41;1040:15564:52;5049:66:31;1040:15564:52;;3915:8:41;1040:15564:52;;;11690:132;;;1040:15564;4239:91;1040:15564;;11561:10;1040:15564;4239:91;;1040:15564;;4239:91;;1040:15564;4239:91;1040:15564;4239:91;;1040:15564;4239:91;;;1040:15564;4239:91;11690:132;;;;;:::i;:::-;1040:15564;11680:143;;4094:23:31;;:::i;3915:8:41:-;11961:16:52;4239:91;-1:-1:-1;;;;;1040:15564:52;;;;;11951:26;11947:54;;11561:10;1040:15564;;12035:8;1040:15564;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;;;;;;4239:91;1040:15564;;;;;;12070:29;;;;12066:116;;1040:15564;;;;12236:12;;;;;:39;;;1040:15564;12232:238;;1040:15564;12484:15;;;;;:26;12480:67;;12580:26;12484:15;;12580:26;:::i;:::-;1040:15564;12635:9;1040:15564;12620:24;;;;12616:76;;1040:15564;;;;4239:91;1040:15564;;;;;;;:::i;:::-;;;;;;12484:15;1040:15564;;12726:151;;;1040:15564;;;;12726:151;;;1040:15564;;;11561:10;1040:15564;;;;12035:8;1040:15564;;;4239:91;;;;1040:15564;;-1:-1:-1;;;;1040:15564:52;;;;4239:91;-1:-1:-1;;;;;;4239:91:52;;;;1040:15564;;4239:91;;-1:-1:-1;;;4239:91:52;;;;;;1040:15564;4239:91;;-1:-1:-1;;;;;4239:91:52;;;;;;-1:-1:-1;;;;;;4239:91:52;;;;11554:6;1040:15564;;;-1:-1:-1;1040:15564:52;;;12887:20;;;:::i;:::-;1040:15564;;;;12923:59;11561:10;12484:15;;12923:59;12484:15;11314:9;12923:59;;4239:91;;;;;;;;1040:15564;;;4239:91;;;1040:15564;4239:91;1040:15564;4239:91;12923:59;;;;1040:15564;-1:-1:-1;;;;;;;;;;;1040:15564:52;;;;;;;12616:76;1040:15564;;12519:28;;;;12653:39;;1040:15564;12653:39;;1040:15564;;;;12653:39;12480:67;12537:9;1040:15564;;;-1:-1:-1;;;12519:28:52;;1040:15564;;12519:28;;1040:15564;4239:91;;;1040:15564;12519:28;12232:238;12311:36;1040:15564;;;12311:15;:36;:::i;:::-;12365:20;;;;12361:99;;12232:238;;;12361:99;12424:20;;;;:::i;12236:39::-;1040:15564;;;;;12252:23;;12236:39;;12066:116;1040:15564;;-1:-1:-1;;;12122:49:52;;-1:-1:-1;;;;;1040:15564:52;;;;12122:49;;1040:15564;;;4239:91;;;1040:15564;4239:91;;9109:53;11541:79;1040:15564;;;;;;11581:39;;;;;;1040:15564;11581:39;;1040:15564;;;;11581:39;11455:76;1040:15564;;;;;;11492:39;;;;;;1040:15564;11492:39;;1040:15564;;;;11492:39;11385:60;1040:15564;;;;;;11415:30;;;;;;1040:15564;11415:30;;1040:15564;;;;11415:30;11310:65;1040:15564;;-1:-1:-1;;;11344:31:52;;11314:9;1040:15564;11344:31;;1040:15564;;;;;-1:-1:-1;;11344:31:52;1040:15564;;;;;;-1:-1:-1;;1040:15564:52;;;;5111:6:27;-1:-1:-1;;;;;1040:15564:52;5102:4:27;5094:23;5090:145;;1040:15564:52;;;1327:66:35;1040:15564:52;;;5090:145:27;1040:15564:52;;-1:-1:-1;;;5195:29:27;;1040:15564:52;;5195:29:27;1040:15564:52;;;-1:-1:-1;;1040:15564:52;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;4688:6:27;1040:15564:52;;4679:4:27;4671:23;;;:120;;;;1040:15564:52;4654:251:27;;;2303:62:25;;:::i;:::-;1040:15564:52;;;;;4430:390;;;6151:52:27;;1040:15564:52;6151:52:27;1040:15564:52;6151:52:27;;;;1040:15564:52;;6151:52:27;;;1040:15564:52;-1:-1:-1;6147:437:27;;1040:15564:52;;-1:-1:-1;;;6513:60:27;;1040:15564:52;6513:60:27;;1040:15564:52;;;;;6513:60:27;6147:437;1327:66:35;;;;6245:40:27;;;;6241:120;;2263:29:35;;;:34;2259:119;;1040:15564:52;;-1:-1:-1;;;;;;1040:15564:52;;;;;;;;2922:27:35;-1:-1:-1;;2922:27:35;1040:15564:52;;2964:15:35;:11;;4255:25:38;1040:15564:52;4255:25:38;;1040:15564:52;4297:55:38;4255:25;;;;;;;;;:::i;:::-;4297:55;;:::i;2960:148:35:-;6648:9;;;;6644:70;;1040:15564:52;6644:70:35;-1:-1:-1;;;6684:19:35;;1040:15564:52;;6684:19:35;2259:119;1040:15564:52;;-1:-1:-1;;;2320:47:35;;1040:15564:52;2320:47:35;;1040:15564:52;;;;;2320:47:35;6241:120:27;1040:15564:52;;;;6312:34:27;;;;;;1040:15564:52;6312:34:27;;1040:15564:52;6312:34:27;6151:52;;;;1040:15564:52;6151:52:27;;1040:15564:52;6151:52:27;;;;;;1040:15564:52;6151:52:27;;;:::i;:::-;;;1040:15564:52;;;;;6151:52:27;;;;;;;-1:-1:-1;6151:52:27;;4671:120;4239:91:52;;;1327:66:35;4239:91:52;1040:15564;4749:42:27;;4671:120;;;1040:15564:52;;;;;;-1:-1:-1;;1040:15564:52;;;;;5049:66:31;1040:15564:52;;4094:23:31;;:::i;5049:66::-;1040:15564:52;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;;1680:26;1040:15564;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;2303:62:25;;:::i;:::-;2531:66:29;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1040:15564:52;;;;;;;3823:22:29;1040:15564:52;;;966:10:28;1040:15564:52;;3823:22:29;1040:15564:52;;;;;;;-1:-1:-1;;1040:15564:52;;;;;1773:24;1040:15564;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;;;2303:62:25;;:::i;:::-;6272:7:52;6262:17;;;6258:58;;6359:19;1040:15564;;;;;;;;;;6359:19;1040:15564;6258:58;1040:15564;;-1:-1:-1;;;6288:28:52;;1040:15564;6288:28;;1040:15564;;;;;;;;;;6288:28;1040:15564;;;;;;-1:-1:-1;;1040:15564:52;;;;;;;1426:9;1040:15564;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1040:15564:52;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;2303:62:25;;:::i;:::-;3217:103:30;;:::i;:::-;13126:16:52;;13122:42;;13363:21;1040:15564;13192:21;13223:34;13231:11;;;13223:34;:::i;1040:15564::-;;;;;;-1:-1:-1;;1040:15564:52;;;;;;2303:62:25;;:::i;:::-;6750:12:52;;;:34;;;1040:15564;;;;;;6850:26;1040:15564;6815:20;1040:15564;;;;;;6850:26;1040:15564;;;;-1:-1:-1;;;1040:15564:52;;;;;;;;;;;;-1:-1:-1;;;1040:15564:52;;;;;;;6750:34;6766:18;6778:6;6766:18;;;6750:34;;1040:15564;;;;;;-1:-1:-1;;1040:15564:52;;;;;;2303:62:25;;:::i;:::-;1551:6:52;6466:23;;;6462:75;;6584:28;1040:15564;;;;;;;;;;6584:28;1040:15564;6462:75;1040:15564;;-1:-1:-1;;;6498:39:52;;1040:15564;6498:39;;1040:15564;;;;;;;;;;6498:39;1040:15564;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;:::o;:::-;4239:91;1040:15564;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;:::o;:::-;-1:-1:-1;;;;;1040:15564:52;;;;;;-1:-1:-1;;1040:15564:52;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1040:15564:52;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;1040:15564:52;;;;;;;;;-1:-1:-1;1040:15564:52;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1040:15564:52;;;;;;;;;;;;-1:-1:-1;;;1040:15564:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1040:15564:52;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1040:15564:52;;;;;;;;;;;;-1:-1:-1;;;1040:15564:52;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;15729:419;15843:11;1040:15564;15843:16;;;15839:38;;1040:15564;;;;;;-1:-1:-1;1040:15564:52;15907:8;15935:15;1040:15564;;-1:-1:-1;1040:15564:52;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1040:15564:52;;;;;-1:-1:-1;;;;;1040:15564:52;;;;;;15935:15;1040:15564;;;;;;;;15935:20;;15931:42;;16003:33;:15;;:33;:::i;:::-;16050:24;;;;16046:46;;16117:23;;;:::i;:::-;-1:-1:-1;;15729:419:52:o;16046:46::-;16076:16;;15843:11;16076:16;-1:-1:-1;16076:16:52;:::o;2303:62:25:-;;;:::i;:::-;2281:72:29;;:::i;:::-;-1:-1:-1;;;;;;;;;;;3496:4:29;1040:15564:52;;;;;;;;3515:20:29;1040:15564:52;;;966:10:28;1040:15564:52;;3515:20:29;2303:62:25:o;4239:91:52:-;-1:-1:-1;;4239:91:52;;;;;;;:::o;2658:162:25:-;-1:-1:-1;;;;;;;;;;;4239:91:52;-1:-1:-1;;;;;1040:15564:52;966:10:28;2717:23:25;2713:101;;2658:162::o;3326:384:30:-;-1:-1:-1;;;;;;;;;;;1847:1:30;1040:15564:52;;3526:20:30;3522:88;;1847:1;1040:15564:52;;3326:384:30:o;3522:88::-;1040:15564:52;;-1:-1:-1;;;3569:30:30;;;;;2905:128:29;1040:15564:52;-1:-1:-1;;;;;;;;;;;1040:15564:52;;2966:61:29;;2905:128::o;2966:61::-;1040:15564:52;;-1:-1:-1;;;3001:15:29;;;;;3105:126;1040:15564:52;-1:-1:-1;;;;;;;;;;;1040:15564:52;;3167:9:29;3163:62;;3105:126::o;3163:62::-;1040:15564:52;;-1:-1:-1;;;3199:15:29;;;;;2472:222:24;-1:-1:-1;;;;;;;;;;;1040:15564:52;;-1:-1:-1;;;;;;1040:15564:52;;;;;;-1:-1:-1;;;;;;;;;;;4239:91:52;;1040:15564;;;-1:-1:-1;;;;;1040:15564:52;;;;;;;;;;;3975:40:25;-1:-1:-1;;3975:40:25;2472:222:24:o;1040:15564:52:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6441:7:31;-1:-1:-1;;;;;;;;;;;1040:15564:52;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;1040:15564:52;;;-1:-1:-1;;;;;;;;;;;1040:15564:52;-1:-1:-1;;;1040:15564:52;;;;;;;;-1:-1:-1;1040:15564:52;;-1:-1:-1;;;1040:15564:52;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1040:15564:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6826:10:31;;1040:15564:52;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1040:15564:52;;;;;-1:-1:-1;;;1040:15564:52;;;;;;;;-1:-1:-1;1040:15564:52;;-1:-1:-1;;;1040:15564:52;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1040:15564:52;;;;;;2129:766:41;1040:15564:52;;;2129:766:41;2276:2;2256:22;;2276:2;;2739:25;2539:180;;;;;;;;;;;;;;;-1:-1:-1;2539:180:41;2739:25;;:::i;:::-;2732:32;;;;;:::o;2252:637::-;2795:83;;2811:1;2795:83;2815:35;2795:83;;:::o;7196:532::-;1040:15564:52;;;;;;7282:29:41;;;7327:7;;:::o;7278:444::-;1040:15564:52;7378:38:41;;1040:15564:52;;;;-1:-1:-1;;;7439:23:41;;1040:15564:52;;7439:23:41;7374:348;7492:35;7483:44;;7492:35;;1040:15564:52;;-1:-1:-1;;;7550:46:41;;1040:15564:52;7550:46:41;;1040:15564:52;;;;;7550:46:41;7479:243;7626:30;7617:39;7613:109;;7479:243;7196:532::o;7613:109::-;1040:15564:52;;;;7679:32:41;;;;;;1040:15564:52;7679:32:41;;1040:15564:52;7679:32:41;1040:15564:52;;;;7291:20:41;1040:15564:52;;;;;7291:20:41;1040:15564:52;7084:141:26;1040:15564:52;8837:64:26;1040:15564:52;;;;7150:18:26;7146:73;;7084:141::o;7146:73::-;1040:15564:52;;-1:-1:-1;;;7191:17:26;;;;;4130:191:31;4243:17;;:::i;:::-;4262:20;;:::i;:::-;1040:15564:52;;4221:92:31;;;;1040:15564:52;2073:95:31;1040:15564:52;;;2073:95:31;;1040:15564:52;2073:95:31;;;1040:15564:52;4284:13:31;2073:95;;;1040:15564:52;4307:4:31;2073:95;;;1040:15564:52;2073:95:31;4221:92;;;;;:::i;:::-;1040:15564:52;4211:103:31;;4130:191;:::o;5140:1530:41:-;;;6199:66;6186:79;;6182:164;;1040:15564:52;;;;;;-1:-1:-1;1040:15564:52;;;;;;;;;;;;;;;;;;;6457:24:41;;;;;;;;;-1:-1:-1;6457:24:41;-1:-1:-1;;;;;1040:15564:52;;6495:20:41;6491:113;;6614:49;-1:-1:-1;6614:49:41;-1:-1:-1;5140:1530:41;:::o;6491:113::-;6531:62;-1:-1:-1;6531:62:41;6457:24;6531:62;-1:-1:-1;6531:62:41;:::o;6457:24::-;1040:15564:52;;;-1:-1:-1;1040:15564:52;;;;;6182:164:41;6281:54;;;6297:1;6281:54;6301:30;6281:54;;:::o;7058:687:31:-;1040:15564:52;;:::i;:::-;;;;7230:22:31;;;;1040:15564:52;;7275:22:31;7268:29;:::o;7226:513::-;-1:-1:-1;;2806:64:31;1040:15564:52;7603:15:31;;;;7638:17;:::o;7599:130::-;7694:20;7701:13;7694:20;:::o;7966:723::-;1040:15564:52;;:::i;:::-;;;;8147:25:31;;;;1040:15564:52;;8195:25:31;8188:32;:::o;8143:540::-;-1:-1:-1;;8507:16:31;1040:15564:52;8541:18:31;;;;8579:20;:::o;4625:582:38:-;;4797:8;;-1:-1:-1;1040:15564:52;;5874:21:38;:17;;6046:142;;;;;;5870:383;1040:15564:52;;-1:-1:-1;;;6225:17:38;;;;;4793:408;1040:15564:52;;5045:22:38;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;1040:15564:52;;-1:-1:-1;;;5121:24:38;;-1:-1:-1;;;;;1040:15564:52;;;5121:24:38;;;1040:15564:52;;;5121:24:38;5045:49;5071:18;;;:23;5045:49;",
                "linkReferences": {},
                "immutableReferences": {
                  "39435": [
                    {
                      "start": 7871,
                      "length": 32
                    },
                    {
                      "start": 8056,
                      "length": 32
                    }
                  ],
                  "44417": [
                    {
                      "start": 1599,
                      "length": 32
                    },
                    {
                      "start": 1808,
                      "length": 32
                    },
                    {
                      "start": 8769,
                      "length": 32
                    }
                  ]
                }
              },
              "methodIdentifiers": {
                "DEFAULT_MAX_SIG_AGE()": "738fc2f9",
                "MAX_FEE()": "bc063e1a",
                "MAX_INTERVAL()": "fede6114",
                "MAX_SCORE()": "27ff6223",
                "MIN_ISSUED_AT()": "ee4eb93d",
                "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
                "acceptOwnership()": "79ba5097",
                "authorizedSigner()": "c771909c",
                "canSubmitScore(address)": "33917ca9",
                "checkFee()": "1904863c",
                "eip712Domain()": "84b0196e",
                "emergencyPause()": "51858e27",
                "emergencyWithdraw(address)": "6ff1c9bc",
                "getScore(address)": "d47875d0",
                "getScoreCard(address)": "a23195ed",
                "getUserData(address)": "ffc9896b",
                "hashTypedDataV4(bytes32)": "4980f288",
                "initialize(uint256,address,address)": "b4988fd0",
                "maxSigAge()": "33b3e099",
                "minInterval()": "3fb19a53",
                "nonces(address)": "7ecebe00",
                "owner()": "8da5cb5b",
                "pause()": "8456cb59",
                "paused()": "5c975abb",
                "pendingOwner()": "e30c3978",
                "proxiableUUID()": "52d1902d",
                "renounceOwnership()": "715018a6",
                "setAuthorizedSigner(address)": "d279b0ca",
                "setCheckFee(uint256)": "319a2cbb",
                "setMaxSigAge(uint256)": "110b3285",
                "setMinInterval(uint256)": "10cb729f",
                "submitScore(uint256,uint64,uint256,bytes)": "5836d17b",
                "submitScoreCard(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint64,uint256,bytes)": "9b50c5f9",
                "transferOwnership(address)": "f2fde38b",
                "unpause()": "3f4ba83a",
                "upgradeToAndCall(address,bytes)": "4f1ef286",
                "userData(address)": "c8910913",
                "userScoreCards(address)": "d91a9458",
                "withdrawFees(address)": "164e68de"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/test/CompileTest.t.sol": {
      "CompileTest": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_TEST",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "failed",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifactSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "components": [
                      {
                        "name": "artifact",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetInterfaces",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedInterfaces_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "artifacts",
                        "type": "string[]",
                        "internalType": "string[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "test_Compile",
                "inputs": [],
                "outputs": [],
                "stateMutability": "pure"
              },
              {
                "type": "function",
                "name": "test_Deploy",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "event",
                "name": "log",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_address",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes32",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_int",
                "inputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_address",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes32",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_string",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_string",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_uint",
                "inputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "logs",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Compile\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Deploy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/CompileTest.t.sol\":\"CompileTest\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/ScoreCheckerUpgradeableV2.sol\":{\"keccak256\":\"0xdcd4fdfa4c1604bfbc283449c89c84dda53bfbb2f2bb24111bd0314ad35cb60c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e49a54670032a74145006fe82ec775828e90f3965e2ef795fd83221185063a8\",\"dweb:/ipfs/QmTTRzZ6w1AyFTX5QJJwgAHFnKYrC3kBTTdb1E4Vfjr5Nq\"]},\"test/CompileTest.t.sol\":{\"keccak256\":\"0x529c994e537e790f7486a23fdd26a26de3b3ff9b7a192220ed8744dd71665cc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d8258b6283abd34feeedf5c86add03e3bf54a3ef053ba5f4920a27aabd864dd\",\"dweb:/ipfs/QmbvcQdiDtVuvUvDtXRQ6uYCtseM693XEoQrscHyL9iQeQ\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 257,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "_failed",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2758,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "stdChainsInitialized",
                  "offset": 1,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2779,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "chains",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)"
                },
                {
                  "astId": 2783,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "defaultRpcUrls",
                  "offset": 0,
                  "slot": "10",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
                },
                {
                  "astId": 2787,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "idToAlias",
                  "offset": 0,
                  "slot": "11",
                  "type": "t_mapping(t_uint256,t_string_storage)"
                },
                {
                  "astId": 2790,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "fallbackToDefaultRpcUrls",
                  "offset": 0,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 3593,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "gasMeteringOff",
                  "offset": 1,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 5630,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "13",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 6504,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "_excludedContracts",
                  "offset": 0,
                  "slot": "21",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6507,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "_excludedSenders",
                  "offset": 0,
                  "slot": "22",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6510,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "_targetedContracts",
                  "offset": 0,
                  "slot": "23",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6513,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "_targetedSenders",
                  "offset": 0,
                  "slot": "24",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6516,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "_excludedArtifacts",
                  "offset": 0,
                  "slot": "25",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6519,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "_targetedArtifacts",
                  "offset": 0,
                  "slot": "26",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6523,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "_targetedArtifactSelectors",
                  "offset": 0,
                  "slot": "27",
                  "type": "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage"
                },
                {
                  "astId": 6527,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "_excludedSelectors",
                  "offset": 0,
                  "slot": "28",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6531,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "_targetedSelectors",
                  "offset": 0,
                  "slot": "29",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6535,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "_targetedInterfaces",
                  "offset": 0,
                  "slot": "30",
                  "type": "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage"
                },
                {
                  "astId": 12145,
                  "contract": "test/CompileTest.t.sol:CompileTest",
                  "label": "IS_TEST",
                  "offset": 0,
                  "slot": "31",
                  "type": "t_bool"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_address)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "address[]",
                  "numberOfBytes": "32",
                  "base": "t_address"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_array(t_bytes4)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes4[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes4"
                },
                "t_array(t_string_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "string[]",
                  "numberOfBytes": "32",
                  "base": "t_string_storage"
                },
                "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzArtifactSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzArtifactSelector)6495_storage"
                },
                "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzInterface[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzInterface)6501_storage"
                },
                "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzSelector)6489_storage"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_mapping(t_string_memory_ptr,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => struct StdChains.Chain)",
                  "numberOfBytes": "32",
                  "value": "t_struct(Chain)2774_storage"
                },
                "t_mapping(t_uint256,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_string_memory_ptr": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(Chain)2774_storage": {
                  "encoding": "inplace",
                  "label": "struct StdChains.Chain",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 2767,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "name",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2769,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "chainId",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 2771,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "chainAlias",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2773,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "rpcUrl",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_string_storage"
                    }
                  ]
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(FuzzArtifactSelector)6495_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzArtifactSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6491,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "artifact",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 6494,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzInterface)6501_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzInterface",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6497,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6500,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "artifacts",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_string_storage)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzSelector)6489_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6485,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6488,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "test/CompileTest.t.sol:CompileTest",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "6080806040523461002d57600160ff198181600c541617600c55601f541617601f5561404290816100328239f35b5f80fdfe60806040818152600436101562000014575f80fd5b5f915f3560e01c9081631ed7831c1462000a46575080632ade388014620008675780633e5e3c2314620007df5780633f7286f4146200075757806354a4da3b146200060557806366d9a9a014620004d257806385226c81146200043a578063916a17c61462000386578063b0464fdc14620002d2578063b5508aa9146200023a578063ba414fa6146200021157828163e0f93be7146200018e57508063e20c9f7114620000f25763fa7626d414620000ca575f80fd5b34620000ee5781600319360112620000ee5760209060ff601f541690519015158152f35b5080fd5b5090346200018b57806003193601126200018b578151918291601554808552602080950194601583527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47592905b8282106200016a576200016686866200015b828b038362000cac565b519182918262000acd565b0390f35b83546001600160a01b0316875295860195600193840193909101906200013f565b80fd5b8083346200020e57816003193601126200020e57737109709ecfa91a80626ff3989d68f67f5b1dd12d90813b156200020a5782602492825193848092630c9fd58160e01b8252600160048301525afa908115620002015750620001ee5750f35b620001f99062000c97565b6200018b5780f35b513d84823e3d90fd5b5050fd5b50fd5b5034620000ee5781600319360112620000ee576020906200023162000fab565b90519015158152f35b5090346200018b57806003193601126200018b57506019546200025d8162000ccf565b906200026c8351928362000cac565b80825260195f90815260207f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c96958185015b848410620002b35786518062000166888262000b92565b6001838192620002c38562000ce8565b8152019201930192906200029c565b5090346200018b57806003193601126200018b57601c54620002f48162000ccf565b91620003038451938462000cac565b818352601c815260207f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a2118185015b848410620003485786518062000166888262000bf9565b60028360019289516200035b8162000c7a565b848060a01b0386541681526200037385870162000dc2565b8382015281520192019301929062000331565b5090346200018b57806003193601126200018b57601d54620003a88162000ccf565b91620003b78451938462000cac565b818352601d815260207f6d4407e7be21f808e6509aa9fa9143369579dd7d760fe20a2c09680fc146134f8185015b848410620003fc5786518062000166888262000bf9565b60028360019289516200040f8162000c7a565b848060a01b0386541681526200042785870162000dc2565b83820152815201920193019290620003e5565b5090346200018b57806003193601126200018b5750601a546200045d8162000ccf565b906200046c8351928362000cac565b808252601a5f90815260207f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e8185015b848410620004b35786518062000166888262000b92565b6001838192620004c38562000ce8565b8152019201930192906200049c565b5090346200018b57806003193601126200018b57601b54620004f48162000ccf565b91620005038451938462000cac565b818352601b815260209283810192827f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc1855b838310620005bd57505050508451938085019181865251809252858501868360051b8701019493965b8388106200056c5786860387f35b90919293948380620005ab600193603f198b8203018752895190836200059a83518984528984019062000b13565b920151908481840391015262000b53565b9701930197019690939291936200055e565b6002886001928b9a97989a51620005d48162000c7a565b620005df8662000ce8565b8152620005ee85870162000dc2565b838201528152019201920191909694939662000535565b5034620006f3575f366003190112620006f357805190612fb8918281019281841067ffffffffffffffff851117620007435762001055823960208166038d7ea4c68000948581520301905ff0801562000739578151635e031f0d60e11b815290602090829060049082906001600160a01b03165afa9081156200072f575f91620006f7575b50737109709ecfa91a80626ff3989d68f67f5b1dd12d92833b15620006f35760445f928451958693849263260a5b1560e21b8452600484015260248301525afa908115620006ea5750620006dc575080f35b620006e8915062000c97565b005b513d5f823e3d90fd5b5f80fd5b90506020813d60201162000726575b81620007156020938362000cac565b81010312620006f357515f6200068a565b3d915062000706565b82513d5f823e3d90fd5b50513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b5034620006f3575f366003190112620006f3578051601780548083525f918252602080840194927fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c1592915b828210620007be576200016686866200015b828b038362000cac565b83546001600160a01b031687529586019560019384019390910190620007a2565b5034620006f3575f366003190112620006f3578051601880548083525f918252602080840194927fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e92915b82821062000846576200016686866200015b828b038362000cac565b83546001600160a01b0316875295860195600193840193909101906200082a565b5034620006f3575f366003190112620006f357601e54620008888162000ccf565b90620008978351928362000cac565b8082526020918281018092601e5f527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e3505f925b8284106200099f57505050508351928084019181855251809252848401600590868460051b87010194965f925b858410620009055787870388f35b90919293809596603f19898203018552895190828582019260018060a01b03815116835201519185848301528251809152606090848284019282881b8501019401925f5b8281106200096e57505050505090806001929a019401940192979594939190620008f7565b919395806200098c6001939597605f19878203018952895162000b13565b970195019101918a959493919262000949565b86889795969851620009b18162000c7a565b83546001600160a01b0316815260018481018054909190620009d38162000ccf565b92620009e28d51948562000cac565b8184525f908152858120908685015b83821062000a1e5750505050509281600194846002959401528152019201930192909694939596620008ca565b938095969783949562000a3383949562000ce8565b815201930191018b9695949392620009f1565b905034620006f3575f366003190112620006f3576016549182825260208083019360165f527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289915f905b82821062000aac576200016686866200015b828b038362000cac565b83546001600160a01b03168752958601956001938401939091019062000a90565b60209060206040818301928281528551809452019301915f5b82811062000af5575050505090565b83516001600160a01b03168552938101939281019260010162000ae6565b91908251928382525f5b84811062000b3e575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520162000b1d565b9081518082526020808093019301915f5b82811062000b73575050505090565b83516001600160e01b0319168552938101939281019260010162000b64565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b84831062000bc85750505050505090565b909192939495848062000be8600193603f198682030187528a5162000b13565b980193019301919493929062000bb7565b6020808201908083528351809252604092604081018260408560051b8401019601945f925b85841062000c30575050505050505090565b90919293949596858062000c68600193603f1986820301885286838d51878060a01b0381511684520151918185820152019062000b53565b99019401940192959493919062000c1e565b6040810190811067ffffffffffffffff8211176200074357604052565b67ffffffffffffffff81116200074357604052565b90601f8019910116810190811067ffffffffffffffff8211176200074357604052565b67ffffffffffffffff8111620007435760051b60200190565b90604051915f9080549160018360011c906001851693841562000db7575b602095868410861462000da357838952889590811562000d7f575060011462000d3d575b50505062000d3b9250038362000cac565b565b5f90815285812095935091905b81831062000d6657505062000d3b93508201015f808062000d2a565b8554888401850152948501948794509183019162000d4a565b9250505062000d3b94925060ff191682840152151560051b8201015f808062000d2a565b634e487b7160e01b5f52602260045260245ffd5b91607f169162000d06565b906040916040518093825492838352602091828401915f52825f20945f915b81600784011062000f33575062000d3b9554918482821062000f14575b82821062000ef5575b82821062000ed6575b82821062000eb7575b82821062000e98575b82821062000e79575b82821062000e5c575b501062000e47575b509050038362000cac565b6001600160e01b031916815201805f62000e3c565b83811b6001600160e01b0319168552909301926001018462000e34565b604084901b6001600160e01b0319168552909301926001018462000e2b565b606084901b6001600160e01b0319168552909301926001018462000e22565b608084901b6001600160e01b0319168552909301926001018462000e19565b60a084901b6001600160e01b0319168552909301926001018462000e10565b60c084901b6001600160e01b0319168552909301926001018462000e07565b60e084901b6001600160e01b0319168552909301926001018462000dfe565b86546001600160e01b031960e082811b8216875260c083811b83168989015260a084811b8416868a0152608085811b85166060808c019190915286901b8516908a015284861b84169089015283891b831690880152911690850152600190960195889550610100909301926008929092019162000de1565b60085460ff16801562000fbb5790565b50604051630667f9d760e41b8152602081604481737109709ecfa91a80626ff3989d68f67f5b1dd12d8060048301526519985a5b195960d21b60248301525afa90811562001049575f9162001011575b50151590565b90506020813d60201162001040575b816200102f6020938362000cac565b81010312620006f357515f6200100b565b3d915062001020565b6040513d5f823e3d90fdfe60c0346200016257601f62002fb838819003918201601f19168301926001600160401b0392909183851183861017620001665781602092849260409788528339810103126200016257513060805280156200011e5760a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff82851c166200010d578080831603620000c8575b8351612e3d90816200017b8239608051818181611ebf0152611f78015260a05181818161063f0152818161071001526122410152f35b6001600160401b0319909116811790915581519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f808062000092565b835163f92ee8a960e01b8152600490fd5b825162461bcd60e51b815260206004820152601560248201527f4d61784665652063616e6e6f74206265207a65726f00000000000000000000006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610085575b36156100475760405162461bcd60e51b815260206004820152600b60248201526a4e6f2066616c6c6261636b60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275111a5c9958dd08115512081b9bdd08185b1b1bddd95960521b6044820152606490fd5b5f3560e01c806310cb729f146123fa578063110b32851461235a578063164e68de146122ef5780631904863c146122d357806327ff6223146122b6578063319a2cbb1461222357806333917ca9146121f257806333b3e099146121d55780633f4ba83a146121735780633fb19a53146121565780634980f2881461212d5780634f1ef28614611f2957806351858e271461191557806352d1902d14611ead5780635836d17b14611b255780635c975abb14611af75780636ff1c9bc14611a51578063715018a6146119d4578063738fc2f9146119b857806379ba5097146119675780637ecebe001461192f5780638456cb591461191557806384b0196e146117bd5780638da5cb5b146117895780639b50c5f914610eae578063a23195ed14610cd5578063ad3cb1cc14610c8c578063b4988fd014610662578063bc063e1a14610628578063c771909c14610600578063c8910913146105a4578063d279b0ca1461051c578063d47875d0146104ac578063d91a9458146103bb578063e30c397814610387578063ee4eb93d14610369578063f2fde38b146102e5578063fede6114146102c85763ffc9896b0361000e57346102c45760203660031901126102c45760806001600160a01b03610259612471565b16805f52600560205260405f2090604080519261027584612487565b54916001600160801b038316938481526001600160401b0384871c169384602083015260c01c92839101525f52600660205260405f205491604051938452602084015260408301526060820152f35b5f80fd5b346102c4575f3660031901126102c4576020604051620151808152f35b346102c45760203660031901126102c4576102fe612471565b61030661277d565b5f80516020612de883398151915280546001600160a01b0319166001600160a01b039283169081179091555f80516020612d68833981519152549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b346102c4575f3660031901126102c45760206040516361cf99808152f35b346102c4575f3660031901126102c4575f80516020612de8833981519152546040516001600160a01b039091168152602090f35b346102c45760203660031901126102c4576001600160a01b036103dc612471565b165f5260046020526101e060405f208054906001600160801b03906001810154906001600160401b039263ffffffff906002830154600460038501549401549460405197838116895260801c60208901528281166040890152868160801c166060890152838160c01c16608089015260e01c60a088015281811660c088015260801c60e08701528216610100860152808260801c16610120860152808260a01c166101408601528160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b346102c45760203660031901126102c4576001600160a01b036104cd612471565b165f5260056020526040805f208151906104e682612487565b546001600160801b03811691828152836001600160401b038360801c169283602084015260c01c91015282519182526020820152f35b346102c45760203660031901126102c457610535612471565b61053d61277d565b6001600160a01b03168015610592576020817f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b60405163d92e233d60e01b8152600490fd5b346102c45760203660031901126102c4576001600160a01b036105c5612471565b165f526005602052606060405f2054604051906001600160801b03811682526001600160401b038160801c16602083015260c01c6040820152f35b346102c4575f3660031901126102c4576002546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c45760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102c45760603660031901126102c4576001600160a01b0360243581811681036102c457816044351680604435036102c4577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00918254916001600160401b03831680159081610c7c575b6001149081610c72575b159081610c69575b50610c575760016001600160401b0319841617845560ff8360401c1615610c38575b848216156105925715610592577f00000000000000000000000000000000000000000000000000000000000000008060043511610c185750610741612b02565b610749612b02565b610751612b02565b5f80516020612da8833981519152805460ff1916905561076f612b02565b610777612b02565b60015f80516020612dc88339815191525560405193610795856124d9565b600e85526d42617365426164676553636f726560901b6020860152604051946107bd866124d9565b60018652603160f81b60208701526107d3612b02565b6107db612b02565b8051906001600160401b038211610aef5781906108055f80516020612d488339815191525461288c565b601f8111610b9a575b50602090601f8311600114610b0e575f92610b03575b50508160011b915f199060031b1c1916175f80516020612d48833981519152555b84516001600160401b038111610aef577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10390610881825461288c565b601f8111610a8d575b506020601f82116001146109e4579181602094927f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73969460ff999a5f926109d9575b50508160011b915f199060031b1c19161790555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015561092e612b02565b6004355f55600280546001600160a01b031916838316179055601e60015561025860035561095d604435612821565b60405191168152a17f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7660206040516004358152a160401c161561099c57005b68ff00000000000000001981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508a806108cc565b601f19821697835f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75985f5b818110610a7557509260ff98997f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73979593600193836020999710610a5d575b505050811b0190556108e0565b01515f1960f88460031b161c191690558a8080610a50565b838301518b556001909a019960209384019301610a11565b825f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f830160051c81019160208410610ae5575b601f0160051c01905b818110610ada575061088a565b5f8155600101610acd565b9091508190610ac4565b634e487b7160e01b5f52604160045260245ffd5b015190508780610824565b92505f80516020612d488339815191525f525f80516020612d88833981519152905f935b601f1984168510610b7f576001945083601f19811610610b67575b505050811b015f80516020612d4883398151915255610845565b01515f1960f88460031b161c19169055878080610b4d565b81810151835560209485019460019093019290910190610b32565b9091505f80516020612d488339815191525f52601f830160051c5f80516020612d88833981519152019060208410610c03575b90601f8493920160051c5f80516020612d8883398151915201905b818110610bf5575061080e565b5f8155849350600101610be8565b5f80516020612d888339815191529150610bcd565b60449060405190631e0bd6c160e31b825260043560048301526024820152fd5b68ffffffffffffffffff19831668010000000000000001178455610701565b60405163f92ee8a960e01b8152600490fd5b905015866106df565b303b1591506106d7565b604085901c60ff161591506106cd565b346102c4575f3660031901126102c457610cd1604051610cab816124d9565b60058152640352e302e360dc1b6020820152604051918291602083526020830190612593565b0390f35b346102c45760203660031901126102c4576001600160a01b03610cf6612471565b165f5260046020526101e060405f206001600160401b03604051610d19816124a2565b8254926001600160801b03841682528360801c602083015260018101546001600160801b0381166040840152838160801c16606084015263ffffffff8160c01c1660808401528060e01c60a08401526002820154906001600160801b03821660c08501528160801c60e085015260046003840154936001600160801b03851661010087015263ffffffff8560801c1661012087015263ffffffff8560a01c1661014087015263ffffffff8560c01c166101608701528460e01c6101808701520154938585166101a08201526101c0868660401c16910152604051956001600160801b038116875260801c60208701526001600160801b0381166040870152848160801c16606087015263ffffffff8160c01c16608087015260e01c60a08601526001600160801b03811660c086015260801c60e08501526001600160801b03811661010085015263ffffffff8160801c1661012085015263ffffffff8160a01c1661014085015263ffffffff8160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b6102003660031901126102c4576001600160401b036101a435166101a435036102c4576101e4356001600160401b0381116102c457610ef1903690600401612566565b90610efa61279d565b610f026127cc565b5f5480340361176b5750620f42406004351161174957620f42406024351161172757620f424060443511611705576361cf99806001600160401b036101a43516106116d757335f52600660205260405f2054806101c435036116b65750604051917ff418e5fde2935aec5659dcc0d3addca54c1096967fe1a5e81cbcfc2ef0e4529a60208401523360408401526004356060840152602435608084015260443560a084015260643560c084015260843560e084015260a43561010084015260c43561012084015260e4356101408401526101043561016084015261012435610180840152610144356101a0840152610164356101c0840152610184356101e08401526001600160401b036101a435166102008401526102206101c435818501528352826102408101106001600160401b0361024085011117610aef5761108861108e9261108085610240611097970160405260208151910120611063612b43565b6042916040519161190160f01b8352600283015260228201522090565b923691612530565b90612a45565b90929192612a7f565b6002546001600160a01b039081169116036116a457335f52600460205260405f206001600160401b036004604051926110cf846124a2565b80546001600160801b038116855260801c602085015260018101546001600160801b0381166040860152838160801c16606086015263ffffffff8160c01c16608086015260e01c60a085015260028101546001600160801b03811660c086015260801c60e085015260038101546001600160801b03811661010086015263ffffffff8160801c1661012086015263ffffffff8160a01c1661014086015263ffffffff8160c01c1661016086015260e01c61018085015201548181166101a084015260401c16806101c0830152806001600160401b036101a4351611156116765750600154908115158061165f575b61161d575b50506001600160401b036101a4351642106115fd576111ed6001600160401b036101a4351642612677565b600354908181116115e057604051611204816124a2565b6001600160801b036004351681526001600160801b036024351660208201526001600160801b036044351660408201526001600160401b0360643516606082015263ffffffff60843516608082015263ffffffff60a4351660a08201526001600160801b0360c4351660c08201526001600160801b0360e4351660e08201526001600160801b03610104351661010082015263ffffffff610124351661012082015263ffffffff610144351661014082015263ffffffff610164351661016082015263ffffffff61018435166101808201526001600160401b0342166101a08201526001600160401b036101a435166101c0820152335f526004602052600460405f206001600160801b038351166001600160801b031982541617815561134d6001600160801b0360208501511682906001600160801b0382549181199060801b169116179055565b6040830151606084015160808086015160a087015160e01b6001600160e01b0319166001600160801b039094169290911b67ffffffffffffffff60801b169190911763ffffffff60c01b60c09290921b919091161717600182015560c083015160e084015160801b6fffffffffffffffffffffffffffffffff19166001600160801b03919091161760028201556101008301516003820180546101208601516101408701516101608801516001600160e01b03199093166001600160801b03959095169490941760809190911b63ffffffff60801b161760a09390931b63ffffffff60a01b169290921760c09290921b63ffffffff60c01b169190911790556101808301516003820180546001600160e01b031660e09290921b6001600160e01b03191691909117905501906001600160401b036101a0820151166fffffffffffffffff00000000000000006101c0845493015160401b16916001600160801b031916171790556040516114c081612487565b6001600160801b03600435168152602081016001600160401b03421681526115466001600160401b036040840192816101a435168452335f5260056020526001600160801b0360405f209551166001600160801b0319865416178555511683908154906001600160401b0360801b9060801b16906001600160401b0360801b1916179055565b5181546001600160c01b031660c09190911b6001600160c01b031916179055600660205260405f2080546115799061276f565b90556040517f893ee2884748c042330e2dba3ef220312d770a54d6d902d1c7612d9b434ab0a73391806115c14234600435846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255602060405160018152f35b60449160405191635ee1691b60e11b835260048301526024820152fd5b604460035460405190635ee1691b60e11b82525f60048301526024820152fd5b6001600160401b036101a06116359201511642612677565b90808210156111c25760249161164a91612677565b604051906365a85b4760e01b82526004820152fd5b506001600160401b036101a08201511615156111bd565b604051634ef2701560e01b81526001600160401b036101a43581166004830152919091166024820152604490fd5b604051632057875960e21b8152600490fd5b604490604051906306427aeb60e01b82526101c43560048301526024820152fd5b6040516331b3a51360e01b81526101a4356001600160401b031660048201526361cf99806024820152604490fd5b604051635467da8d60e11b8152604480356004830152620f4240602483015290fd5b6044604051635467da8d60e11b81526024356004820152620f42406024820152fd5b6044604051635467da8d60e11b81526004356004820152620f42406024820152fd5b60449060405190631e0bd6c160e31b82523460048301526024820152fd5b346102c4575f3660031901126102c4575f80516020612d68833981519152546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c4577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005415806118ec575b156118af576118036128c4565b61180b612986565b6040516020808201928284106001600160401b03851117610aef57916020611864859461185697966040525f8452604051978897600f60f81b895260e0858a015260e0890190612593565b908782036040890152612593565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061189857505050500390f35b835185528695509381019392810192600101611889565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10154156117f6565b346102c4575f3660031901126102c45761192d61271a565b005b346102c45760203660031901126102c4576001600160a01b03611950612471565b165f526006602052602060405f2054604051908152f35b346102c4575f3660031901126102c4575f80516020612de883398151915254336001600160a01b03909116036119a05761192d33612821565b60405163118cdaa760e01b8152336004820152602490fd5b346102c4575f3660031901126102c45760206040516102588152f35b346102c4575f3660031901126102c4576119ec61277d565b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d68833981519152805491821690555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c457611a7f61277d565b611a876127f6565b611a8f61279d565b8015610592577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695602047611ac48115156125d1565b611add5f80808085895af1611ad761260a565b50612639565b604051908152a260015f80516020612dc883398151915255005b346102c4575f3660031901126102c457602060ff5f80516020612da883398151915254166040519015158152f35b60803660031901126102c457602460043581356001600160401b03808216908183036102c45760448035956064358381116102c457611b68903690600401612566565b90611b7161279d565b611b796127cc565b5f54803403611e925750620f4240808911611e7657506361cf9980808710611e5a5750335f5260209860068a5260405f2054808203611e3e57509161108861108e926110808b8d611c1c97604051918201927fd0a0509035718ad455d593d20a83743ce5d6920842ee8cb1f4d76d7197a7bcb8845233604084015260608301528c608083015260a082015260a08152611c11816124be565b519020611063612b43565b6002546001600160a01b039081169116036116a457335f526005875260405f20946040805196611c4b88612487565b54916001600160801b039788841681528a810193878160801c16855260c01c928391015281871115611e15575050600154908482151580611e09575b611de5575b505050834210611dc957611ca08442612677565b9060035490818311611db15750505050611d1d9060405193611cc185612487565b85811685524282168786019081526040808701958652335f90815260058a522095518654915167ffffffffffffffff60801b1991909316166001600160c01b031990911617911660801b67ffffffffffffffff60801b16178355565b5181546001600160c01b031660c09190911b6001600160c01b0319161790556006825260405f208054611d4f9061276f565b90556040517fd1ab2b2d603dc80565da0286deeb7d3699341e28d8234689428dbe9b7d58c8ac339180611d95423487846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255604051908152f35b60405192635ee1691b60e11b84526004840152820152fd5b600354604051635ee1691b60e11b81525f600482015291820152fd5b611df191511642612677565b90808210611dff5784611c8c565b9061164a91612677565b50808251161515611c87565b604051634ef2701560e01b81526001600160401b03918216600482015291166024820152604490fd5b85925084604051926306427aeb60e01b84526004840152820152fd5b86859185604051926331b3a51360e01b84526004840152820152fd5b8885918560405192635467da8d60e11b84526004840152820152fd5b604051631e0bd6c160e31b8152346004820152938401525050fd5b346102c4575f3660031901126102c4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611f175760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b60403660031901126102c457611f3d612471565b6024356001600160401b0381116102c457366023820112156102c457611f6d903690602481600401359101612530565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156120ff575b50611f1757611fb161277d565b8116906040516352d1902d60e01b8152602081600481865afa5f91816120cb575b50611ff057604051634c9c8ce360e01b815260048101849052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc929192908181036120b35750823b1561209a5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561208157505f8083602061192d95519101845af461207b61260a565b91612ce4565b9150503461208b57005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091506020813d6020116120f7575b816120e7602093836124f4565b810103126102c457519085611fd2565b3d91506120da565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141584611fa4565b346102c45760203660031901126102c457602061214e600435611063612b43565b604051908152f35b346102c4575f3660031901126102c4576020600154604051908152f35b346102c4575f3660031901126102c45761218b61277d565b6121936127f6565b5f80516020612da883398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b346102c4575f3660031901126102c4576020600354604051908152f35b346102c45760203660031901126102c4576040612215612210612471565b612698565b825191151582526020820152f35b346102c45760203660031901126102c45760043561223f61277d565b7f0000000000000000000000000000000000000000000000000000000000000000808211612297577f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76602083805f55604051908152a1005b604051631e0bd6c160e31b815260048101929092526024820152604490fd5b346102c4575f3660031901126102c4576020604051620f42408152f35b346102c4575f3660031901126102c45760205f54604051908152f35b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c45761231d61277d565b61232561279d565b8015610592577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364602047611ac48115156125d1565b346102c45760203660031901126102c45760043561237661277d565b801515806123ed575b156123b5576020817fed1b8a3acdd1de20e69e80caa4b3762f856b4e74e0fad35189af650e20c3085a92600355604051908152a1005b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69644d617853696741676560801b6044820152606490fd5b506201518081111561237f565b346102c45760203660031901126102c45760043561241661277d565b62015180808211612452577fad8a71533bfa097e1676af0fbe86477cb4b1a4c3456cc493a1253ae5d9b7cf2d60208380600155604051908152a1005b6040516306115faf60e11b815260048101929092526024820152604490fd5b600435906001600160a01b03821682036102c457565b606081019081106001600160401b03821117610aef57604052565b6101e081019081106001600160401b03821117610aef57604052565b60c081019081106001600160401b03821117610aef57604052565b604081019081106001600160401b03821117610aef57604052565b90601f801991011681019081106001600160401b03821117610aef57604052565b6001600160401b038111610aef57601f01601f191660200190565b92919261253c82612515565b9161254a60405193846124f4565b8294818452818301116102c4578281602093845f960137010152565b9181601f840112156102c4578235916001600160401b0383116102c457602083818601950101116102c457565b91908251928382525f5b8481106125bd575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161259d565b156125d857565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b3d15612634573d9061261b82612515565b9161262960405193846124f4565b82523d5f602084013e565b606090565b1561264057565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b9190820391821161268457565b634e487b7160e01b5f52601160045260245ffd5b6001549081156127115760018060a01b03165f52600560205260405f20604051906126c282612487565b54906001600160801b038216815260406001600160401b038360801c169283602084015260c01c9101528015612711576126fc9042612677565b818110156127115761270d91612677565b5f91565b50506001905f90565b61272261277d565b61272a6127cc565b5f80516020612da8833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1565b5f1981146126845760010190565b5f80516020612d68833981519152546001600160a01b031633036119a057565b5f80516020612dc883398151915260028154146127ba5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff5f80516020612da883398151915254166127e457565b60405163d93c066560e01b8152600490fd5b60ff5f80516020612da883398151915254161561280f57565b604051638dfc202b60e01b8152600490fd5b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d6883398151915280549182166001600160a01b0393841690811790915591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600182811c921680156128ba575b60208310146128a657565b634e487b7160e01b5f52602260045260245ffd5b91607f169161289b565b604051905f825f80516020612d48833981519152918254926128e58461288c565b808452936020916001918281169081156129605750600114612913575b505050612911925003836124f4565b565b5f9081525f80516020612d888339815191529590935091905b82841061294857506129119450505081016020015f8080612902565b8554888501830152948501948794509281019261292c565b925050506020925061291194915060ff191682840152151560051b8201015f8080612902565b604051905f827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103918254926129ba8461288c565b8084529360209160019182811690811561296057506001146129e557505050612911925003836124f4565b5f9081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410612a2d57506129119450505081016020015f8080612902565b85548885018301529485019487945092810192612a11565b8151919060418303612a7557612a6e9250602082015190606060408401519301515f1a90612ba8565b9192909190565b50505f9160029190565b6004811015612aee5780612a91575050565b60018103612aab5760405163f645eedf60e01b8152600490fd5b60028103612acc5760405163fce698f760e01b815260048101839052602490fd5b600314612ad65750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612b3157565b604051631afcd79f60e31b8152600490fd5b612b4b612c35565b612b53612c9f565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152612ba2816124be565b51902090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612c2a579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612c1f575f516001600160a01b03811615612c1557905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b612c3d6128c4565b8051908115612c4d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015612c7a5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b612ca7612986565b8051908115612cb7576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612c7a5790565b90612d0b5750805115612cf957805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612d3e575b612d1c575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612d1456fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930042ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57dcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00a2646970667358221220c9e418977726284d1ff300ba9f262ea3ccb7ef8e2fd1432a9157447ed4773c0b64736f6c63430008170033a26469706673582212209c9ef9515c3a337426fdac427acdf6d40e5d3f2b2904cf0b0ba2fe8b4dff294064736f6c63430008170033",
                "sourceMap": "180:464:53:-:0;;;;;;;3166:4:3;180:464:53;;;;3166:4:3;180:464:53;;;3166:4:3;180:464:53;1038:4:13;180:464:53;;;1038:4:13;180:464:53;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "60806040818152600436101562000014575f80fd5b5f915f3560e01c9081631ed7831c1462000a46575080632ade388014620008675780633e5e3c2314620007df5780633f7286f4146200075757806354a4da3b146200060557806366d9a9a014620004d257806385226c81146200043a578063916a17c61462000386578063b0464fdc14620002d2578063b5508aa9146200023a578063ba414fa6146200021157828163e0f93be7146200018e57508063e20c9f7114620000f25763fa7626d414620000ca575f80fd5b34620000ee5781600319360112620000ee5760209060ff601f541690519015158152f35b5080fd5b5090346200018b57806003193601126200018b578151918291601554808552602080950194601583527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47592905b8282106200016a576200016686866200015b828b038362000cac565b519182918262000acd565b0390f35b83546001600160a01b0316875295860195600193840193909101906200013f565b80fd5b8083346200020e57816003193601126200020e57737109709ecfa91a80626ff3989d68f67f5b1dd12d90813b156200020a5782602492825193848092630c9fd58160e01b8252600160048301525afa908115620002015750620001ee5750f35b620001f99062000c97565b6200018b5780f35b513d84823e3d90fd5b5050fd5b50fd5b5034620000ee5781600319360112620000ee576020906200023162000fab565b90519015158152f35b5090346200018b57806003193601126200018b57506019546200025d8162000ccf565b906200026c8351928362000cac565b80825260195f90815260207f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c96958185015b848410620002b35786518062000166888262000b92565b6001838192620002c38562000ce8565b8152019201930192906200029c565b5090346200018b57806003193601126200018b57601c54620002f48162000ccf565b91620003038451938462000cac565b818352601c815260207f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a2118185015b848410620003485786518062000166888262000bf9565b60028360019289516200035b8162000c7a565b848060a01b0386541681526200037385870162000dc2565b8382015281520192019301929062000331565b5090346200018b57806003193601126200018b57601d54620003a88162000ccf565b91620003b78451938462000cac565b818352601d815260207f6d4407e7be21f808e6509aa9fa9143369579dd7d760fe20a2c09680fc146134f8185015b848410620003fc5786518062000166888262000bf9565b60028360019289516200040f8162000c7a565b848060a01b0386541681526200042785870162000dc2565b83820152815201920193019290620003e5565b5090346200018b57806003193601126200018b5750601a546200045d8162000ccf565b906200046c8351928362000cac565b808252601a5f90815260207f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e8185015b848410620004b35786518062000166888262000b92565b6001838192620004c38562000ce8565b8152019201930192906200049c565b5090346200018b57806003193601126200018b57601b54620004f48162000ccf565b91620005038451938462000cac565b818352601b815260209283810192827f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc1855b838310620005bd57505050508451938085019181865251809252858501868360051b8701019493965b8388106200056c5786860387f35b90919293948380620005ab600193603f198b8203018752895190836200059a83518984528984019062000b13565b920151908481840391015262000b53565b9701930197019690939291936200055e565b6002886001928b9a97989a51620005d48162000c7a565b620005df8662000ce8565b8152620005ee85870162000dc2565b838201528152019201920191909694939662000535565b5034620006f3575f366003190112620006f357805190612fb8918281019281841067ffffffffffffffff851117620007435762001055823960208166038d7ea4c68000948581520301905ff0801562000739578151635e031f0d60e11b815290602090829060049082906001600160a01b03165afa9081156200072f575f91620006f7575b50737109709ecfa91a80626ff3989d68f67f5b1dd12d92833b15620006f35760445f928451958693849263260a5b1560e21b8452600484015260248301525afa908115620006ea5750620006dc575080f35b620006e8915062000c97565b005b513d5f823e3d90fd5b5f80fd5b90506020813d60201162000726575b81620007156020938362000cac565b81010312620006f357515f6200068a565b3d915062000706565b82513d5f823e3d90fd5b50513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b5034620006f3575f366003190112620006f3578051601780548083525f918252602080840194927fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c1592915b828210620007be576200016686866200015b828b038362000cac565b83546001600160a01b031687529586019560019384019390910190620007a2565b5034620006f3575f366003190112620006f3578051601880548083525f918252602080840194927fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e92915b82821062000846576200016686866200015b828b038362000cac565b83546001600160a01b0316875295860195600193840193909101906200082a565b5034620006f3575f366003190112620006f357601e54620008888162000ccf565b90620008978351928362000cac565b8082526020918281018092601e5f527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e3505f925b8284106200099f57505050508351928084019181855251809252848401600590868460051b87010194965f925b858410620009055787870388f35b90919293809596603f19898203018552895190828582019260018060a01b03815116835201519185848301528251809152606090848284019282881b8501019401925f5b8281106200096e57505050505090806001929a019401940192979594939190620008f7565b919395806200098c6001939597605f19878203018952895162000b13565b970195019101918a959493919262000949565b86889795969851620009b18162000c7a565b83546001600160a01b0316815260018481018054909190620009d38162000ccf565b92620009e28d51948562000cac565b8184525f908152858120908685015b83821062000a1e5750505050509281600194846002959401528152019201930192909694939596620008ca565b938095969783949562000a3383949562000ce8565b815201930191018b9695949392620009f1565b905034620006f3575f366003190112620006f3576016549182825260208083019360165f527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289915f905b82821062000aac576200016686866200015b828b038362000cac565b83546001600160a01b03168752958601956001938401939091019062000a90565b60209060206040818301928281528551809452019301915f5b82811062000af5575050505090565b83516001600160a01b03168552938101939281019260010162000ae6565b91908251928382525f5b84811062000b3e575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520162000b1d565b9081518082526020808093019301915f5b82811062000b73575050505090565b83516001600160e01b0319168552938101939281019260010162000b64565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b84831062000bc85750505050505090565b909192939495848062000be8600193603f198682030187528a5162000b13565b980193019301919493929062000bb7565b6020808201908083528351809252604092604081018260408560051b8401019601945f925b85841062000c30575050505050505090565b90919293949596858062000c68600193603f1986820301885286838d51878060a01b0381511684520151918185820152019062000b53565b99019401940192959493919062000c1e565b6040810190811067ffffffffffffffff8211176200074357604052565b67ffffffffffffffff81116200074357604052565b90601f8019910116810190811067ffffffffffffffff8211176200074357604052565b67ffffffffffffffff8111620007435760051b60200190565b90604051915f9080549160018360011c906001851693841562000db7575b602095868410861462000da357838952889590811562000d7f575060011462000d3d575b50505062000d3b9250038362000cac565b565b5f90815285812095935091905b81831062000d6657505062000d3b93508201015f808062000d2a565b8554888401850152948501948794509183019162000d4a565b9250505062000d3b94925060ff191682840152151560051b8201015f808062000d2a565b634e487b7160e01b5f52602260045260245ffd5b91607f169162000d06565b906040916040518093825492838352602091828401915f52825f20945f915b81600784011062000f33575062000d3b9554918482821062000f14575b82821062000ef5575b82821062000ed6575b82821062000eb7575b82821062000e98575b82821062000e79575b82821062000e5c575b501062000e47575b509050038362000cac565b6001600160e01b031916815201805f62000e3c565b83811b6001600160e01b0319168552909301926001018462000e34565b604084901b6001600160e01b0319168552909301926001018462000e2b565b606084901b6001600160e01b0319168552909301926001018462000e22565b608084901b6001600160e01b0319168552909301926001018462000e19565b60a084901b6001600160e01b0319168552909301926001018462000e10565b60c084901b6001600160e01b0319168552909301926001018462000e07565b60e084901b6001600160e01b0319168552909301926001018462000dfe565b86546001600160e01b031960e082811b8216875260c083811b83168989015260a084811b8416868a0152608085811b85166060808c019190915286901b8516908a015284861b84169089015283891b831690880152911690850152600190960195889550610100909301926008929092019162000de1565b60085460ff16801562000fbb5790565b50604051630667f9d760e41b8152602081604481737109709ecfa91a80626ff3989d68f67f5b1dd12d8060048301526519985a5b195960d21b60248301525afa90811562001049575f9162001011575b50151590565b90506020813d60201162001040575b816200102f6020938362000cac565b81010312620006f357515f6200100b565b3d915062001020565b6040513d5f823e3d90fdfe60c0346200016257601f62002fb838819003918201601f19168301926001600160401b0392909183851183861017620001665781602092849260409788528339810103126200016257513060805280156200011e5760a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff82851c166200010d578080831603620000c8575b8351612e3d90816200017b8239608051818181611ebf0152611f78015260a05181818161063f0152818161071001526122410152f35b6001600160401b0319909116811790915581519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f808062000092565b835163f92ee8a960e01b8152600490fd5b825162461bcd60e51b815260206004820152601560248201527f4d61784665652063616e6e6f74206265207a65726f00000000000000000000006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610085575b36156100475760405162461bcd60e51b815260206004820152600b60248201526a4e6f2066616c6c6261636b60a81b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275111a5c9958dd08115512081b9bdd08185b1b1bddd95960521b6044820152606490fd5b5f3560e01c806310cb729f146123fa578063110b32851461235a578063164e68de146122ef5780631904863c146122d357806327ff6223146122b6578063319a2cbb1461222357806333917ca9146121f257806333b3e099146121d55780633f4ba83a146121735780633fb19a53146121565780634980f2881461212d5780634f1ef28614611f2957806351858e271461191557806352d1902d14611ead5780635836d17b14611b255780635c975abb14611af75780636ff1c9bc14611a51578063715018a6146119d4578063738fc2f9146119b857806379ba5097146119675780637ecebe001461192f5780638456cb591461191557806384b0196e146117bd5780638da5cb5b146117895780639b50c5f914610eae578063a23195ed14610cd5578063ad3cb1cc14610c8c578063b4988fd014610662578063bc063e1a14610628578063c771909c14610600578063c8910913146105a4578063d279b0ca1461051c578063d47875d0146104ac578063d91a9458146103bb578063e30c397814610387578063ee4eb93d14610369578063f2fde38b146102e5578063fede6114146102c85763ffc9896b0361000e57346102c45760203660031901126102c45760806001600160a01b03610259612471565b16805f52600560205260405f2090604080519261027584612487565b54916001600160801b038316938481526001600160401b0384871c169384602083015260c01c92839101525f52600660205260405f205491604051938452602084015260408301526060820152f35b5f80fd5b346102c4575f3660031901126102c4576020604051620151808152f35b346102c45760203660031901126102c4576102fe612471565b61030661277d565b5f80516020612de883398151915280546001600160a01b0319166001600160a01b039283169081179091555f80516020612d68833981519152549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b346102c4575f3660031901126102c45760206040516361cf99808152f35b346102c4575f3660031901126102c4575f80516020612de8833981519152546040516001600160a01b039091168152602090f35b346102c45760203660031901126102c4576001600160a01b036103dc612471565b165f5260046020526101e060405f208054906001600160801b03906001810154906001600160401b039263ffffffff906002830154600460038501549401549460405197838116895260801c60208901528281166040890152868160801c166060890152838160c01c16608089015260e01c60a088015281811660c088015260801c60e08701528216610100860152808260801c16610120860152808260a01c166101408601528160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b346102c45760203660031901126102c4576001600160a01b036104cd612471565b165f5260056020526040805f208151906104e682612487565b546001600160801b03811691828152836001600160401b038360801c169283602084015260c01c91015282519182526020820152f35b346102c45760203660031901126102c457610535612471565b61053d61277d565b6001600160a01b03168015610592576020817f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73926bffffffffffffffffffffffff60a01b6002541617600255604051908152a1005b60405163d92e233d60e01b8152600490fd5b346102c45760203660031901126102c4576001600160a01b036105c5612471565b165f526005602052606060405f2054604051906001600160801b03811682526001600160401b038160801c16602083015260c01c6040820152f35b346102c4575f3660031901126102c4576002546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c45760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346102c45760603660031901126102c4576001600160a01b0360243581811681036102c457816044351680604435036102c4577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00918254916001600160401b03831680159081610c7c575b6001149081610c72575b159081610c69575b50610c575760016001600160401b0319841617845560ff8360401c1615610c38575b848216156105925715610592577f00000000000000000000000000000000000000000000000000000000000000008060043511610c185750610741612b02565b610749612b02565b610751612b02565b5f80516020612da8833981519152805460ff1916905561076f612b02565b610777612b02565b60015f80516020612dc88339815191525560405193610795856124d9565b600e85526d42617365426164676553636f726560901b6020860152604051946107bd866124d9565b60018652603160f81b60208701526107d3612b02565b6107db612b02565b8051906001600160401b038211610aef5781906108055f80516020612d488339815191525461288c565b601f8111610b9a575b50602090601f8311600114610b0e575f92610b03575b50508160011b915f199060031b1c1916175f80516020612d48833981519152555b84516001600160401b038111610aef577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10390610881825461288c565b601f8111610a8d575b506020601f82116001146109e4579181602094927f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73969460ff999a5f926109d9575b50508160011b915f199060031b1c19161790555b5f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100555f7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1015561092e612b02565b6004355f55600280546001600160a01b031916838316179055601e60015561025860035561095d604435612821565b60405191168152a17f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7660206040516004358152a160401c161561099c57005b68ff00000000000000001981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b015190508a806108cc565b601f19821697835f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75985f5b818110610a7557509260ff98997f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73979593600193836020999710610a5d575b505050811b0190556108e0565b01515f1960f88460031b161c191690558a8080610a50565b838301518b556001909a019960209384019301610a11565b825f527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f830160051c81019160208410610ae5575b601f0160051c01905b818110610ada575061088a565b5f8155600101610acd565b9091508190610ac4565b634e487b7160e01b5f52604160045260245ffd5b015190508780610824565b92505f80516020612d488339815191525f525f80516020612d88833981519152905f935b601f1984168510610b7f576001945083601f19811610610b67575b505050811b015f80516020612d4883398151915255610845565b01515f1960f88460031b161c19169055878080610b4d565b81810151835560209485019460019093019290910190610b32565b9091505f80516020612d488339815191525f52601f830160051c5f80516020612d88833981519152019060208410610c03575b90601f8493920160051c5f80516020612d8883398151915201905b818110610bf5575061080e565b5f8155849350600101610be8565b5f80516020612d888339815191529150610bcd565b60449060405190631e0bd6c160e31b825260043560048301526024820152fd5b68ffffffffffffffffff19831668010000000000000001178455610701565b60405163f92ee8a960e01b8152600490fd5b905015866106df565b303b1591506106d7565b604085901c60ff161591506106cd565b346102c4575f3660031901126102c457610cd1604051610cab816124d9565b60058152640352e302e360dc1b6020820152604051918291602083526020830190612593565b0390f35b346102c45760203660031901126102c4576001600160a01b03610cf6612471565b165f5260046020526101e060405f206001600160401b03604051610d19816124a2565b8254926001600160801b03841682528360801c602083015260018101546001600160801b0381166040840152838160801c16606084015263ffffffff8160c01c1660808401528060e01c60a08401526002820154906001600160801b03821660c08501528160801c60e085015260046003840154936001600160801b03851661010087015263ffffffff8560801c1661012087015263ffffffff8560a01c1661014087015263ffffffff8560c01c166101608701528460e01c6101808701520154938585166101a08201526101c0868660401c16910152604051956001600160801b038116875260801c60208701526001600160801b0381166040870152848160801c16606087015263ffffffff8160c01c16608087015260e01c60a08601526001600160801b03811660c086015260801c60e08501526001600160801b03811661010085015263ffffffff8160801c1661012085015263ffffffff8160a01c1661014085015263ffffffff8160c01c1661016085015260e01c6101808401528181166101a084015260401c166101c0820152f35b6102003660031901126102c4576001600160401b036101a435166101a435036102c4576101e4356001600160401b0381116102c457610ef1903690600401612566565b90610efa61279d565b610f026127cc565b5f5480340361176b5750620f42406004351161174957620f42406024351161172757620f424060443511611705576361cf99806001600160401b036101a43516106116d757335f52600660205260405f2054806101c435036116b65750604051917ff418e5fde2935aec5659dcc0d3addca54c1096967fe1a5e81cbcfc2ef0e4529a60208401523360408401526004356060840152602435608084015260443560a084015260643560c084015260843560e084015260a43561010084015260c43561012084015260e4356101408401526101043561016084015261012435610180840152610144356101a0840152610164356101c0840152610184356101e08401526001600160401b036101a435166102008401526102206101c435818501528352826102408101106001600160401b0361024085011117610aef5761108861108e9261108085610240611097970160405260208151910120611063612b43565b6042916040519161190160f01b8352600283015260228201522090565b923691612530565b90612a45565b90929192612a7f565b6002546001600160a01b039081169116036116a457335f52600460205260405f206001600160401b036004604051926110cf846124a2565b80546001600160801b038116855260801c602085015260018101546001600160801b0381166040860152838160801c16606086015263ffffffff8160c01c16608086015260e01c60a085015260028101546001600160801b03811660c086015260801c60e085015260038101546001600160801b03811661010086015263ffffffff8160801c1661012086015263ffffffff8160a01c1661014086015263ffffffff8160c01c1661016086015260e01c61018085015201548181166101a084015260401c16806101c0830152806001600160401b036101a4351611156116765750600154908115158061165f575b61161d575b50506001600160401b036101a4351642106115fd576111ed6001600160401b036101a4351642612677565b600354908181116115e057604051611204816124a2565b6001600160801b036004351681526001600160801b036024351660208201526001600160801b036044351660408201526001600160401b0360643516606082015263ffffffff60843516608082015263ffffffff60a4351660a08201526001600160801b0360c4351660c08201526001600160801b0360e4351660e08201526001600160801b03610104351661010082015263ffffffff610124351661012082015263ffffffff610144351661014082015263ffffffff610164351661016082015263ffffffff61018435166101808201526001600160401b0342166101a08201526001600160401b036101a435166101c0820152335f526004602052600460405f206001600160801b038351166001600160801b031982541617815561134d6001600160801b0360208501511682906001600160801b0382549181199060801b169116179055565b6040830151606084015160808086015160a087015160e01b6001600160e01b0319166001600160801b039094169290911b67ffffffffffffffff60801b169190911763ffffffff60c01b60c09290921b919091161717600182015560c083015160e084015160801b6fffffffffffffffffffffffffffffffff19166001600160801b03919091161760028201556101008301516003820180546101208601516101408701516101608801516001600160e01b03199093166001600160801b03959095169490941760809190911b63ffffffff60801b161760a09390931b63ffffffff60a01b169290921760c09290921b63ffffffff60c01b169190911790556101808301516003820180546001600160e01b031660e09290921b6001600160e01b03191691909117905501906001600160401b036101a0820151166fffffffffffffffff00000000000000006101c0845493015160401b16916001600160801b031916171790556040516114c081612487565b6001600160801b03600435168152602081016001600160401b03421681526115466001600160401b036040840192816101a435168452335f5260056020526001600160801b0360405f209551166001600160801b0319865416178555511683908154906001600160401b0360801b9060801b16906001600160401b0360801b1916179055565b5181546001600160c01b031660c09190911b6001600160c01b031916179055600660205260405f2080546115799061276f565b90556040517f893ee2884748c042330e2dba3ef220312d770a54d6d902d1c7612d9b434ab0a73391806115c14234600435846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255602060405160018152f35b60449160405191635ee1691b60e11b835260048301526024820152fd5b604460035460405190635ee1691b60e11b82525f60048301526024820152fd5b6001600160401b036101a06116359201511642612677565b90808210156111c25760249161164a91612677565b604051906365a85b4760e01b82526004820152fd5b506001600160401b036101a08201511615156111bd565b604051634ef2701560e01b81526001600160401b036101a43581166004830152919091166024820152604490fd5b604051632057875960e21b8152600490fd5b604490604051906306427aeb60e01b82526101c43560048301526024820152fd5b6040516331b3a51360e01b81526101a4356001600160401b031660048201526361cf99806024820152604490fd5b604051635467da8d60e11b8152604480356004830152620f4240602483015290fd5b6044604051635467da8d60e11b81526024356004820152620f42406024820152fd5b6044604051635467da8d60e11b81526004356004820152620f42406024820152fd5b60449060405190631e0bd6c160e31b82523460048301526024820152fd5b346102c4575f3660031901126102c4575f80516020612d68833981519152546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c4577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005415806118ec575b156118af576118036128c4565b61180b612986565b6040516020808201928284106001600160401b03851117610aef57916020611864859461185697966040525f8452604051978897600f60f81b895260e0858a015260e0890190612593565b908782036040890152612593565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061189857505050500390f35b835185528695509381019392810192600101611889565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10154156117f6565b346102c4575f3660031901126102c45761192d61271a565b005b346102c45760203660031901126102c4576001600160a01b03611950612471565b165f526006602052602060405f2054604051908152f35b346102c4575f3660031901126102c4575f80516020612de883398151915254336001600160a01b03909116036119a05761192d33612821565b60405163118cdaa760e01b8152336004820152602490fd5b346102c4575f3660031901126102c45760206040516102588152f35b346102c4575f3660031901126102c4576119ec61277d565b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d68833981519152805491821690555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c457611a7f61277d565b611a876127f6565b611a8f61279d565b8015610592577f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695602047611ac48115156125d1565b611add5f80808085895af1611ad761260a565b50612639565b604051908152a260015f80516020612dc883398151915255005b346102c4575f3660031901126102c457602060ff5f80516020612da883398151915254166040519015158152f35b60803660031901126102c457602460043581356001600160401b03808216908183036102c45760448035956064358381116102c457611b68903690600401612566565b90611b7161279d565b611b796127cc565b5f54803403611e925750620f4240808911611e7657506361cf9980808710611e5a5750335f5260209860068a5260405f2054808203611e3e57509161108861108e926110808b8d611c1c97604051918201927fd0a0509035718ad455d593d20a83743ce5d6920842ee8cb1f4d76d7197a7bcb8845233604084015260608301528c608083015260a082015260a08152611c11816124be565b519020611063612b43565b6002546001600160a01b039081169116036116a457335f526005875260405f20946040805196611c4b88612487565b54916001600160801b039788841681528a810193878160801c16855260c01c928391015281871115611e15575050600154908482151580611e09575b611de5575b505050834210611dc957611ca08442612677565b9060035490818311611db15750505050611d1d9060405193611cc185612487565b85811685524282168786019081526040808701958652335f90815260058a522095518654915167ffffffffffffffff60801b1991909316166001600160c01b031990911617911660801b67ffffffffffffffff60801b16178355565b5181546001600160c01b031660c09190911b6001600160c01b0319161790556006825260405f208054611d4f9061276f565b90556040517fd1ab2b2d603dc80565da0286deeb7d3699341e28d8234689428dbe9b7d58c8ac339180611d95423487846040919493926060820195825260208201520152565b0390a260015f80516020612dc883398151915255604051908152f35b60405192635ee1691b60e11b84526004840152820152fd5b600354604051635ee1691b60e11b81525f600482015291820152fd5b611df191511642612677565b90808210611dff5784611c8c565b9061164a91612677565b50808251161515611c87565b604051634ef2701560e01b81526001600160401b03918216600482015291166024820152604490fd5b85925084604051926306427aeb60e01b84526004840152820152fd5b86859185604051926331b3a51360e01b84526004840152820152fd5b8885918560405192635467da8d60e11b84526004840152820152fd5b604051631e0bd6c160e31b8152346004820152938401525050fd5b346102c4575f3660031901126102c4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611f175760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b60403660031901126102c457611f3d612471565b6024356001600160401b0381116102c457366023820112156102c457611f6d903690602481600401359101612530565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163081149081156120ff575b50611f1757611fb161277d565b8116906040516352d1902d60e01b8152602081600481865afa5f91816120cb575b50611ff057604051634c9c8ce360e01b815260048101849052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc929192908181036120b35750823b1561209a5780546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561208157505f8083602061192d95519101845af461207b61260a565b91612ce4565b9150503461208b57005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101839052602490fd5b60249060405190632a87526960e21b82526004820152fd5b9091506020813d6020116120f7575b816120e7602093836124f4565b810103126102c457519085611fd2565b3d91506120da565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141584611fa4565b346102c45760203660031901126102c457602061214e600435611063612b43565b604051908152f35b346102c4575f3660031901126102c4576020600154604051908152f35b346102c4575f3660031901126102c45761218b61277d565b6121936127f6565b5f80516020612da883398151915260ff1981541690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b346102c4575f3660031901126102c4576020600354604051908152f35b346102c45760203660031901126102c4576040612215612210612471565b612698565b825191151582526020820152f35b346102c45760203660031901126102c45760043561223f61277d565b7f0000000000000000000000000000000000000000000000000000000000000000808211612297577f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76602083805f55604051908152a1005b604051631e0bd6c160e31b815260048101929092526024820152604490fd5b346102c4575f3660031901126102c4576020604051620f42408152f35b346102c4575f3660031901126102c45760205f54604051908152f35b346102c45760203660031901126102c4576004356001600160a01b038116908190036102c45761231d61277d565b61232561279d565b8015610592577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364602047611ac48115156125d1565b346102c45760203660031901126102c45760043561237661277d565b801515806123ed575b156123b5576020817fed1b8a3acdd1de20e69e80caa4b3762f856b4e74e0fad35189af650e20c3085a92600355604051908152a1005b60405162461bcd60e51b815260206004820152601060248201526f496e76616c69644d617853696741676560801b6044820152606490fd5b506201518081111561237f565b346102c45760203660031901126102c45760043561241661277d565b62015180808211612452577fad8a71533bfa097e1676af0fbe86477cb4b1a4c3456cc493a1253ae5d9b7cf2d60208380600155604051908152a1005b6040516306115faf60e11b815260048101929092526024820152604490fd5b600435906001600160a01b03821682036102c457565b606081019081106001600160401b03821117610aef57604052565b6101e081019081106001600160401b03821117610aef57604052565b60c081019081106001600160401b03821117610aef57604052565b604081019081106001600160401b03821117610aef57604052565b90601f801991011681019081106001600160401b03821117610aef57604052565b6001600160401b038111610aef57601f01601f191660200190565b92919261253c82612515565b9161254a60405193846124f4565b8294818452818301116102c4578281602093845f960137010152565b9181601f840112156102c4578235916001600160401b0383116102c457602083818601950101116102c457565b91908251928382525f5b8481106125bd575050825f602080949584010152601f8019910116010190565b60208183018101518483018201520161259d565b156125d857565b60405162461bcd60e51b815260206004820152600a6024820152694e6f2062616c616e636560b01b6044820152606490fd5b3d15612634573d9061261b82612515565b9161262960405193846124f4565b82523d5f602084013e565b606090565b1561264057565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b9190820391821161268457565b634e487b7160e01b5f52601160045260245ffd5b6001549081156127115760018060a01b03165f52600560205260405f20604051906126c282612487565b54906001600160801b038216815260406001600160401b038360801c169283602084015260c01c9101528015612711576126fc9042612677565b818110156127115761270d91612677565b5f91565b50506001905f90565b61272261277d565b61272a6127cc565b5f80516020612da8833981519152600160ff198254161790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1565b5f1981146126845760010190565b5f80516020612d68833981519152546001600160a01b031633036119a057565b5f80516020612dc883398151915260028154146127ba5760029055565b604051633ee5aeb560e01b8152600490fd5b60ff5f80516020612da883398151915254166127e457565b60405163d93c066560e01b8152600490fd5b60ff5f80516020612da883398151915254161561280f57565b604051638dfc202b60e01b8152600490fd5b5f80516020612de883398151915280546001600160a01b03199081169091555f80516020612d6883398151915280549182166001600160a01b0393841690811790915591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600182811c921680156128ba575b60208310146128a657565b634e487b7160e01b5f52602260045260245ffd5b91607f169161289b565b604051905f825f80516020612d48833981519152918254926128e58461288c565b808452936020916001918281169081156129605750600114612913575b505050612911925003836124f4565b565b5f9081525f80516020612d888339815191529590935091905b82841061294857506129119450505081016020015f8080612902565b8554888501830152948501948794509281019261292c565b925050506020925061291194915060ff191682840152151560051b8201015f8080612902565b604051905f827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103918254926129ba8461288c565b8084529360209160019182811690811561296057506001146129e557505050612911925003836124f4565b5f9081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410612a2d57506129119450505081016020015f8080612902565b85548885018301529485019487945092810192612a11565b8151919060418303612a7557612a6e9250602082015190606060408401519301515f1a90612ba8565b9192909190565b50505f9160029190565b6004811015612aee5780612a91575050565b60018103612aab5760405163f645eedf60e01b8152600490fd5b60028103612acc5760405163fce698f760e01b815260048101839052602490fd5b600314612ad65750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b5f52602160045260245ffd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612b3157565b604051631afcd79f60e31b8152600490fd5b612b4b612c35565b612b53612c9f565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a08152612ba2816124be565b51902090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612c2a579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15612c1f575f516001600160a01b03811615612c1557905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b612c3d6128c4565b8051908115612c4d576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015612c7a5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b612ca7612986565b8051908115612cb7576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015612c7a5790565b90612d0b5750805115612cf957805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612d3e575b612d1c575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612d1456fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1029016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930042ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57dcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00a2646970667358221220c9e418977726284d1ff300ba9f262ea3ccb7ef8e2fd1432a9157447ed4773c0b64736f6c63430008170033a26469706673582212209c9ef9515c3a337426fdac427acdf6d40e5d3f2b2904cf0b0ba2fe8b4dff294064736f6c63430008170033",
                "sourceMap": "180:464:53:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:26:13;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2723:18:6;180:464:53;;;;;;;;;2723:18:6;180:464:53;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1657:19:2;;;;;;180:464:53;;;;;;;;;;;;1657:19:2;;323:4:53;180:464;1657:19:2;;180:464:53;1657:19:2;;;;;;;;;;180:464:53;;1657:19:2;;;;:::i;:::-;180:464:53;;1657:19:2;180:464:53;1657:19:2;180:464:53;;;;;;;;1657:19:2;180:464:53;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2575:18:6;180:464:53;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2575:18:6;180:464:53;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2876:18:6;180:464:53;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2876:18:6;180:464:53;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3653:18:6;180:464:53;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3653:18:6;180:464:53;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3162:18:6;180:464:53;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3162:18:6;180:464:53;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;3346:26:6;180:464:53;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3346:26:6;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:464:53;;;;;;495:42;;;;;;;;;;;;;;;;;;;180:464;525:11;;180:464;;;;495:42;;;180:464;495:42;;;;;180:464;;-1:-1:-1;;;599:22:53;;180:464;;;;;;;;;-1:-1:-1;;;;;180:464:53;599:22;;;;;;;180:464;599:22;;;180:464;;;2349:24:2;;;;;;180:464:53;;;;;;;;;;;;;2349:24:2;;180:464:53;2349:24:2;;180:464:53;;;;;2349:24:2;;;;;;;;;;180:464:53;;;2349:24:2;;;;;:::i;:::-;180:464:53;2349:24:2;180:464:53;;;;;;;;2349:24:2;180:464:53;;;599:22;;;180:464;599:22;;180:464;599:22;;;;;;180:464;599:22;;;:::i;:::-;;;180:464;;;;;599:22;;;;;;-1:-1:-1;599:22:53;;;180:464;;;;;;;;;495:42;180:464;;;;;;;;;495:42;180:464;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:464:53;;;;;;3501:18:6;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:464:53;;;;;;3794:16:6;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:464:53;;;;3948:19:6;180:464:53;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;3948:19:6;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;180:464:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;180:464:53;;;;3018:16:6;180:464:53;;;;;;;;;;3018:16:6;180:464:53;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:464:53;;;;;;;;;-1:-1:-1;180:464:53;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:464:53;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;180:464:53;;;;;;;;-1:-1:-1;;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:464:53;;;;;-1:-1:-1;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:464:53;;-1:-1:-1;180:464:53;;-1:-1:-1;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;180:464:53;;;;;;;;;;;;-1:-1:-1;;;;;;180:464:53;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;180:464:53;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;180:464:53;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;180:464:53;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;180:464:53;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;180:464:53;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;180:464:53;;;;;;;;;;;;;;;-1:-1:-1;;;;;;180:464:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;180:464:53;;;;;;;;;;;;;1243:204:2;1302:7;180:464:53;;;;;;;1325:14:2;:::o;1298:143::-;180:464:53;;;;;;1377:39:2;;;180:464:53;192:59:2;180:464:53;;1377:39:2;;;;180:464:53;192:59:2;;;;;;180:464:53;1377:39:2;;;;;;;-1:-1:-1;1377:39:2;;;1298:143;1377:53;;;1370:60;:::o;1377:39::-;;;;;;;;;;;;;;;;;:::i;:::-;;;192:59;;;;;1377:39;;;;;;-1:-1:-1;1377:39:2;;;180:464:53;;;-1:-1:-1;180:464:53;;;;",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_TEST()": "fa7626d4",
                "excludeArtifacts()": "b5508aa9",
                "excludeContracts()": "e20c9f71",
                "excludeSelectors()": "b0464fdc",
                "excludeSenders()": "1ed7831c",
                "failed()": "ba414fa6",
                "targetArtifactSelectors()": "66d9a9a0",
                "targetArtifacts()": "85226c81",
                "targetContracts()": "3f7286f4",
                "targetInterfaces()": "2ade3880",
                "targetSelectors()": "916a17c6",
                "targetSenders()": "3e5e3c23",
                "test_Compile()": "e0f93be7",
                "test_Deploy()": "54a4da3b"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/test/Counter.t.sol": {
      "CounterTest": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_TEST",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "counter",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "contract Counter"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "failed",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "setUp",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "targetArtifactSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "components": [
                      {
                        "name": "artifact",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetInterfaces",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedInterfaces_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "artifacts",
                        "type": "string[]",
                        "internalType": "string[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "testFuzz_SetNumber",
                "inputs": [
                  {
                    "name": "x",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_Increment",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "event",
                "name": "log",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_address",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes32",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_int",
                "inputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_address",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes32",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_string",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_string",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_uint",
                "inputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "logs",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"contract Counter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"testFuzz_SetNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Counter.t.sol\":\"CounterTest\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"src/Counter.sol\":{\"keccak256\":\"0x09277f949d59a9521708c870dc39c2c434ad8f86a5472efda6a732ef728c0053\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://94cd5258357da018bf911aeda60ed9f5b130dce27445669ee200313cd3389200\",\"dweb:/ipfs/QmNbEfWAqXCtfQpk6u7TpGa8sTHXFLpUz7uebz2FVbchSC\"]},\"test/Counter.t.sol\":{\"keccak256\":\"0xaf78310ce82c71a7a15a479054a9b5b281be8a1cbec3633081c7101861297b4a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f52e3de51bbee825657d57711d192621b5a2bb4d364d6fc93d0432cda3a5b626\",\"dweb:/ipfs/QmaS9AufFVVrNDu2XAqXJ8qUWT2qJJgbMfCHU2oSk3ZvKB\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 257,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "_failed",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2758,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "stdChainsInitialized",
                  "offset": 1,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2779,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "chains",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)"
                },
                {
                  "astId": 2783,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "defaultRpcUrls",
                  "offset": 0,
                  "slot": "10",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
                },
                {
                  "astId": 2787,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "idToAlias",
                  "offset": 0,
                  "slot": "11",
                  "type": "t_mapping(t_uint256,t_string_storage)"
                },
                {
                  "astId": 2790,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "fallbackToDefaultRpcUrls",
                  "offset": 0,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 3593,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "gasMeteringOff",
                  "offset": 1,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 5630,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "13",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 6504,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "_excludedContracts",
                  "offset": 0,
                  "slot": "21",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6507,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "_excludedSenders",
                  "offset": 0,
                  "slot": "22",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6510,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "_targetedContracts",
                  "offset": 0,
                  "slot": "23",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6513,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "_targetedSenders",
                  "offset": 0,
                  "slot": "24",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6516,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "_excludedArtifacts",
                  "offset": 0,
                  "slot": "25",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6519,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "_targetedArtifacts",
                  "offset": 0,
                  "slot": "26",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6523,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "_targetedArtifactSelectors",
                  "offset": 0,
                  "slot": "27",
                  "type": "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage"
                },
                {
                  "astId": 6527,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "_excludedSelectors",
                  "offset": 0,
                  "slot": "28",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6531,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "_targetedSelectors",
                  "offset": 0,
                  "slot": "29",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6535,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "_targetedInterfaces",
                  "offset": 0,
                  "slot": "30",
                  "type": "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage"
                },
                {
                  "astId": 12145,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "IS_TEST",
                  "offset": 0,
                  "slot": "31",
                  "type": "t_bool"
                },
                {
                  "astId": 45828,
                  "contract": "test/Counter.t.sol:CounterTest",
                  "label": "counter",
                  "offset": 1,
                  "slot": "31",
                  "type": "t_contract(Counter)43496"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_address)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "address[]",
                  "numberOfBytes": "32",
                  "base": "t_address"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_array(t_bytes4)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes4[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes4"
                },
                "t_array(t_string_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "string[]",
                  "numberOfBytes": "32",
                  "base": "t_string_storage"
                },
                "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzArtifactSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzArtifactSelector)6495_storage"
                },
                "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzInterface[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzInterface)6501_storage"
                },
                "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzSelector)6489_storage"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_contract(Counter)43496": {
                  "encoding": "inplace",
                  "label": "contract Counter",
                  "numberOfBytes": "20"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_mapping(t_string_memory_ptr,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => struct StdChains.Chain)",
                  "numberOfBytes": "32",
                  "value": "t_struct(Chain)2774_storage"
                },
                "t_mapping(t_uint256,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_string_memory_ptr": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(Chain)2774_storage": {
                  "encoding": "inplace",
                  "label": "struct StdChains.Chain",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 2767,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "name",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2769,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "chainId",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 2771,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "chainAlias",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2773,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "rpcUrl",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_string_storage"
                    }
                  ]
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(FuzzArtifactSelector)6495_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzArtifactSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6491,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "artifact",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 6494,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzInterface)6501_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzInterface",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6497,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6500,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "artifacts",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_string_storage)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzSelector)6489_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6485,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6488,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "test/Counter.t.sol:CounterTest",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "6080806040523461002d57600160ff198181600c541617600c55601f541617601f5561128e90816100328239f35b5f80fdfe6080604081815260049182361015610015575f80fd5b5f925f3560e01c9182630a9254e414610b43575081631ed7831c14610ac05781632ade3880146108f95781633e5e3c23146108765781633f7286f4146107f357839082634820a105146106be5782635c7f60d714610563575050806361bc221a1461053757806366d9a9a01461041857806385226c811461038c578063916a17c6146102e6578063b0464fdc14610240578063b5508aa9146101b4578063ba414fa61461018f578063e20c9f71146100fb5763fa7626d4146100d5575f80fd5b346100f757816003193601126100f75760209060ff601f541690519015158152f35b5080fd5b50903461018c578060031936011261018c578151918291601554808552602080950194601583527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47592905b82821061016c57610168868661015e828b0383610df0565b5191829182610c0d565b0390f35b83546001600160a01b031687529586019560019384019390910190610146565b80fd5b50346100f757816003193601126100f7576020906101ab6110cc565b90519015158152f35b50903461018c578060031936011261018c57506019546101d381610e12565b906101e083519283610df0565b80825260195f90815260207f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c96958185015b848410610224578651806101688882610ccc565b600183819261023285610e2a565b815201920193019290610210565b50903461018c578060031936011261018c57601c5461025e81610e12565b9161026b84519384610df0565b818352601c815260207f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a2118185015b8484106102ad578651806101688882610d2f565b60028360019289516102be81610dd4565b848060a01b0386541681526102d4858701610ef7565b83820152815201920193019290610299565b50903461018c578060031936011261018c57601d5461030481610e12565b9161031184519384610df0565b818352601d815260207f6d4407e7be21f808e6509aa9fa9143369579dd7d760fe20a2c09680fc146134f8185015b848410610353578651806101688882610d2f565b600283600192895161036481610dd4565b848060a01b03865416815261037a858701610ef7565b8382015281520192019301929061033f565b50903461018c578060031936011261018c5750601a546103ab81610e12565b906103b883519283610df0565b808252601a5f90815260207f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e8185015b8484106103fc578651806101688882610ccc565b600183819261040a85610e2a565b8152019201930192906103e8565b50903461018c578060031936011261018c57601b5461043681610e12565b9161044384519384610df0565b818352601b815260209283810192827f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc1855b8383106104f657505050508451938085019181865251809252858501868360051b8701019493965b8388106104aa5786860387f35b909192939483806104e5600193603f198b8203018752895190836104d5835189845289840190610c51565b9201519084818403910152610c8f565b97019301970196909392919361049d565b6002886001928b9a97989a5161050b81610dd4565b61051486610e2a565b8152610521858701610ef7565b8382015281520192019201919096949396610475565b50346100f757816003193601126100f757601f54905160089190911c6001600160a01b03168152602090f35b915091346106ba5760203660031901126106ba57601f54823592906001600160a01b039060081c8116803b156106b6578580916024865180998193633fb5c1cb60e01b83528a898401525af19586156106aa578394959661068d575b5050602090601f5460081c168451928380926341c0fac560e11b82525afa908115610683578591610651575b50737109709ecfa91a80626ff3989d68f67f5b1dd12d803b1561064d575f926044918551968794859363260a5b1560e21b855284015260248301525afa9081156106445750610638575080f35b61064190610dac565b80f35b513d5f823e3d90fd5b5f80fd5b90506020813d60201161067b575b8161066c60209383610df0565b8101031261064d57515f6105eb565b3d915061065f565b83513d87823e3d90fd5b61069991929350610dac565b6106a6578190855f6105bf565b8480fd5b508351903d90823e3d90fd5b8580fd5b5050fd5b83346107ef57826003193601126107ef57601f546001600160a01b0390849060081c8216803b156100f7578180918686518094819363684ef04560e11b83525af180156107e55790859392916107c8575b5050602090601f5460081c168351948580926341c0fac560e11b82525afa9283156107be57849361078a575b50737109709ecfa91a80626ff3989d68f67f5b1dd12d92833b1561064d5760445f928451958693849263260a5b1560e21b8452830152600160248301525afa9081156106445750610638575080f35b9092506020813d6020116107b6575b816107a660209383610df0565b8101031261064d5751918461073b565b3d9150610799565b82513d86823e3d90fd5b6107d491929350610dac565b6107e1578290848661070f565b8380fd5b84513d84823e3d90fd5b8280fd5b82843461018c578060031936011261018c578151918291601754808552602080950194601783527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c1592905b82821061085657610168868661015e828b0383610df0565b83546001600160a01b03168752958601956001938401939091019061083e565b82843461018c578060031936011261018c578151918291601854808552602080950194601883527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e92905b8282106108d957610168868661015e828b0383610df0565b83546001600160a01b0316875295860195600193840193909101906108c1565b82843461018c578060031936011261018c57601e5461091781610e12565b61092384519182610df0565b81815260208082018093601e86527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e35086925b828410610a2457505050508451938185019282865251809352858501600596808560051b8801019597835b86851061098d5788880389f35b9091929394809697603f198a82030186528a5190828682019260018060a01b03815116835201519186848301528251809152606090848284019282891b850101940192865b8281106109f657505050505090806001929b01950195019398969594929190610980565b91939580610a126001939597605f198782030189528951610c51565b970195019101918b95949391926109d2565b84899596979951610a3481610dd4565b83546001600160a01b0316815260018481018054909190610a5481610e12565b92610a618b519485610df0565b8184525f908152858120908685015b838210610a9b5750505050509281600194846002959401528152019201930192909795949397610955565b9380959697839495610aae839495610e2a565b815201930191018c9695949392610a70565b82843461018c578060031936011261018c578151918291601654808552602080950194601683527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428992905b828210610b2357610168868661015e828b0383610df0565b83546001600160a01b031687529586019560019384019390910190610b0b565b909291503461064d575f36600319011261064d5760ec8082019082821067ffffffffffffffff831117610bfa5790829161116d833903905ff08015610bf057601f8054610100600160a81b031916600892831b610100600160a81b03161790819055901c6001600160a01b031691823b1561064d575f602481928285519687948593633fb5c1cb60e01b85528401525af19081156106445750610be4575080f35b610bee9150610dac565b005b50513d5f823e3d90fd5b604185634e487b7160e01b5f525260245ffd5b60209060206040818301928281528551809452019301915f5b828110610c34575050505090565b83516001600160a01b031685529381019392810192600101610c26565b91908251928382525f5b848110610c7b575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201610c5b565b9081518082526020808093019301915f5b828110610cae575050505090565b83516001600160e01b03191685529381019392810192600101610ca0565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b848310610d015750505050505090565b9091929394958480610d1f600193603f198682030187528a51610c51565b9801930193019194939290610cf1565b6020808201908083528351809252604092604081018260408560051b8401019601945f925b858410610d65575050505050505090565b909192939495968580610d9b600193603f1986820301885286838d51878060a01b03815116845201519181858201520190610c8f565b990194019401929594939190610d54565b67ffffffffffffffff8111610dc057604052565b634e487b7160e01b5f52604160045260245ffd5b6040810190811067ffffffffffffffff821117610dc057604052565b90601f8019910116810190811067ffffffffffffffff821117610dc057604052565b67ffffffffffffffff8111610dc05760051b60200190565b90604051915f9080549160018360011c9060018516938415610eed575b6020958684108614610ed9578389528895908115610eb75750600114610e79575b505050610e7792500383610df0565b565b5f90815285812095935091905b818310610e9f575050610e7793508201015f8080610e68565b85548884018501529485019487945091830191610e86565b92505050610e7794925060ff191682840152151560051b8201015f8080610e68565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610e47565b906040916040518093825492838352602091828401915f52825f20945f915b8160078401106110555750610e7795549184828210611037575b828210611019575b828210610ffb575b828210610fdd575b828210610fbf575b828210610fa1575b828210610f85575b5010610f71575b5090500383610df0565b6001600160e01b031916815201805f610f67565b83811b6001600160e01b03191685529093019260010184610f60565b604084901b6001600160e01b03191685529093019260010184610f58565b606084901b6001600160e01b03191685529093019260010184610f50565b608084901b6001600160e01b03191685529093019260010184610f48565b60a084901b6001600160e01b03191685529093019260010184610f40565b60c084901b6001600160e01b03191685529093019260010184610f38565b60e084901b6001600160e01b03191685529093019260010184610f30565b86546001600160e01b031960e082811b8216875260c083811b83168989015260a084811b8416868a0152608085811b85166060808c019190915286901b8516908a015284861b84169089015283891b8316908801529116908501526001909601958895506101009093019260089290920191610f16565b60085460ff1680156110db5790565b50604051630667f9d760e41b8152602081604481737109709ecfa91a80626ff3989d68f67f5b1dd12d8060048301526519985a5b195960d21b60248301525afa908115611161575f9161112f575b50151590565b90506020813d602011611159575b8161114a60209383610df0565b8101031261064d57515f611129565b3d915061113d565b6040513d5f823e3d90fdfe608080604052346100155760d2908161001a8239f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c9081633fb5c1cb1460865781638381f58a14606f575063d09de08a146039575f80fd5b34606b575f366003190112606b575f545f1981146057576001015f55005b634e487b7160e01b5f52601160045260245ffd5b5f80fd5b34606b575f366003190112606b576020905f548152f35b34606b576020366003190112606b576004355f5500fea2646970667358221220e15aaae13de9c1d5b978b243fc64fef95771b6204bae0bce8741927550b3d6c964736f6c63430008170033a264697066735822122023f0e52428def63a02b8fada38f423e3838c896edb850e3ab351780189bfdbbf64736f6c63430008170033",
                "sourceMap": "151:402:54:-:0;;;;;;;3166:4:3;151:402:54;;;;3166:4:3;151:402:54;;;3166:4:3;151:402:54;1038:4:13;151:402:54;;;1038:4:13;151:402:54;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "6080604081815260049182361015610015575f80fd5b5f925f3560e01c9182630a9254e414610b43575081631ed7831c14610ac05781632ade3880146108f95781633e5e3c23146108765781633f7286f4146107f357839082634820a105146106be5782635c7f60d714610563575050806361bc221a1461053757806366d9a9a01461041857806385226c811461038c578063916a17c6146102e6578063b0464fdc14610240578063b5508aa9146101b4578063ba414fa61461018f578063e20c9f71146100fb5763fa7626d4146100d5575f80fd5b346100f757816003193601126100f75760209060ff601f541690519015158152f35b5080fd5b50903461018c578060031936011261018c578151918291601554808552602080950194601583527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47592905b82821061016c57610168868661015e828b0383610df0565b5191829182610c0d565b0390f35b83546001600160a01b031687529586019560019384019390910190610146565b80fd5b50346100f757816003193601126100f7576020906101ab6110cc565b90519015158152f35b50903461018c578060031936011261018c57506019546101d381610e12565b906101e083519283610df0565b80825260195f90815260207f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c96958185015b848410610224578651806101688882610ccc565b600183819261023285610e2a565b815201920193019290610210565b50903461018c578060031936011261018c57601c5461025e81610e12565b9161026b84519384610df0565b818352601c815260207f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a2118185015b8484106102ad578651806101688882610d2f565b60028360019289516102be81610dd4565b848060a01b0386541681526102d4858701610ef7565b83820152815201920193019290610299565b50903461018c578060031936011261018c57601d5461030481610e12565b9161031184519384610df0565b818352601d815260207f6d4407e7be21f808e6509aa9fa9143369579dd7d760fe20a2c09680fc146134f8185015b848410610353578651806101688882610d2f565b600283600192895161036481610dd4565b848060a01b03865416815261037a858701610ef7565b8382015281520192019301929061033f565b50903461018c578060031936011261018c5750601a546103ab81610e12565b906103b883519283610df0565b808252601a5f90815260207f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e8185015b8484106103fc578651806101688882610ccc565b600183819261040a85610e2a565b8152019201930192906103e8565b50903461018c578060031936011261018c57601b5461043681610e12565b9161044384519384610df0565b818352601b815260209283810192827f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc1855b8383106104f657505050508451938085019181865251809252858501868360051b8701019493965b8388106104aa5786860387f35b909192939483806104e5600193603f198b8203018752895190836104d5835189845289840190610c51565b9201519084818403910152610c8f565b97019301970196909392919361049d565b6002886001928b9a97989a5161050b81610dd4565b61051486610e2a565b8152610521858701610ef7565b8382015281520192019201919096949396610475565b50346100f757816003193601126100f757601f54905160089190911c6001600160a01b03168152602090f35b915091346106ba5760203660031901126106ba57601f54823592906001600160a01b039060081c8116803b156106b6578580916024865180998193633fb5c1cb60e01b83528a898401525af19586156106aa578394959661068d575b5050602090601f5460081c168451928380926341c0fac560e11b82525afa908115610683578591610651575b50737109709ecfa91a80626ff3989d68f67f5b1dd12d803b1561064d575f926044918551968794859363260a5b1560e21b855284015260248301525afa9081156106445750610638575080f35b61064190610dac565b80f35b513d5f823e3d90fd5b5f80fd5b90506020813d60201161067b575b8161066c60209383610df0565b8101031261064d57515f6105eb565b3d915061065f565b83513d87823e3d90fd5b61069991929350610dac565b6106a6578190855f6105bf565b8480fd5b508351903d90823e3d90fd5b8580fd5b5050fd5b83346107ef57826003193601126107ef57601f546001600160a01b0390849060081c8216803b156100f7578180918686518094819363684ef04560e11b83525af180156107e55790859392916107c8575b5050602090601f5460081c168351948580926341c0fac560e11b82525afa9283156107be57849361078a575b50737109709ecfa91a80626ff3989d68f67f5b1dd12d92833b1561064d5760445f928451958693849263260a5b1560e21b8452830152600160248301525afa9081156106445750610638575080f35b9092506020813d6020116107b6575b816107a660209383610df0565b8101031261064d5751918461073b565b3d9150610799565b82513d86823e3d90fd5b6107d491929350610dac565b6107e1578290848661070f565b8380fd5b84513d84823e3d90fd5b8280fd5b82843461018c578060031936011261018c578151918291601754808552602080950194601783527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c1592905b82821061085657610168868661015e828b0383610df0565b83546001600160a01b03168752958601956001938401939091019061083e565b82843461018c578060031936011261018c578151918291601854808552602080950194601883527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e92905b8282106108d957610168868661015e828b0383610df0565b83546001600160a01b0316875295860195600193840193909101906108c1565b82843461018c578060031936011261018c57601e5461091781610e12565b61092384519182610df0565b81815260208082018093601e86527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e35086925b828410610a2457505050508451938185019282865251809352858501600596808560051b8801019597835b86851061098d5788880389f35b9091929394809697603f198a82030186528a5190828682019260018060a01b03815116835201519186848301528251809152606090848284019282891b850101940192865b8281106109f657505050505090806001929b01950195019398969594929190610980565b91939580610a126001939597605f198782030189528951610c51565b970195019101918b95949391926109d2565b84899596979951610a3481610dd4565b83546001600160a01b0316815260018481018054909190610a5481610e12565b92610a618b519485610df0565b8184525f908152858120908685015b838210610a9b5750505050509281600194846002959401528152019201930192909795949397610955565b9380959697839495610aae839495610e2a565b815201930191018c9695949392610a70565b82843461018c578060031936011261018c578151918291601654808552602080950194601683527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428992905b828210610b2357610168868661015e828b0383610df0565b83546001600160a01b031687529586019560019384019390910190610b0b565b909291503461064d575f36600319011261064d5760ec8082019082821067ffffffffffffffff831117610bfa5790829161116d833903905ff08015610bf057601f8054610100600160a81b031916600892831b610100600160a81b03161790819055901c6001600160a01b031691823b1561064d575f602481928285519687948593633fb5c1cb60e01b85528401525af19081156106445750610be4575080f35b610bee9150610dac565b005b50513d5f823e3d90fd5b604185634e487b7160e01b5f525260245ffd5b60209060206040818301928281528551809452019301915f5b828110610c34575050505090565b83516001600160a01b031685529381019392810192600101610c26565b91908251928382525f5b848110610c7b575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201610c5b565b9081518082526020808093019301915f5b828110610cae575050505090565b83516001600160e01b03191685529381019392810192600101610ca0565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b848310610d015750505050505090565b9091929394958480610d1f600193603f198682030187528a51610c51565b9801930193019194939290610cf1565b6020808201908083528351809252604092604081018260408560051b8401019601945f925b858410610d65575050505050505090565b909192939495968580610d9b600193603f1986820301885286838d51878060a01b03815116845201519181858201520190610c8f565b990194019401929594939190610d54565b67ffffffffffffffff8111610dc057604052565b634e487b7160e01b5f52604160045260245ffd5b6040810190811067ffffffffffffffff821117610dc057604052565b90601f8019910116810190811067ffffffffffffffff821117610dc057604052565b67ffffffffffffffff8111610dc05760051b60200190565b90604051915f9080549160018360011c9060018516938415610eed575b6020958684108614610ed9578389528895908115610eb75750600114610e79575b505050610e7792500383610df0565b565b5f90815285812095935091905b818310610e9f575050610e7793508201015f8080610e68565b85548884018501529485019487945091830191610e86565b92505050610e7794925060ff191682840152151560051b8201015f8080610e68565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610e47565b906040916040518093825492838352602091828401915f52825f20945f915b8160078401106110555750610e7795549184828210611037575b828210611019575b828210610ffb575b828210610fdd575b828210610fbf575b828210610fa1575b828210610f85575b5010610f71575b5090500383610df0565b6001600160e01b031916815201805f610f67565b83811b6001600160e01b03191685529093019260010184610f60565b604084901b6001600160e01b03191685529093019260010184610f58565b606084901b6001600160e01b03191685529093019260010184610f50565b608084901b6001600160e01b03191685529093019260010184610f48565b60a084901b6001600160e01b03191685529093019260010184610f40565b60c084901b6001600160e01b03191685529093019260010184610f38565b60e084901b6001600160e01b03191685529093019260010184610f30565b86546001600160e01b031960e082811b8216875260c083811b83168989015260a084811b8416868a0152608085811b85166060808c019190915286901b8516908a015284861b84169089015283891b8316908801529116908501526001909601958895506101009093019260089290920191610f16565b60085460ff1680156110db5790565b50604051630667f9d760e41b8152602081604481737109709ecfa91a80626ff3989d68f67f5b1dd12d8060048301526519985a5b195960d21b60248301525afa908115611161575f9161112f575b50151590565b90506020813d602011611159575b8161114a60209383610df0565b8101031261064d57515f611129565b3d915061113d565b6040513d5f823e3d90fdfe608080604052346100155760d2908161001a8239f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c9081633fb5c1cb1460865781638381f58a14606f575063d09de08a146039575f80fd5b34606b575f366003190112606b575f545f1981146057576001015f55005b634e487b7160e01b5f52601160045260245ffd5b5f80fd5b34606b575f366003190112606b576020905f548152f35b34606b576020366003190112606b576004355f5500fea2646970667358221220e15aaae13de9c1d5b978b243fc64fef95771b6204bae0bce8741927550b3d6c964736f6c63430008170033a264697066735822122023f0e52428def63a02b8fada38f423e3838c896edb850e3ab351780189bfdbbf64736f6c63430008170033",
                "sourceMap": "151:402:54:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:26:13;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2723:18:6;151:402:54;;;;;;;;;2723:18:6;151:402:54;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2575:18:6;151:402:54;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2575:18:6;151:402:54;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2876:18:6;151:402:54;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2876:18:6;151:402:54;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3653:18:6;151:402:54;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3653:18:6;151:402:54;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3162:18:6;151:402:54;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3162:18:6;151:402:54;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;3346:26:6;151:402:54;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3346:26:6;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;186:22;151:402;;;;;;;;-1:-1:-1;;;;;151:402:54;;;;;;;;;;;;;;;-1:-1:-1;;151:402:54;;;;485:7;151:402;;;;;-1:-1:-1;;;;;151:402:54;;;;;485:20;;;;;151:402;;;;;;;;;;;;;485:20;;;;;;151:402;485:20;;;;;;;;;;;;;151:402;;;;;485:7;151:402;;;;;;;;;;;;;524:16;;;;;;;;;;;;;151:402;;;2349:24:2;;;;;151:402:54;;;;;;;;;;;;;;2349:24:2;;;;151:402:54;;;;;2349:24:2;;;;;;;;;;151:402:54;;;2349:24:2;;;;:::i;:::-;151:402:54;;2349:24:2;151:402:54;;;;;;;;2349:24:2;151:402:54;;;524:16;;;151:402;524:16;;151:402;524:16;;;;;;151:402;524:16;;;:::i;:::-;;;151:402;;;;;524:16;;;;;;-1:-1:-1;524:16:54;;;151:402;;;;;;;;;485:20;;;;;;;:::i;:::-;151:402;;485:20;;;;;;151:402;;;;485:20;151:402;;;;;;;;;;;485:20;151:402;;;;;;;;;;;;;;;;;;;;358:7;151:402;-1:-1:-1;;;;;151:402:54;;;;;;;358:19;;;;;151:402;;;;;;;;;;;;;358:19;;;;;;;;;;;;;;;151:402;;;396:16;151:402;358:7;151:402;;;;;;;;;;;;;396:16;;;;;;;;;;;;;151:402;;;2349:24:2;;;;;;151:402:54;;;;;;;;;;;;;2349:24:2;;;;151:402:54;414:1;151:402;;;;2349:24:2;;;;;;;;;;151:402:54;;;396:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;151:402;;;;;396:16;;;;;;;-1:-1:-1;396:16:54;;;151:402;;;;;;;;;358:19;;;;;;;:::i;:::-;151:402;;358:19;;;;;;151:402;;;;358:19;151:402;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3501:18:6;151:402:54;;;;;;;;;3501:18:6;151:402:54;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3794:16:6;151:402:54;;;;;;;;;3794:16:6;151:402:54;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3948:19:6;151:402:54;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;3948:19:6;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;259:13;151:402;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;151:402:54;;;259:13;151:402;;;;;;;259:13;151:402;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3018:16:6;151:402:54;;;;;;;;;3018:16:6;151:402:54;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;151:402:54;;;;259:13;;;;;;;;;;;;;;;;;;;;;;151:402;259:13;;;;;249:23;151:402;;-1:-1:-1;;;;;;151:402:54;;;;;-1:-1:-1;;;;;151:402:54;;;;;;;;-1:-1:-1;;;;;151:402:54;;282:20;;;;;151:402;;;;;;;;;;;;;;;282:20;;;;151:402;282:20;;;;;;;;;;151:402;;;282:20;;;;;:::i;:::-;151:402;259:13;151:402;;;;;;;;;259:13;151:402;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:402:54;;;;;;;;;-1:-1:-1;151:402:54;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:402:54;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;151:402:54;;;;;;;;-1:-1:-1;;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:402:54;;;;;-1:-1:-1;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:402:54;;-1:-1:-1;151:402:54;;-1:-1:-1;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;151:402:54;;;;;;;;;;;;-1:-1:-1;;;;;;151:402:54;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;151:402:54;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;151:402:54;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;151:402:54;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;151:402:54;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;151:402:54;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;151:402:54;;;;;;;;;;;;;;;-1:-1:-1;;;;;;151:402:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:402:54;;;;;;;;;;;;;1243:204:2;1302:7;151:402:54;;;;;;;1325:14:2;:::o;1298:143::-;151:402:54;;;;;;1377:39:2;;;151:402:54;192:59:2;151:402:54;;1377:39:2;;;;151:402:54;192:59:2;;;;;;151:402:54;1377:39:2;;;;;;;-1:-1:-1;1377:39:2;;;1298:143;1377:53;;;1370:60;:::o;1377:39::-;;;;;;;;;;;;;;;;;:::i;:::-;;;192:59;;;;;1377:39;;;;;;-1:-1:-1;1377:39:2;;;151:402:54;;;-1:-1:-1;151:402:54;;;;",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_TEST()": "fa7626d4",
                "counter()": "61bc221a",
                "excludeArtifacts()": "b5508aa9",
                "excludeContracts()": "e20c9f71",
                "excludeSelectors()": "b0464fdc",
                "excludeSenders()": "1ed7831c",
                "failed()": "ba414fa6",
                "setUp()": "0a9254e4",
                "targetArtifactSelectors()": "66d9a9a0",
                "targetArtifacts()": "85226c81",
                "targetContracts()": "3f7286f4",
                "targetInterfaces()": "2ade3880",
                "targetSelectors()": "916a17c6",
                "targetSenders()": "3e5e3c23",
                "testFuzz_SetNumber(uint256)": "5c7f60d7",
                "test_Increment()": "4820a105"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/test/ScoreChecker.t.sol": {
      "ScoreCheckerTest": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_TEST",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "failed",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "setUp",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "targetArtifactSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "components": [
                      {
                        "name": "artifact",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetInterfaces",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedInterfaces_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "artifacts",
                        "type": "string[]",
                        "internalType": "string[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "test_CheckScore_ExactFee",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_Cooldown",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_Pause",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_Revert_InvalidFee",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_Setters",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "event",
                "name": "log",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_address",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes32",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_int",
                "inputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_address",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes32",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_string",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_string",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_uint",
                "inputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "logs",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_CheckScore_ExactFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Cooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Revert_InvalidFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Setters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ScoreChecker.t.sol\":\"ScoreCheckerTest\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/ScoreCheckerUpgradeable.sol\":{\"keccak256\":\"0x6db7e78f2c76e4d86224e448c7e34233fd17fd09745aa75e4bda03a88d00b9f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c980f0e01cc87a10f3442d45444f4883053e95acf114fcedf2bd006d957f70a5\",\"dweb:/ipfs/QmUQcqB6Uw3tkSQMAXv53nGigMQAfCRHQGnQnvoQpEDDyP\"]},\"test/ScoreChecker.t.sol\":{\"keccak256\":\"0xa75668f73c4b860a8d8b294dd8a13c23b9e5d65745b311185341f02eb5af9f8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9354b5ac98f19ff66af427c535c9ad9d66db329f834687c0dfa469f437f66b93\",\"dweb:/ipfs/QmNgZsiHJxobHsc57eEic6cxUUtFHxkdhPbrawGGX39k9r\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 257,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "_failed",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2758,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "stdChainsInitialized",
                  "offset": 1,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2779,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "chains",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)"
                },
                {
                  "astId": 2783,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "defaultRpcUrls",
                  "offset": 0,
                  "slot": "10",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
                },
                {
                  "astId": 2787,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "idToAlias",
                  "offset": 0,
                  "slot": "11",
                  "type": "t_mapping(t_uint256,t_string_storage)"
                },
                {
                  "astId": 2790,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "fallbackToDefaultRpcUrls",
                  "offset": 0,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 3593,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "gasMeteringOff",
                  "offset": 1,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 5630,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "13",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 6504,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "_excludedContracts",
                  "offset": 0,
                  "slot": "21",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6507,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "_excludedSenders",
                  "offset": 0,
                  "slot": "22",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6510,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "_targetedContracts",
                  "offset": 0,
                  "slot": "23",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6513,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "_targetedSenders",
                  "offset": 0,
                  "slot": "24",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6516,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "_excludedArtifacts",
                  "offset": 0,
                  "slot": "25",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6519,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "_targetedArtifacts",
                  "offset": 0,
                  "slot": "26",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6523,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "_targetedArtifactSelectors",
                  "offset": 0,
                  "slot": "27",
                  "type": "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage"
                },
                {
                  "astId": 6527,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "_excludedSelectors",
                  "offset": 0,
                  "slot": "28",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6531,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "_targetedSelectors",
                  "offset": 0,
                  "slot": "29",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6535,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "_targetedInterfaces",
                  "offset": 0,
                  "slot": "30",
                  "type": "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage"
                },
                {
                  "astId": 12145,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "IS_TEST",
                  "offset": 0,
                  "slot": "31",
                  "type": "t_bool"
                },
                {
                  "astId": 45894,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "sc",
                  "offset": 1,
                  "slot": "31",
                  "type": "t_contract(ScoreCheckerUpgradeable)44374"
                },
                {
                  "astId": 45900,
                  "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                  "label": "user",
                  "offset": 0,
                  "slot": "32",
                  "type": "t_address"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_address)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "address[]",
                  "numberOfBytes": "32",
                  "base": "t_address"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_array(t_bytes4)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes4[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes4"
                },
                "t_array(t_string_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "string[]",
                  "numberOfBytes": "32",
                  "base": "t_string_storage"
                },
                "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzArtifactSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzArtifactSelector)6495_storage"
                },
                "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzInterface[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzInterface)6501_storage"
                },
                "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzSelector)6489_storage"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_contract(ScoreCheckerUpgradeable)44374": {
                  "encoding": "inplace",
                  "label": "contract ScoreCheckerUpgradeable",
                  "numberOfBytes": "20"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_mapping(t_string_memory_ptr,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => struct StdChains.Chain)",
                  "numberOfBytes": "32",
                  "value": "t_struct(Chain)2774_storage"
                },
                "t_mapping(t_uint256,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_string_memory_ptr": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(Chain)2774_storage": {
                  "encoding": "inplace",
                  "label": "struct StdChains.Chain",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 2767,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "name",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2769,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "chainId",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 2771,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "chainAlias",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2773,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "rpcUrl",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_string_storage"
                    }
                  ]
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(FuzzArtifactSelector)6495_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzArtifactSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6491,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "artifact",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 6494,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzInterface)6501_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzInterface",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6497,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6500,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "artifacts",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_string_storage)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzSelector)6489_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6485,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6488,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "test/ScoreChecker.t.sol:ScoreCheckerTest",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "261:5541:55:-:0;;;;;;;3166:4:3;261:5541:55;;;;3166:4:3;261:5541:55;;;3166:4:3;261:5541:55;1038:4:13;261:5541:55;;;1038:4:13;261:5541:55;356:6;261:5541;;;;;;348:15;261:5541;;;348:15;261:5541;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "261:5541:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:26:13;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;1038:2;261:5541;;;-1:-1:-1;;;;;261:5541:55;;;;;1038:20;;;;;261:5541;;;;;;1590:14:0;;;;;;;1038:20:55;;1053:4;261:5541;1038:20;;261:5541;1038:20;;;;;;;;;;;261:5541;;;;1038:2;261:5541;;;;1068:23;;;;;261:5541;;;;;;1590:14:0;;;;;;;1068:23:55;;1086:4;261:5541;1068:23;;261:5541;1068:23;;;;;;;;;;;261:5541;;;;1038:2;261:5541;;;;1101:39;;;;;261:5541;;;;;;1590:14:0;;;;;;;1101:39:55;;1132:6;261:5541;1101:39;;261:5541;1101:39;;;;;;;;;;;261:5541;;;1038:2;261:5541;;;;1150:20;;;;;261:5541;;;;;;1590:14:0;;;;;;;1150:20:55;;1166:3;261:5541;1150:20;;261:5541;1150:20;;;;;;;;261:5541;;1150:20;;;;:::i;:::-;261:5541;;1150:20;261:5541;1150:20;261:5541;;;;;;;;;1150:20;261:5541;;1101:39;;;;:::i;:::-;261:5541;;1101:39;;;;;261:5541;;;;;;;;;1101:39;261:5541;;;1068:23;;;;:::i;:::-;261:5541;;1068:23;;;;1038:20;;;;:::i;:::-;261:5541;;1038:20;;;;261:5541;;;;;;;;;;;;;;;2723:18:6;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;1590:14:0;;-1:-1:-1;;;;;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5505:2;261:5541;-1:-1:-1;;;;;261:5541:55;;;;;;;5505:10;;;;;261:5541;;;;;;1590:14:0;;;;;;;5505:10:55;;;;;;;;;;261:5541;5534:4;;;1590:14:0;;;;;261:5541:55;-1:-1:-1;;;;;;;;;;;5525:14:55;;;;;;261:5541;;1590:14:0;;;;5525::55;;261:5541;5525:14;;261:5541;5525:14;;261:5541;5525:14;;;;;;;;;;;;;;261:5541;-1:-1:-1;;261:5541:55;;-1:-1:-1;;;5565:42:55;;;;261:5541;5565:42;;261:5541;5565:42;261:5541;5565:42;:::i;:::-;5549:59;;;;;261:5541;;;;;;;;1590:14:0;;;;;;;;;5549:59:55;;;261:5541;5549:59;;261:5541;;;;;;:::i;:::-;5549:59;;;;;;;;;;261:5541;;;;;;;;;;;;-1:-1:-1;;;;;261:5541:55;;;;;;;;;5733:4;261:5541;;;;;;;5505:2;261:5541;;;;;;;1590:14:0;;;;;;;;;5711:60:55;;5739:1;261:5541;5711:60;;261:5541;5742:15;261:5541;;;;;;;;;;;;;;;;;;;:::i;:::-;5711:60;;;;;;;;;;261:5541;;;5505:2;261:5541;;;;5781:12;;;;;261:5541;;;;;;1590:14:0;;;;;;;5781:12:55;;;;;;;;;;261:5541;;5711:60;;;;;;;;;;;;;;;;:::i;:::-;;;261:5541;;;;5711:60;;;;;;261:5541;;;;5711:60;;;;;;261:5541;;;;;;;;;;;;;;;;;;;;;5549:59;;;;:::i;:::-;261:5541;;5549:59;;;;261:5541;;;;5525:14;;;;:::i;:::-;261:5541;;5525:14;;;;261:5541;;;;5505:10;;;;:::i;:::-;261:5541;;5505:10;;;;261:5541;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3708:11:55;;3674:7;261:5541;3708:11;;261:5541;;;3708:11;261:5541;;;-1:-1:-1;;;;;;;;;;;3708:11:55;;;;;;;;;;;261:5541;-1:-1:-1;3729:2:55;261:5541;;;-1:-1:-1;;;;;261:5541:55;;3729:30;;;;;261:5541;;-1:-1:-1;;;3729:30:55;;-1:-1:-1;;;;;261:5541:55;;;;3729:30;;261:5541;;;;;;;;;;;;3729:30;;;;;;;;261:5541;-1:-1:-1;3708:11:55;1590:14:0;-1:-1:-1;;;;;261:5541:55;-1:-1:-1;;;;;;;;;;;3769:19:55;;;;261:5541;;1590:14:0;;;;3769:19:55;;261:5541;3769:19;;261:5541;3769:19;;261:5541;3769:19;;-1:-1:-1;;;;;;;;;;;3769:19:55;;;;;;;;261:5541;;;484:33;261:5541;;;;3708:11;1590:14:0;261:5541:55;;;3708:11;4011:61;;261:5541;3868:77;261:5541;;;;;;4046:2;261:5541;;;;-1:-1:-1;;;;;3823:15:55;261:5541;;;;;;;;;;;4011:61;;;;;:::i;:::-;261:5541;4001:72;;-1:-1:-1;;;3708:11:55;261:5541;;;;;:::i;:::-;;;;;;-1:-1:-1;;;3708:11:55;261:5541;;;;;:::i;:::-;;;;;;484:33;261:5541;;;;3729:2;261:5541;;;;;;3708:11;4113:264;;4329:13;4113:264;4329:13;4113:264;4329:13;;4113:264;;:::i;:::-;;2845:56;;4113:264;;;;;;:::i;:::-;261:5541;4103:275;;261:5541;;;4416:52;;;3708:11;4416:52;;;;;261:5541;;;;;;;;;;;;;;;;;;;;4416:52;261:5541;4406:63;;261:5541;;1590:14:0;;;;4516:20:55;;3674:7;261:5541;4516:20;;261:5541;;;;;;4516:20;261:5541;4516:20;-1:-1:-1;;;;;;;;;;;4516:20:55;;;;;;4568:4;4516:20;3708:11;4516:20;261:5541;4516:20;;;;;;;;261:5541;4591:28;261:5541;;;4591:28;261:5541;;;4591:28;;;;;;261:5541;;;;;;;;;;;;;;;;;;;;;;;;4591:28;261:5541;;1590:14:0;;;;;;;;;4546:74:55;;4046:2;261:5541;4546:74;;261:5541;-1:-1:-1;;;;;3823:15:55;261:5541;;;;;;;;;;;;;;;;;;;;:::i;:::-;4546:74;;;;;;;;;;261:5541;3823:15;4756:2;3823:15;261:5541;3823:15;261:5541;;;-1:-1:-1;;;;;;;;;;;4730:29:55;;;;261:5541;;-1:-1:-1;;;4730:29:55;;3823:15;4756:2;261:5541;;4730:29;;261:5541;;;;;;;;-1:-1:-1;;;;;;;;;;;4730:29:55;;;;;;;;261:5541;4769:14;;-1:-1:-1;;;;;;;;;;;4769:14:55;;;;261:5541;;-1:-1:-1;;;4769:14:55;;261:5541;;;;;;;-1:-1:-1;;;;;;;;;;;4769:14:55;;;;;;;;261:5541;-1:-1:-1;;3729:2:55;261:5541;3708:11;1590:14:0;261:5541:55;;;-1:-1:-1;;;4835:23:55;;-1:-1:-1;;;;;261:5541:55;;;;4835:23;;261:5541;;;;;;;;;;;;;4835:23;;;;;;;;;;;;;261:5541;2099:24:2;-1:-1:-1;;;;;;;;;;;2099:24:2;;;;261:5541:55;;-1:-1:-1;;;2099:24:2;;261:5541:55;;;;2099:24:2;;261:5541:55;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2099:24:2;;;;;;;;261:5541:55;4904:26;;;;;:::i;:::-;4992:3;3823:15;261:5541;3823:15;261:5541;;;-1:-1:-1;;;;;;;;;;;4966:30:55;;;;261:5541;;-1:-1:-1;;;4966:30:55;;3823:15;4992:3;261:5541;;4966:30;;261:5541;;;;;;;;-1:-1:-1;;;;;;;;;;;4966:30:55;;;;;;;;261:5541;;;484:33;261:5541;;;;3708:11;1590:14:0;261:5541:55;;5224:52;;261:5541;;3708:11;5123:62;;261:5541;3868:77;261:5541;;;;;;;5158:2;261:5541;;;;-1:-1:-1;;;;;3823:15:55;261:5541;;;;;;;;;;;5123:62;;;;;:::i;:::-;261:5541;5113:73;;261:5541;;5224:52;;;3708:11;5224:52;;;;261:5541;;;;;;;;;;;;;;;;;;;;5224:52;261:5541;5214:63;;261:5541;;1590:14:0;;;;5324:20:55;;3674:7;261:5541;5324:20;;261:5541;;;;;;5324:20;261:5541;5324:20;-1:-1:-1;;;;;;;;;;;5324:20:55;;;;;;;;;;;;;;;;261:5541;5354:14;-1:-1:-1;;;;;;;;;;;5354:14:55;;;;261:5541;;1590:14:0;;;;5354::55;;261:5541;5354:14;;261:5541;5354:14;;261:5541;5354:14;;-1:-1:-1;;;;;;;;;;;5354:14:55;;;;;;;;261:5541;-1:-1:-1;;3729:2:55;261:5541;;;;3708:11;5424:28;;;261:5541;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;261:5541:55;;;;;4568:4;;3708:11;;261:5541;;;;-1:-1:-1;;;;;261:5541:55;;5424:28;261:5541;;;;5424:28;261:5541;5424:28;261:5541;;1590:14:0;;;;;;;;;5378:75:55;;5158:2;261:5541;5378:75;;261:5541;-1:-1:-1;;;;;3823:15:55;261:5541;;;;;;;;;;;;;;;;;;;;:::i;:::-;5378:75;;;;;;;;;;261:5541;;;5378:75;3708:11;5378:75;;;;;;;;;;;;:::i;:::-;;;261:5541;;;;;;5378:75;;;;;5354:14;;;;:::i;:::-;261:5541;;5354:14;;;;261:5541;;;;5324:20;;;;;;;;;261:5541;5324:20;261:5541;5324:20;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;4966:30;;;;:::i;:::-;261:5541;;4966:30;;;;261:5541;-1:-1:-1;;;261:5541:55;;;;;;;;2099:24:2;;;;:::i;:::-;261:5541:55;;2099:24:2;;;;4835:23:55;;;;;261:5541;4835:23;;261:5541;4835:23;;;;;;261:5541;4835:23;;;:::i;:::-;;;261:5541;;;;;;;;;;;;;;;3708:11;261:5541;;4835:23;;;;;;;-1:-1:-1;4835:23:55;;;261:5541;;;;;;;;;;;4769:14;;;;:::i;:::-;261:5541;;4769:14;;;;4730:29;;;;:::i;:::-;261:5541;;4730:29;;;;4546:74;3708:11;4546:74;;;;;;;;;;;;:::i;:::-;;;261:5541;;;;4546:74;;;;;;;;4516:20;;;;4591:28;4516:20;4591:28;4516:20;261:5541;4516:20;261:5541;4516:20;;;;;;;:::i;:::-;;;-1:-1:-1;4516:20:55;;-1:-1:-1;4516:20:55;;;3769:19;;;;:::i;:::-;261:5541;;3769:19;;;;3729:30;;;;:::i;:::-;261:5541;;3729:30;;;;3708:11;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;261:5541;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2575:18:6;261:5541:55;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;2575:18:6;261:5541:55;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2876:18:6;261:5541:55;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2876:18:6;261:5541:55;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;1590:14:0;;261:5541:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:14:0;;;1325:11:55;;1291:7;;1325:11;261:5541;1325:11;;261:5541;1325:11;261:5541;-1:-1:-1;;;;;;;;;;;1325:11:55;;;;;;;;;;;;;;;;;261:5541;-1:-1:-1;1346:2:55;261:5541;-1:-1:-1;;;;;261:5541:55;;;;;;;;;1346:30;;;;;261:5541;;;;;;;1590:14:0;;;;;;;;1346:30:55;;261:5541;;1346:30;;261:5541;1346:30;;;;;;;;;;;261:5541;1590:14:0;;;;;261:5541:55;1386:22;;;;;261:5541;;1590:14:0;;;;1386:22:55;;261:5541;1386:22;;261:5541;1400:7;1590:14:0;;;261:5541:55;1386:22;;1590:14:0;1386:22:55;;;;;;;;;;;;;;261:5541;1471:15;;-1:-1:-1;;;;;1471:15:55;261:5541;1590:14:0;;;261:5541:55;;;;1661:50;;;;;;;;;:::i;:::-;;2845:56;1661:50;2845:56;;1661:50;;;;;;;;:::i;:::-;261:5541;1651:61;;-1:-1:-1;;;261:5541:55;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;261:5541:55;;;;;;:::i;:::-;;;;;;2090:51;;261:5541;1346:2;261:5541;;;;;;1788:264;;;;;;2004:13;;1788:264;;:::i;:::-;;;;;;;;;:::i;:::-;261:5541;1778:275;;261:5541;;;2090:51;;;;;;;;261:5541;;;;;;;;;;;;;;;;;;;;2090:51;;;;;;;;;:::i;:::-;261:5541;2080:62;;261:5541;;1590:14:0;;;;2186:19:55;;261:5541;2186:19;;261:5541;;;;;2186:19;;1590:14:0;2186:19:55;;;;;;;;;;;;;;;;261:5541;-1:-1:-1;261:5541:55;;;2234:25;;;261:5541;;;;;;;;;;;;;;;-1:-1:-1;;;;;;261:5541:55;;;;;2234:25;;261:5541;;;;;2234:25;;;;;;;;;:::i;:::-;2270:14;;;;;261:5541;;1590:14:0;;;;2270::55;;261:5541;2270:14;;261:5541;2270:14;;;;;;;;;;;;;;;;;;261:5541;;;;;;;1346:2;261:5541;;;;;2316:4;261:5541;;1590:14:0;;;;;;;;;2294:56:55;;1434:2;261:5541;2294:56;;261:5541;;;;;;1590:14:0;261:5541:55;;;;;;;;;;;;;:::i;:::-;2294:56;;;;;;;;;;261:5541;;;;1346:2;261:5541;;;;1590:14:0;;;261:5541:55;;;;1590:14:0;;;;;;;2387:17:55;;261:5541;2387:17;;261:5541;2387:17;;;;;;;;;;;;;261:5541;2349:24:2;;;;;;;1590:14:0;261:5541:55;;1434:2;261:5541;;;1590:14:0;;;;;;;;2349:24:2;;261:5541:55;2349:24:2;;261:5541:55;;;;2349:24:2;;;;;;;;261:5541:55;2443:15;;;;:::i;:::-;261:5541;;2349:24:2;;;;:::i;:::-;261:5541:55;;2349:24:2;;;;2387:17:55;;;;;;261:5541;2387:17;;261:5541;2387:17;;;;;;261:5541;2387:17;;;:::i;:::-;;;261:5541;;;;;;;;;2387:17;;;;;;;;-1:-1:-1;2387:17:55;;2294:56;;;;;;;;;;;;;;;;:::i;:::-;;;261:5541;;;;2294:56;;;;;;;;;;;261:5541;;;;;;;;;2270:14;;;;;;;:::i;:::-;261:5541;;2270:14;;;;;;261:5541;;;;2270:14;261:5541;;;;;;;;;2270:14;261:5541;;;2186:19;2234:25;2186:19;;2234:25;2186:19;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;2186:19:55;;;;261:5541;;;;;;;;;1386:22;;;;:::i;:::-;261:5541;;1386:22;;;;261:5541;;;;1386:22;261:5541;;;;;;;;;1346:30;;;;:::i;:::-;261:5541;;1346:30;;;;1325:11;;;;;;;;;;;;;;;:::i;:::-;;;;;261:5541;;;;;;;;;;;;;3653:18:6;261:5541:55;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3653:18:6;261:5541:55;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;1590:14:0;;261:5541:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3162:18:6;261:5541:55;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;3162:18:6;261:5541:55;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2569:11:55;;2535:7;261:5541;2569:11;;261:5541;;;2569:11;;-1:-1:-1;;;;;;;;;;;261:5541:55;;2569:11;261:5541;;;;2569:11;;;;;;;;;;;261:5541;-1:-1:-1;2590:2:55;261:5541;-1:-1:-1;;;;;261:5541:55;;;;;;;;2590:30;;;;;261:5541;;;;;;;1590:14:0;;;;;;;;2590:30:55;;261:5541;;2590:30;;261:5541;2590:30;;;;;;;;261:5541;;;-1:-1:-1;;;;;2655:15:55;;;261:5541;1590:14:0;;;;;261:5541:55;;;2845:56;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;261:5541;2835:67;;-1:-1:-1;;;261:5541:55;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;261:5541:55;;;;;;:::i;:::-;;;;;;;2590:2;261:5541;;;;2942:264;;261:5541;;;2942:264;;;;;3158:13;;2942:264;;:::i;:::-;;;;;;;;;:::i;:::-;261:5541;2932:275;;261:5541;;-1:-1:-1;;;3244:51:55;;;261:5541;;;;;;;;;;;;;;;;;3244:51;;261:5541;;;;3244:51;261:5541;3244:51;261:5541;3234:62;;261:5541;;1590:14:0;;;;3340:19:55;;261:5541;3340:19;;261:5541;;;;;3340:19;;261:5541;3340:19;;;;;;;;;;;;;;;;;;261:5541;;3388:25;261:5541;;;3388:25;261:5541;;;3388:25;;;;;261:5541;;;;;;;;;;;;;;;;;;;;;;;;3388:25;;;;;;;;;:::i;:::-;3424:14;;;;;261:5541;;1590:14:0;;;;3424::55;;261:5541;3424:14;;261:5541;3424:14;;;;;;;;;;;;;;261:5541;;;;;3464:81;;;;;;;261:5541;3464:81;;;261:5541;3539:4;261:5541;;;;;3464:81;;261:5541;;;;;;;;;;;;;;;;;;;3448:98;;;;;1590:14:0;;;;;;;;;3448:98:55;;;;;;261:5541;3448:98;;261:5541;;;;;;;:::i;:::-;3448:98;;;;;;;;;;;;;;261:5541;;;;;;;2590:2;261:5541;;;;;;;1590:14:0;;;;;;;;;;3556:50:55;;2880:2;261:5541;3556:50;;261:5541;;;;;;;;;;;;;;3448:98;261:5541;;;;:::i;:::-;3556:50;;;;;;;;;;261:5541;;;3556:50;;;;;;;;;;;;:::i;:::-;;;261:5541;;;;3556:50;;261:5541;;;3556:50;;;;;3448:98;;;;;;;:::i;:::-;261:5541;;3448:98;;;;;;261:5541;;;;;;;;;;;;3424:14;;;;:::i;:::-;261:5541;;3424:14;;;;261:5541;;;;3340:19;3388:25;3340:19;;3388:25;3340:19;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;2590:30;;;;:::i;:::-;261:5541;;2590:30;;;;2569:11;;;;;;;;;;;;;;;:::i;:::-;;;;;261:5541;;;;;;;;;;;;;3346:26:6;261:5541:55;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3346:26:6;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3501:18:6;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:14:0;;-1:-1:-1;;;;;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3794:16:6;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:14:0;;-1:-1:-1;;;;;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3948:19:6;261:5541:55;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;3948:19:6;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;484:33;261:5541;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:14:0;;-1:-1:-1;;;;;261:5541:55;;;484:33;261:5541;;;;;;;484:33;261:5541;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3018:16:6;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:14:0;;-1:-1:-1;;;;;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;261:5541:55;;;;484:33;;;;;;-1:-1:-1;;;;;484:33:55;;;;;;;;;;;;;261:5541;512:4;;261:5541;;;;484:33;;;261:5541;484:33;;;;;261:5541;;587:43;;;;261:5541;551:170;;;;;;261:5541;679:4;261:5541;;;;679:4;261:5541;;;;;551:170;;261:5541;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;261:5541:55;752:41;;;;;261:5541;752:41;;;;;;;;;;;;;;;;261:5541;;;;;;;;;;752:41;;261:5541;;;;:::i;:::-;752:41;;;261:5541;752:41;;;;;803:53;261:5541;;-1:-1:-1;;;;;;261:5541:55;;;;;;-1:-1:-1;;;;;261:5541:55;;;;;;;-1:-1:-1;;;;;;;;;;;261:5541:55;930:22;;;;;261:5541;;-1:-1:-1;;;930:22:55;;938:13;261:5541;930:22;;261:5541;-1:-1:-1;261:5541:55;551:170;261:5541;-1:-1:-1;930:22:55;;;;;;;;;261:5541;1590:14:0;;;;261:5541:55;1590:14:0;261:5541:55;962:22;;;;;261:5541;;;;;;;1590:14:0;;;;;;;;962:22:55;;261:5541;962:22;;261:5541;976:7;551:170;1590:14:0;;261:5541:55;962:22;;;;;;;;261:5541;;930:22;;;;;;:::i;:::-;261:5541;930:22;;;;;261:5541;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2845:56;;261:5541;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;261:5541:55;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;261:5541:55;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;261:5541:55;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;261:5541:55;;;;;;;:::o;:::-;;;2845:56;;261:5541;;;;;;;;-1:-1:-1;;;;;261:5541:55;;;;;;;:::o;:::-;-1:-1:-1;;;;;261:5541:55;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;261:5541:55;;;;;;;;-1:-1:-1;;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;261:5541:55;;;;;-1:-1:-1;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;261:5541:55;;-1:-1:-1;261:5541:55;;-1:-1:-1;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;261:5541:55;;;;;;;;;1590:14:0;;;-1:-1:-1;;;;;;1590:14:0;261:5541:55;;;;;;;;;;;;;1590:14:0;;;-1:-1:-1;;;;;;1590:14:0;261:5541:55;;;;;;;;;;;;;1590:14:0;;;-1:-1:-1;;;;;;1590:14:0;261:5541:55;;;;;;;;;;;;1590:14:0;;;;-1:-1:-1;;;;;;1590:14:0;261:5541:55;;;;;;;;;;;;1590:14:0;;;;-1:-1:-1;;;;;;1590:14:0;261:5541:55;;;;;;;;;;;;1590:14:0;;;;-1:-1:-1;;;;;;1590:14:0;261:5541:55;;;;;;;;;;;;;1590:14:0;;;-1:-1:-1;;;;;;261:5541:55;;;;;;;;;;;;;;;-1:-1:-1;;;;;;261:5541:55;1590:14:0;;;261:5541:55;;;;1590:14:0;;;;;;261:5541:55;;;;1590:14:0;;;;;;261:5541:55;;;;1590:14:0;;;;;;261:5541:55;;;;;;;;1590:14:0;;;;;261:5541:55;;;;1590:14:0;;;;;261:5541:55;;;;1590:14:0;;;;;261:5541:55;;;;1590:14:0;;261:5541:55;;;;;;;;;;;-1:-1:-1;261:5541:55;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;261:5541:55;;;;;;;:::o;:::-;2727:77;261:5541;;-1:-1:-1;;;;;261:5541:55;;;;;;;2880:2;261:5541;;;;-1:-1:-1;;;;;261:5541:55;;;;;;;;;;;;;;;;:::o;:::-;2966:95;261:5541;;3075:34;261:5541;;;;3123:21;261:5541;;;;;;;;;;;-1:-1:-1;;;;;261:5541:55;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1243:204:2:-;1302:7;261:5541:55;;;;;;;1325:14:2;:::o;1298:143::-;261:5541:55;;;1590:14:0;;;1377:39:2;;;261:5541:55;192:59:2;261:5541:55;-1:-1:-1;;;;;;;;;;;1377:39:2;;;;261:5541:55;192:59:2;;;;;;261:5541:55;1377:39:2;;;;;;;-1:-1:-1;1377:39:2;;;1298:143;1377:53;;;1370:60;:::o;1377:39::-;;;;;;;;;;;;;;;;;:::i;:::-;;;192:59;;;;261:5541:55;1377:39:2;;;;;;-1:-1:-1;1377:39:2;;13112:110;-1:-1:-1;;;;;;;;;;;13191:24:2;;;;;;261:5541:55;;;;;1590:14:0;;;;;;;13191:24:2;;;;;261:5541:55;;;;;;13191:24:2;;;;;;;;13112:110;:::o;13191:24::-;;;;:::i",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_TEST()": "fa7626d4",
                "excludeArtifacts()": "b5508aa9",
                "excludeContracts()": "e20c9f71",
                "excludeSelectors()": "b0464fdc",
                "excludeSenders()": "1ed7831c",
                "failed()": "ba414fa6",
                "setUp()": "0a9254e4",
                "targetArtifactSelectors()": "66d9a9a0",
                "targetArtifacts()": "85226c81",
                "targetContracts()": "3f7286f4",
                "targetInterfaces()": "2ade3880",
                "targetSelectors()": "916a17c6",
                "targetSenders()": "3e5e3c23",
                "test_CheckScore_ExactFee()": "96d5b023",
                "test_Cooldown()": "d190864f",
                "test_Pause()": "e1a7e93f",
                "test_Revert_InvalidFee()": "7d6f0145",
                "test_Setters()": "eb3500d4"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/test/ScoreCheckerEIP712.t.sol": {
      "ScoreCheckerEIP712Test": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "IS_TEST",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "failed",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "setUp",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "targetArtifactSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "components": [
                      {
                        "name": "artifact",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetInterfaces",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedInterfaces_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "artifacts",
                        "type": "string[]",
                        "internalType": "string[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "test_submitScore_revertInvalidNonce",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_submitScore_revertInvalidSigner",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_submitScore_withSignature",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "event",
                "name": "log",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_address",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes32",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_int",
                "inputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_address",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes32",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_string",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_string",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_uint",
                "inputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "logs",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_submitScore_revertInvalidNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_submitScore_revertInvalidSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_submitScore_withSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ScoreCheckerEIP712.t.sol\":\"ScoreCheckerEIP712Test\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/ScoreCheckerUpgradeable.sol\":{\"keccak256\":\"0x6db7e78f2c76e4d86224e448c7e34233fd17fd09745aa75e4bda03a88d00b9f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c980f0e01cc87a10f3442d45444f4883053e95acf114fcedf2bd006d957f70a5\",\"dweb:/ipfs/QmUQcqB6Uw3tkSQMAXv53nGigMQAfCRHQGnQnvoQpEDDyP\"]},\"test/ScoreCheckerEIP712.t.sol\":{\"keccak256\":\"0xebae0e960279ec85edcca52b6bd09cfd19c7504b6d5aaf489d6a010a9b1f5851\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff49a7404ac3f300d8d4467bc6175e9820d48b9b6c7f5fed9bc1947f12d06948\",\"dweb:/ipfs/QmeUHjrxjUhU1EyhqcsxEiTdLN956pMY7rPdhMuWu2jLfC\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 257,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "_failed",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2758,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "stdChainsInitialized",
                  "offset": 1,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2779,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "chains",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)"
                },
                {
                  "astId": 2783,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "defaultRpcUrls",
                  "offset": 0,
                  "slot": "10",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
                },
                {
                  "astId": 2787,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "idToAlias",
                  "offset": 0,
                  "slot": "11",
                  "type": "t_mapping(t_uint256,t_string_storage)"
                },
                {
                  "astId": 2790,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "fallbackToDefaultRpcUrls",
                  "offset": 0,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 3593,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "gasMeteringOff",
                  "offset": 1,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 5630,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "13",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 6504,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "_excludedContracts",
                  "offset": 0,
                  "slot": "21",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6507,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "_excludedSenders",
                  "offset": 0,
                  "slot": "22",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6510,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "_targetedContracts",
                  "offset": 0,
                  "slot": "23",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6513,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "_targetedSenders",
                  "offset": 0,
                  "slot": "24",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6516,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "_excludedArtifacts",
                  "offset": 0,
                  "slot": "25",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6519,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "_targetedArtifacts",
                  "offset": 0,
                  "slot": "26",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6523,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "_targetedArtifactSelectors",
                  "offset": 0,
                  "slot": "27",
                  "type": "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage"
                },
                {
                  "astId": 6527,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "_excludedSelectors",
                  "offset": 0,
                  "slot": "28",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6531,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "_targetedSelectors",
                  "offset": 0,
                  "slot": "29",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6535,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "_targetedInterfaces",
                  "offset": 0,
                  "slot": "30",
                  "type": "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage"
                },
                {
                  "astId": 12145,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "IS_TEST",
                  "offset": 0,
                  "slot": "31",
                  "type": "t_bool"
                },
                {
                  "astId": 46614,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "sc",
                  "offset": 1,
                  "slot": "31",
                  "type": "t_contract(ScoreCheckerUpgradeable)44374"
                },
                {
                  "astId": 46620,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "user",
                  "offset": 0,
                  "slot": "32",
                  "type": "t_address"
                },
                {
                  "astId": 46622,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "signerPK",
                  "offset": 0,
                  "slot": "33",
                  "type": "t_uint256"
                },
                {
                  "astId": 46624,
                  "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                  "label": "signer",
                  "offset": 0,
                  "slot": "34",
                  "type": "t_address"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_address)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "address[]",
                  "numberOfBytes": "32",
                  "base": "t_address"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_array(t_bytes4)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes4[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes4"
                },
                "t_array(t_string_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "string[]",
                  "numberOfBytes": "32",
                  "base": "t_string_storage"
                },
                "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzArtifactSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzArtifactSelector)6495_storage"
                },
                "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzInterface[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzInterface)6501_storage"
                },
                "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzSelector)6489_storage"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_contract(ScoreCheckerUpgradeable)44374": {
                  "encoding": "inplace",
                  "label": "contract ScoreCheckerUpgradeable",
                  "numberOfBytes": "20"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_mapping(t_string_memory_ptr,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => struct StdChains.Chain)",
                  "numberOfBytes": "32",
                  "value": "t_struct(Chain)2774_storage"
                },
                "t_mapping(t_uint256,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_string_memory_ptr": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(Chain)2774_storage": {
                  "encoding": "inplace",
                  "label": "struct StdChains.Chain",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 2767,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "name",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2769,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "chainId",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 2771,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "chainAlias",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2773,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "rpcUrl",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_string_storage"
                    }
                  ]
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(FuzzArtifactSelector)6495_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzArtifactSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6491,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "artifact",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 6494,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzInterface)6501_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzInterface",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6497,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6500,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "artifacts",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_string_storage)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzSelector)6489_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6485,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6488,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "test/ScoreCheckerEIP712.t.sol:ScoreCheckerEIP712Test",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "261:4069:56:-:0;;;;;;;3166:4:3;261:4069:56;;;;3166:4:3;261:4069:56;;;3166:4:3;261:4069:56;1038:4:13;261:4069:56;;;1038:4:13;261:4069:56;362:6;261:4069;;;;;;354:15;261:4069;;;354:15;261:4069;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "261:4069:56:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:26:13;261:4069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2309:15;261:4069;;1005:33;261:4069;;;;2455:4;;1590:14:0;;;;261:4069:56;;2557:19;261:4069;;2403:126;;;261:4069;799:91;261:4069;;799:91;;;;261:4069;2272:2;799:91;;;261:4069;799:91;;;;;261:4069;799:91;;;261:4069;799:91;2403:126;;;;;:::i;:::-;261:4069;2393:137;;2557:19;:::i;:::-;1590:14:0;2628:8:56;1590:14:0;261:4069:56;;;1590:14:0;;;;2620:25:56;;;;;261:4069;799:91;;;;;261:4069;;;2620:25;799:91;2620:25;799:91;2620:25;;;;;;;;;;;;;;;;;;261:4069;-1:-1:-1;261:4069:56;;2674:25;;;261:4069;;;799:91;;;261:4069;799:91;;-1:-1:-1;;;;;;799:91:56;;;;;261:4069;2674:25;;261:4069;;799:91;;2674:25;;3845:126;;2674:25;;;;;;:::i;:::-;2710:14;;;;;261:4069;;1590:14:0;;;;2710::56;;;;;261:4069;2710:14;;;;;;;;;;;;;;;;;;;261:4069;1590:14:0;;2734:2:56;1590:14:0;2272:2:56;2756:4;261:4069;;799:91;261:4069;;1590:14:0;;;;;;;;;;2734:56:56;;;;261:4069;799:91;;;;261:4069;799:91;;;261:4069;799:91;;;;;;;;;;:::i;:::-;2734:56;1590:14:0;;;261:4069:56;2734:56;;;;;;;;;;;261:4069;1590:14:0;;;2734:2:56;1590:14:0;;;261:4069:56;1590:14:0;;;261:4069:56;;;;1590:14:0;;;;2828:17:56;;;;;;261:4069;2828:17;;;;;;;;;;;;;;;;;261:4069;2349:24:2;;;;;;261:4069:56;;1590:14:0;;;2349:24:2;;;;;;;261:4069:56;2272:2;261:4069;;;;;2349:24:2;799:91:56;2349:24:2;;;;;;;;;;;;;;261:4069:56;13191:24:2;;;;;;261:4069:56;;1590:14:0;;;;13191:24:2;;;;;261:4069:56;;;;;;13191:24:2;;799:91:56;13191:24:2;;;;;;;;;;;;;;;261:4069:56;;;;;;1590:14:0;;;;;;;2918:15:56;;;;;261:4069;2918:15;;;;;;;;;;;261:4069;2349:24:2;;;;;;;261:4069:56;;2935:1;799:91;261:4069;;;2349:24:2;;;;;;;;;261:4069:56;;;;2349:24:2;;;;;;;;;;261:4069:56;;;2349:24:2;;;;:::i;:::-;261:4069:56;;2349:24:2;261:4069:56;;;;;;;;2349:24:2;261:4069:56;;;2918:15;;;;;;;;;;;;;;;;;:::i;:::-;;;799:91;;;;;2918:15;;;;;;;;;;;261:4069;;;;;;;;;13191:24:2;;;;;;;:::i;:::-;261:4069:56;;13191:24:2;;;;;;261:4069:56;;;;13191:24:2;261:4069:56;;;;;;;;;2349:24:2;;;;:::i;:::-;;;;;261:4069:56;;;;;;;;;2828:17;;;;;;;;;;;;;;;;;;:::i;:::-;;;261:4069;;;;799:91;;;261:4069;;799:91;2828:17;;;;;;;;;261:4069;;;;;;;;;2734:56;;;;;;;;;;;;:::i;:::-;;;799:91;;;;2734:56;;;;;;;;;2710:14;;;;;;;:::i;:::-;261:4069;;2710:14;;;;;;2620:25;2674;2620;;2674;2620;;;;;;799:91;2620:25;799:91;2620:25;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;261:4069;;;;;;;;;;;;;;;;;;;;;;;2723:18:6;261:4069:56;;;;;;;;;2723:18:6;261:4069:56;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;1590:14:0;;-1:-1:-1;;;;;261:4069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3068:15;261:4069;;1005:33;261:4069;;;;3205:4;;1590:14:0;;;;261:4069:56;;3307:19;261:4069;;3153:126;;;261:4069;799:91;261:4069;;799:91;;;;261:4069;3031:2;799:91;;;261:4069;799:91;;;;;261:4069;799:91;;;261:4069;799:91;3153:126;;;;;:::i;3307:19::-;261:4069;;;1590:14:0;;;;3370:23:56;;3378:6;3370:23;;;261:4069;;;;;;;3370:23;799:91;3370:23;261:4069;3370:23;;;;;;;;;;;;;;;;261:4069;-1:-1:-1;261:4069:56;;3422:25;;;261:4069;;;799:91;;;261:4069;;;;799:91;;-1:-1:-1;;;;;;799:91:56;;;;;3422:25;;261:4069;;799:91;;3422:25;;3845:126;;3422:25;;;;;;:::i;:::-;3458:14;;;;;261:4069;;1590:14:0;;;;3458::56;;;;;261:4069;3458:14;;261:4069;3458:14;;;;;;;;;;;261:4069;-1:-1:-1;261:4069:56;;-1:-1:-1;;;3498:42:56;;;;;;;261:4069;3498:42;261:4069;3498:42;:::i;:::-;3482:59;;;;;799:91;261:4069;;;;;;;1590:14:0;;;;;;;;;3482:59:56;;;;;799:91;261:4069;799:91;;;;:::i;:::-;3482:59;;;;;;;;;;;;;;;;;261:4069;1590:14:0;;3573:4:56;3031:2;1590:14:0;3551:2:56;1590:14:0;;;261:4069:56;;799:91;261:4069;;1590:14:0;;;;;;;;;;3551:56:56;;;;261:4069;;799:91;;;261:4069;;799:91;;261:4069;799:91;;;;;;;;;;:::i;:::-;3551:56;;;;;;;;;;;;261:4069;;;3551:56;;;;;;;;;;;;:::i;:::-;;;799:91;;;;3551:56;;261:4069;;;3551:56;;;;;;261:4069;;;;;;;;3482:59;;;;;;;:::i;:::-;261:4069;;3482:59;;;;;;261:4069;;;;3482:59;261:4069;;;;;;;;;;;3458:14;;;;:::i;:::-;261:4069;;3458:14;;;;261:4069;;;;3458:14;261:4069;;;;;;;;;3370:23;3422:25;3370:23;;3422:25;3370:23;;;;;799:91;3370:23;799:91;3370:23;;;;;;;:::i;:::-;;;;-1:-1:-1;3370:23:56;;261:4069;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3737:15;261:4069;;1005:33;261:4069;;;;3897:4;;1590:14:0;;;;261:4069:56;;3999:19;261:4069;;3845:126;;;261:4069;799:91;261:4069;;799:91;;;;261:4069;3700:2;799:91;;;261:4069;799:91;;;;;3779:1;799:91;;;261:4069;799:91;3845:126;;;;;:::i;3999:19::-;1590:14:0;4070:8:56;1590:14:0;261:4069:56;;;1590:14:0;;;;4062:25:56;;;;;261:4069;799:91;;;261:4069;;;4062:25;799:91;4062:25;799:91;4062:25;;;;;;;;;;;;;;;;261:4069;-1:-1:-1;261:4069:56;;4116:25;;;261:4069;;;799:91;;;261:4069;;;;799:91;;-1:-1:-1;;;;;;799:91:56;;;;;4116:25;;261:4069;;799:91;;4116:25;799:91;4116:25;4152:14;;;;;261:4069;;1590:14:0;;;;4152::56;;;;;261:4069;4152:14;;799:91;4152:14;;;;;;;;;;;261:4069;-1:-1:-1;261:4069:56;;-1:-1:-1;;;4192:62:56;;;;3779:1;799:91;4192:62;;799:91;;;;;;;;4192:62;;261:4069;4192:62;261:4069;4192:62;:::i;:::-;4176:79;;;;;799:91;261:4069;;;;;;;1590:14:0;;;;;;;;;4176:79:56;;;;;799:91;;;;;;:::i;:::-;4176:79;;;;;;;;;;;;;;;;;261:4069;1590:14:0;;4287:4:56;3700:2;1590:14:0;4265:2:56;1590:14:0;;;261:4069:56;;799:91;261:4069;;1590:14:0;;;;;;;;;;4265:56:56;;;;261:4069;799:91;;;;3779:1;799:91;;;261:4069;799:91;;;;;;;;;;:::i;4176:79::-;;;;;;;:::i;:::-;261:4069;;4176:79;;;;;;4152:14;;;;:::i;:::-;261:4069;;4152:14;;;;4062:25;4116;4062;;4116;4062;;;;;799:91;4062:25;799:91;4062:25;;;;;;;:::i;:::-;;;;-1:-1:-1;4062:25:56;;261:4069;;;;;;;;;;;;;;;2575:18:6;261:4069:56;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2575:18:6;261:4069:56;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2876:18:6;261:4069:56;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2876:18:6;261:4069:56;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;1590:14:0;;261:4069:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3653:18:6;261:4069:56;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3653:18:6;261:4069:56;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;1590:14:0;;261:4069:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3162:18:6;261:4069:56;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3162:18:6;261:4069:56;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;3346:26:6;261:4069:56;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3346:26:6;261:4069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3501:18:6;261:4069:56;;;;;;;;;3501:18:6;261:4069:56;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:14:0;;-1:-1:-1;;;;;261:4069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3794:16:6;261:4069:56;;;;;;;;;3794:16:6;261:4069:56;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:14:0;;-1:-1:-1;;;;;261:4069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3948:19:6;261:4069:56;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;3948:19:6;261:4069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1005:33;261:4069;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:14:0;;-1:-1:-1;;;;;261:4069:56;;;1005:33;261:4069;;;;;;;1005:33;261:4069;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3018:16:6;261:4069:56;;;;;;;;;3018:16:6;261:4069:56;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:14:0;;-1:-1:-1;;;;;261:4069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;261:4069:56;;;;1005:33;;;;;;;;;;;;;;;;;;;;1033:4;;261:4069;;;;;1005:33;;;;;;261:4069;1005:33;;;;;;1070:7;261:4069;;1059:18;261:4069;;;1590:14:0;;;;1096:17:56;;;;;261:4069;1590:14:0;261:4069:56;;1096:17;;;;;;;;;;;;;261:4069;1096:17;;;261:4069;;1005:33;261:4069;;;;;;;1590:14:0;;;;1087:26:56;1590:14:0;;;1087:26:56;1590:14:0;261:4069:56;;1183:43;;;;1147:215;;;;;;;261:4069;1590:14:0;;;261:4069:56;1336:4;1590:14:0;;;261:4069:56;1590:14:0;1147:215:56;;261:4069;1590:14:0;;;;;;;;;;;;;;;1393:41:56;;;;;;261:4069;1393:41;;;;;;;;;;;;;;;;;;261:4069;;;1590:14:0;;;;;;261:4069:56;1393:41;;1590:14:0;;;;:::i;:::-;1393:41:56;;;261:4069;1393:41;;;;;1444:53;1590:14:0;;-1:-1:-1;;;;;;1590:14:0;;;;;;-1:-1:-1;;;;;1590:14:0;;;;;;;1555:22:56;;;;;261:4069;;-1:-1:-1;;;1555:22:56;;1563:13;1555:22;;;261:4069;;;1555:22;261:4069;;1555:22;;;;;;;;;261:4069;1590:14:0;;;;;1444:53:56;1590:14:0;;;261:4069:56;1623:20;;;;;261:4069;;;;;;1590:14:0;;;;;;;1623:20:56;;1639:3;1623:20;;;261:4069;1623:20;;;;;;;;;;;;;261:4069;1590:14:0;;;261:4069:56;1654:22;;;;;261:4069;;1590:14:0;261:4069:56;;;;1590:14:0;;;;;;;;1654:22:56;;;;;261:4069;1668:7;1590:14:0;;;261:4069:56;1654:22;;;;;;;;;;;261:4069;1590:14:0;;1444:53:56;1590:14:0;;;261:4069:56;1736:20;;;;;;261:4069;;;;;;;1590:14:0;;;;;;;;1736:20:56;;;;261:4069;1736:20;;;;;;;;;;261:4069;;1736:20;;;;:::i;:::-;261:4069;;1736:20;261:4069;1736:20;261:4069;;;;;;;;1736:20;261:4069;;;1654:22;;;;:::i;:::-;261:4069;;1654:22;;;;;261:4069;;;;;;;;;1623:20;;;;;;;:::i;:::-;261:4069;;1623:20;;;;;;1555:22;;;;;;:::i;:::-;261:4069;1555:22;;;;;261:4069;;;;;;;;;1393:41;261:4069;;;;;;;;;1393:41;261:4069;;;;;;;;;;;1590:14:0;261:4069:56;;;;;;;;;;;1096:17;;;;;;;;;;;;;;;;;:::i;:::-;;;1590:14:0;;;;;-1:-1:-1;;;;;261:4069:56;;1590:14:0;;;;1096:17:56;;;;;;;;;;261:4069;;;;;;;;;1005:33;261:4069;;;;;;;;;1005:33;261:4069;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;261:4069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3845:126;;261:4069;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;261:4069:56;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;;261:4069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;1590:14:0;;;;;;;;:::o;:::-;261:4069:56;;;1590:14:0;261:4069:56;;;;;1590:14:0;261:4069:56;1590:14:0;261:4069:56;1590:14:0;;;;;;;;;;;261:4069:56;1590:14:0;:::o;:::-;261:4069:56;1590:14:0;;;;;;;;;;;;;:::o;:::-;799:91:56;1590:14:0;;;;;;;;;;;;;:::o;:::-;;261:4069:56;3845:126;;261:4069;;;1590:14:0;;;;;;;;;;;;;:::o;261:4069:56:-;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;261:4069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;261:4069:56;;;;;;;;-1:-1:-1;;261:4069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;261:4069:56;;;;;;;;;;;;;;;1590:14:0;261:4069:56;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;261:4069:56;;;;;-1:-1:-1;261:4069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;261:4069:56;;-1:-1:-1;261:4069:56;;-1:-1:-1;261:4069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;261:4069:56;;;;;;;;;1590:14:0;;;-1:-1:-1;;;;;;1590:14:0;261:4069:56;;;;;;;;;;;;;1590:14:0;;;-1:-1:-1;;;;;;1590:14:0;261:4069:56;;;;;;;;;;;;;1590:14:0;;;-1:-1:-1;;;;;;1590:14:0;261:4069:56;;;;;;;;;;;;1590:14:0;;;;-1:-1:-1;;;;;;1590:14:0;261:4069:56;;;;;;;;;;;;1590:14:0;;;;-1:-1:-1;;;;;;1590:14:0;261:4069:56;;;;;;;;;;;;1590:14:0;;;;-1:-1:-1;;;;;;1590:14:0;261:4069:56;;;;;;;;;;;;;1590:14:0;;;-1:-1:-1;;;;;;261:4069:56;;;;;;;;;;;;;;;-1:-1:-1;;;;;;261:4069:56;1590:14:0;;;261:4069:56;;;;1590:14:0;;;;;;261:4069:56;;;;1590:14:0;;;;;;261:4069:56;;;;1590:14:0;;;;;;261:4069:56;;;;;;;;1590:14:0;;;;;261:4069:56;;;;1590:14:0;;;;;261:4069:56;;;;1590:14:0;;;;;261:4069:56;;;;1590:14:0;;261:4069:56;;;;;;;;;;;-1:-1:-1;261:4069:56;;;;;;;;;;;;;799:91;;;;;;;;;;;261:4069;;;799:91;;;;;;;;;;;;;;:::o;1243:204:2:-;1302:7;261:4069:56;;;;;;;1325:14:2;:::o;1298:143::-;261:4069:56;;;1590:14:0;;;1377:39:2;;;261:4069:56;192:59:2;261:4069:56;;1377:39:2;;;;261:4069:56;192:59:2;;;;;;261:4069:56;1377:39:2;;;;;;;-1:-1:-1;1377:39:2;;;1298:143;1377:53;;;1370:60;:::o;1377:39::-;;;;;;;;;;;;;;;;;:::i;:::-;;;192:59;;;;799:91:56;1377:39:2;;;;;;-1:-1:-1;1377:39:2;;;261:4069:56;;;-1:-1:-1;261:4069:56;;;;;2027:164;-1:-1:-1;;;536:95:56;;261:4069;;;;:::i;:::-;536:95;;;;;-1:-1:-1;;;536:95:56;;261:4069;;;;:::i;:::-;666:34;536:95;;666:34;;1005:33;261:4069;;;;2000:2;1590:14:0;;;261:4069:56;536:95;261:4069;1856:157;536:95;1856:157;;261:4069;536:95;261:4069;;666:34;536:95;738:21;;261:4069;738:21;;;;261:4069;1965:13;738:21;;;261:4069;738:21;;;261:4069;738:21;1856:157;;738:21;1590:14:0;;;;;;;;;;;;261:4069:56;1590:14:0;;536:95:56;1590:14:0;261:4069:56;;1846:168;;2123:60;;;;261:4069;;;;;;;;;;;;;2123:60;;;;;:::i;:::-;261:4069;2113:71;;2027:164;:::o",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "IS_TEST()": "fa7626d4",
                "excludeArtifacts()": "b5508aa9",
                "excludeContracts()": "e20c9f71",
                "excludeSelectors()": "b0464fdc",
                "excludeSenders()": "1ed7831c",
                "failed()": "ba414fa6",
                "setUp()": "0a9254e4",
                "targetArtifactSelectors()": "66d9a9a0",
                "targetArtifacts()": "85226c81",
                "targetContracts()": "3f7286f4",
                "targetInterfaces()": "2ade3880",
                "targetSelectors()": "916a17c6",
                "targetSenders()": "3e5e3c23",
                "test_submitScore_revertInvalidNonce()": "b849c453",
                "test_submitScore_revertInvalidSigner()": "cd58a1da",
                "test_submitScore_withSignature()": "f59d15d1"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    },
    "E:/BaseBadge/onchain/test/ScoreCheckerV2.t.sol": {
      "ScoreCheckerV2Test": [
        {
          "contract": {
            "abi": [
              {
                "type": "function",
                "name": "AVG_BALANCE_LAST_MONTH",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "BASE_SCORE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "CHECK_FEE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "CURRENT_BALANCE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "CURRENT_STREAK",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "DANGEROUS_INTERACTIONS",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "GAS_PAID",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "IS_TEST",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "MAX_FEE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "MAX_STREAK",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "NUM_TRANSACTIONS",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "SECURITY_SCORE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "SUSPICIOUS_CONTRACTS",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "SUSPICIOUS_OIL_COMPANIES",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "SUSPICIOUS_TOKENS",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "TOTAL_SCORE",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "authorizedSigner",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "authorizedSignerPK",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "excludeSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "excludedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "failed",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "issuedAt",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint64",
                    "internalType": "uint64"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "nonce",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "owner",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "scoreChecker",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "contract ScoreCheckerUpgradeableV2"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "setUp",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "targetArtifactSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "components": [
                      {
                        "name": "artifact",
                        "type": "string",
                        "internalType": "string"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetArtifacts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetContracts",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedContracts_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetInterfaces",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedInterfaces_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "artifacts",
                        "type": "string[]",
                        "internalType": "string[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSelectors",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                      {
                        "name": "addr",
                        "type": "address",
                        "internalType": "address"
                      },
                      {
                        "name": "selectors",
                        "type": "bytes4[]",
                        "internalType": "bytes4[]"
                      }
                    ]
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "targetSenders",
                "inputs": [],
                "outputs": [
                  {
                    "name": "targetedSenders_",
                    "type": "address[]",
                    "internalType": "address[]"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "test_AdminFunctions",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_Deployment",
                "inputs": [],
                "outputs": [],
                "stateMutability": "view"
              },
              {
                "type": "function",
                "name": "test_LegacySubmitScore",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_SubmitScoreCard",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_SubmitScoreCard_InvalidFee",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_SubmitScoreCard_InvalidSignature",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_SubmitScoreCard_ScoreTooHigh",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_SubmitScoreCard_UpdateExisting",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "test_WithdrawFees",
                "inputs": [],
                "outputs": [],
                "stateMutability": "nonpayable"
              },
              {
                "type": "function",
                "name": "user",
                "inputs": [],
                "outputs": [
                  {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                  }
                ],
                "stateMutability": "view"
              },
              {
                "type": "event",
                "name": "log",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_address",
                "inputs": [
                  {
                    "name": "",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_array",
                "inputs": [
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_bytes32",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_int",
                "inputs": [
                  {
                    "name": "",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_address",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": false,
                    "internalType": "int256[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_array",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_bytes32",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "bytes32",
                    "indexed": false,
                    "internalType": "bytes32"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_decimal_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  },
                  {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_int",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "int256",
                    "indexed": false,
                    "internalType": "int256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_string",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_named_uint",
                "inputs": [
                  {
                    "name": "key",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  },
                  {
                    "name": "val",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_string",
                "inputs": [
                  {
                    "name": "",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "log_uint",
                "inputs": [
                  {
                    "name": "",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                  }
                ],
                "anonymous": false
              },
              {
                "type": "event",
                "name": "logs",
                "inputs": [
                  {
                    "name": "",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                  }
                ],
                "anonymous": false
              }
            ],
            "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AVG_BALANCE_LAST_MONTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_SCORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CHECK_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CURRENT_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CURRENT_STREAK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DANGEROUS_INTERACTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAS_PAID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STREAK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NUM_TRANSACTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SECURITY_SCORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUSPICIOUS_CONTRACTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUSPICIOUS_OIL_COMPANIES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUSPICIOUS_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SCORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authorizedSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authorizedSignerPK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issuedAt\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scoreChecker\",\"outputs\":[{\"internalType\":\"contract ScoreCheckerUpgradeableV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_AdminFunctions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Deployment\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_LegacySubmitScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SubmitScoreCard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SubmitScoreCard_InvalidFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SubmitScoreCard_InvalidSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SubmitScoreCard_ScoreTooHigh\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SubmitScoreCard_UpdateExisting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_WithdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ScoreCheckerV2.t.sol\":\"ScoreCheckerV2Test\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x85462422a22578744581e012e9aa0a391958cb360288b0b63f29bf0431d70327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bc529e2b9b28da5d26da451058250d85afcaa3c5083ee273ac68fa6bf956b78\",\"dweb:/ipfs/Qmd3Aq59ztmoVmHigsaR4YjkXWKERVpjfQ4a2PHk7Ke6Rx\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/ScoreCheckerUpgradeableV2.sol\":{\"keccak256\":\"0xdcd4fdfa4c1604bfbc283449c89c84dda53bfbb2f2bb24111bd0314ad35cb60c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e49a54670032a74145006fe82ec775828e90f3965e2ef795fd83221185063a8\",\"dweb:/ipfs/QmTTRzZ6w1AyFTX5QJJwgAHFnKYrC3kBTTdb1E4Vfjr5Nq\"]},\"test/ScoreCheckerV2.t.sol\":{\"keccak256\":\"0xf3172581dfd628eff6232278208f27df47344cbea734667fbd04809ec9f774d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97f22af4902b481c755da6f9b9e1cf7a09691a804938614e64cad8d8c85358ca\",\"dweb:/ipfs/QmVArooe14xfa9fwR9H78CxbQRThWp5WEwrjU5pRJg9kAk\"]}},\"version\":1}",
            "userdoc": {},
            "devdoc": {},
            "storageLayout": {
              "storage": [
                {
                  "astId": 61,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 257,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "_failed",
                  "offset": 0,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2758,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "stdChainsInitialized",
                  "offset": 1,
                  "slot": "8",
                  "type": "t_bool"
                },
                {
                  "astId": 2779,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "chains",
                  "offset": 0,
                  "slot": "9",
                  "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)"
                },
                {
                  "astId": 2783,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "defaultRpcUrls",
                  "offset": 0,
                  "slot": "10",
                  "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
                },
                {
                  "astId": 2787,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "idToAlias",
                  "offset": 0,
                  "slot": "11",
                  "type": "t_mapping(t_uint256,t_string_storage)"
                },
                {
                  "astId": 2790,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "fallbackToDefaultRpcUrls",
                  "offset": 0,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 3593,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "gasMeteringOff",
                  "offset": 1,
                  "slot": "12",
                  "type": "t_bool"
                },
                {
                  "astId": 5630,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "stdstore",
                  "offset": 0,
                  "slot": "13",
                  "type": "t_struct(StdStorage)7546_storage"
                },
                {
                  "astId": 6504,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "_excludedContracts",
                  "offset": 0,
                  "slot": "21",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6507,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "_excludedSenders",
                  "offset": 0,
                  "slot": "22",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6510,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "_targetedContracts",
                  "offset": 0,
                  "slot": "23",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6513,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "_targetedSenders",
                  "offset": 0,
                  "slot": "24",
                  "type": "t_array(t_address)dyn_storage"
                },
                {
                  "astId": 6516,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "_excludedArtifacts",
                  "offset": 0,
                  "slot": "25",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6519,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "_targetedArtifacts",
                  "offset": 0,
                  "slot": "26",
                  "type": "t_array(t_string_storage)dyn_storage"
                },
                {
                  "astId": 6523,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "_targetedArtifactSelectors",
                  "offset": 0,
                  "slot": "27",
                  "type": "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage"
                },
                {
                  "astId": 6527,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "_excludedSelectors",
                  "offset": 0,
                  "slot": "28",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6531,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "_targetedSelectors",
                  "offset": 0,
                  "slot": "29",
                  "type": "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage"
                },
                {
                  "astId": 6535,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "_targetedInterfaces",
                  "offset": 0,
                  "slot": "30",
                  "type": "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage"
                },
                {
                  "astId": 12145,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "IS_TEST",
                  "offset": 0,
                  "slot": "31",
                  "type": "t_bool"
                },
                {
                  "astId": 47074,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "scoreChecker",
                  "offset": 1,
                  "slot": "31",
                  "type": "t_contract(ScoreCheckerUpgradeableV2)45780"
                },
                {
                  "astId": 47076,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "owner",
                  "offset": 0,
                  "slot": "32",
                  "type": "t_address"
                },
                {
                  "astId": 47078,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "authorizedSigner",
                  "offset": 0,
                  "slot": "33",
                  "type": "t_address"
                },
                {
                  "astId": 47080,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "user",
                  "offset": 0,
                  "slot": "34",
                  "type": "t_address"
                },
                {
                  "astId": 47082,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "authorizedSignerPK",
                  "offset": 0,
                  "slot": "35",
                  "type": "t_uint256"
                },
                {
                  "astId": 47129,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "issuedAt",
                  "offset": 0,
                  "slot": "36",
                  "type": "t_uint64"
                },
                {
                  "astId": 47131,
                  "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                  "label": "nonce",
                  "offset": 0,
                  "slot": "37",
                  "type": "t_uint256"
                }
              ],
              "types": {
                "t_address": {
                  "encoding": "inplace",
                  "label": "address",
                  "numberOfBytes": "20"
                },
                "t_array(t_address)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "address[]",
                  "numberOfBytes": "32",
                  "base": "t_address"
                },
                "t_array(t_bytes32)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes32[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes32"
                },
                "t_array(t_bytes4)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "bytes4[]",
                  "numberOfBytes": "32",
                  "base": "t_bytes4"
                },
                "t_array(t_string_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "string[]",
                  "numberOfBytes": "32",
                  "base": "t_string_storage"
                },
                "t_array(t_struct(FuzzArtifactSelector)6495_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzArtifactSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzArtifactSelector)6495_storage"
                },
                "t_array(t_struct(FuzzInterface)6501_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzInterface[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzInterface)6501_storage"
                },
                "t_array(t_struct(FuzzSelector)6489_storage)dyn_storage": {
                  "encoding": "dynamic_array",
                  "label": "struct StdInvariant.FuzzSelector[]",
                  "numberOfBytes": "32",
                  "base": "t_struct(FuzzSelector)6489_storage"
                },
                "t_bool": {
                  "encoding": "inplace",
                  "label": "bool",
                  "numberOfBytes": "1"
                },
                "t_bytes32": {
                  "encoding": "inplace",
                  "label": "bytes32",
                  "numberOfBytes": "32"
                },
                "t_bytes4": {
                  "encoding": "inplace",
                  "label": "bytes4",
                  "numberOfBytes": "4"
                },
                "t_bytes_storage": {
                  "encoding": "bytes",
                  "label": "bytes",
                  "numberOfBytes": "32"
                },
                "t_contract(ScoreCheckerUpgradeableV2)45780": {
                  "encoding": "inplace",
                  "label": "contract ScoreCheckerUpgradeableV2",
                  "numberOfBytes": "20"
                },
                "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))": {
                  "encoding": "mapping",
                  "key": "t_address",
                  "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))"
                },
                "t_mapping(t_bytes32,t_struct(FindData)7521_storage)": {
                  "encoding": "mapping",
                  "key": "t_bytes32",
                  "label": "mapping(bytes32 => struct FindData)",
                  "numberOfBytes": "32",
                  "value": "t_struct(FindData)7521_storage"
                },
                "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage))": {
                  "encoding": "mapping",
                  "key": "t_bytes4",
                  "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                  "numberOfBytes": "32",
                  "value": "t_mapping(t_bytes32,t_struct(FindData)7521_storage)"
                },
                "t_mapping(t_string_memory_ptr,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_mapping(t_string_memory_ptr,t_struct(Chain)2774_storage)": {
                  "encoding": "mapping",
                  "key": "t_string_memory_ptr",
                  "label": "mapping(string => struct StdChains.Chain)",
                  "numberOfBytes": "32",
                  "value": "t_struct(Chain)2774_storage"
                },
                "t_mapping(t_uint256,t_string_storage)": {
                  "encoding": "mapping",
                  "key": "t_uint256",
                  "label": "mapping(uint256 => string)",
                  "numberOfBytes": "32",
                  "value": "t_string_storage"
                },
                "t_string_memory_ptr": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_string_storage": {
                  "encoding": "bytes",
                  "label": "string",
                  "numberOfBytes": "32"
                },
                "t_struct(Chain)2774_storage": {
                  "encoding": "inplace",
                  "label": "struct StdChains.Chain",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 2767,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "name",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2769,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "chainId",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 2771,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "chainAlias",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 2773,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "rpcUrl",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_string_storage"
                    }
                  ]
                },
                "t_struct(FindData)7521_storage": {
                  "encoding": "inplace",
                  "label": "struct FindData",
                  "numberOfBytes": "128",
                  "members": [
                    {
                      "astId": 7514,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "slot",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7516,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "offsetLeft",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7518,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "offsetRight",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7520,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "found",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_bool"
                    }
                  ]
                },
                "t_struct(FuzzArtifactSelector)6495_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzArtifactSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6491,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "artifact",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_string_storage"
                    },
                    {
                      "astId": 6494,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzInterface)6501_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzInterface",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6497,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6500,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "artifacts",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_string_storage)dyn_storage"
                    }
                  ]
                },
                "t_struct(FuzzSelector)6489_storage": {
                  "encoding": "inplace",
                  "label": "struct StdInvariant.FuzzSelector",
                  "numberOfBytes": "64",
                  "members": [
                    {
                      "astId": 6485,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "addr",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_address"
                    },
                    {
                      "astId": 6488,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "selectors",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes4)dyn_storage"
                    }
                  ]
                },
                "t_struct(StdStorage)7546_storage": {
                  "encoding": "inplace",
                  "label": "struct StdStorage",
                  "numberOfBytes": "256",
                  "members": [
                    {
                      "astId": 7530,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "finds",
                      "offset": 0,
                      "slot": "0",
                      "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)7521_storage)))"
                    },
                    {
                      "astId": 7533,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "_keys",
                      "offset": 0,
                      "slot": "1",
                      "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                      "astId": 7535,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "_sig",
                      "offset": 0,
                      "slot": "2",
                      "type": "t_bytes4"
                    },
                    {
                      "astId": 7537,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "_depth",
                      "offset": 0,
                      "slot": "3",
                      "type": "t_uint256"
                    },
                    {
                      "astId": 7539,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "_target",
                      "offset": 0,
                      "slot": "4",
                      "type": "t_address"
                    },
                    {
                      "astId": 7541,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "_set",
                      "offset": 0,
                      "slot": "5",
                      "type": "t_bytes32"
                    },
                    {
                      "astId": 7543,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "_enable_packed_slots",
                      "offset": 0,
                      "slot": "6",
                      "type": "t_bool"
                    },
                    {
                      "astId": 7545,
                      "contract": "test/ScoreCheckerV2.t.sol:ScoreCheckerV2Test",
                      "label": "_calldata",
                      "offset": 0,
                      "slot": "7",
                      "type": "t_bytes_storage"
                    }
                  ]
                },
                "t_uint256": {
                  "encoding": "inplace",
                  "label": "uint256",
                  "numberOfBytes": "32"
                },
                "t_uint64": {
                  "encoding": "inplace",
                  "label": "uint64",
                  "numberOfBytes": "8"
                }
              }
            },
            "evm": {
              "bytecode": {
                "object": "",
                "sourceMap": "275:16572:57:-:0;;;;;;;3166:4:3;275:16572:57;;;;3166:4:3;275:16572:57;;;3166:4:3;275:16572:57;1038:4:13;275:16572:57;;;1038:4:13;275:16572:57;;;;;;;;;;;",
                "linkReferences": {}
              },
              "deployedBytecode": {
                "object": "",
                "sourceMap": "275:16572:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:20;275:16572;373:20;;;275:16572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:26:13;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1143:1;275:16572;;;;;;;;;;;;;;;;;;;;;1590:14:0;;16551:4:57;1590:14:0;275:16572:57;;-1:-1:-1;;;;;16594:8:57;;1590:14:0;;;275:16572:57;1590:14:0;16616:5:57;1590:14:0;275:16572:57;;;16436:195;;;;;;275:16572;16460:77;275:16572;;;;;;;670:6;275:16572;;;;;;;;;;;;;;;16436:195;;275:16572;;;;;;;;;;;;;;;;;;;;;;;;16426:206;;16668:12;275:16572;;;;;16668:40;;;;;275:16572;;;;16668:40;;;;;;;;;;;275:16572;1590:14:0;;16760:18:57;1590:14:0;275:16572:57;;;;;;;16752:35;;275:16572;16752:35;;275:16572;;;;;-1:-1:-1;;;;;;;;;;;16752:35:57;275:16572;16752:35;275:16572;16752:35;;;;;;;;;;;;;;;;275:16572;-1:-1:-1;275:16572:57;;;16813:25;;;275:16572;;;;;;;;;;;;;;;-1:-1:-1;;;;;;275:16572:57;;;;;16813:25;;275:16572;;;;16813:25;;13516:855;;16813:25;;;;;;:::i;:::-;10374:19;;;;;275:16572;;;;;;10374:19;;275:16572;10374:19;;275:16572;10374:19;;;;;;;;;;;;;;;;;;275:16572;;;;16668:12;275:16572;;;;1590:14:0;;;275:16572:57;592:12;16616:5;1590:14:0;275:16572:57;;;;;;;;;;;;;;10436:141;;275:16572;10436:141;;275:16572;;;;;;;;;;;;;;;;;;;:::i;:::-;10436:141;;;;;;;;;;;;;275:16572;10620:11;;;275:16572;10620:11;;:::i;:::-;275:16572;16668:12;275:16572;;;;1590:14:0;16551:4:57;1590:14:0;275:16572:57;;;;;;;;;;;10729:27;;275:16572;10729:27;;275:16572;10729:27;;;;;;;;;;;;;275:16572;10782:11;;;10824:15;10782:11;;:::i;:::-;10824:15;;;:::i;:::-;10859:14;;;;;275:16572;;;;;;;;;;;;;10859:14;;;;;;;;;;275:16572;;10859:14;;;;:::i;:::-;275:16572;;10859:14;275:16572;10859:14;275:16572;;;;;;;;;10859:14;275:16572;;10729:27;;;;;275:16572;10729:27;;275:16572;10729:27;;;;;;275:16572;10729:27;;;:::i;:::-;;;275:16572;;;;;;;;;10782:11;10824:15;10729:27;;275:16572;;;;;10729:27;;;-1:-1:-1;10729:27:57;;;275:16572;;;;;;;;;10436:141;;;;;;;;;;;;;;;;;;;:::i;:::-;;;275:16572;;;;;;;;10620:11;10436:141;;275:16572;;;;10436:141;;;;;;275:16572;;;;;;;;;10374:19;;;;;;;:::i;:::-;275:16572;;10374:19;;;;;;275:16572;;;;10374:19;275:16572;;;;;;;;;10374:19;275:16572;;;16752:35;16813:25;16752:35;;16813:25;16752:35;;;;;275:16572;16752:35;275:16572;16752:35;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;-1:-1:-1;16752:35:57;;;;;;;16668:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;275:16572;;;;;;;16668:40;;;;;;;;;;275:16572;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:1;275:16572;;;;;;;;;;;;;;;;;;2723:18:6;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;1590:14:0;;-1:-1:-1;;;;;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:45;275:16572;;;;;;;;-1:-1:-1;;;;;275:16572:57;;;;;;;;;;;;;;;;;;;399:31;275:16572;;;-1:-1:-1;;;;;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;539:11;275:16572;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2575:18:6;275:16572:57;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;2575:18:6;275:16572:57;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2876:18:6;275:16572:57;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2876:18:6;275:16572:57;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;1590:14:0;;275:16572:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1351:20;275:16572;;;;;;;;;;;;;;;;;;;;;;;1083:10;275:16572;;;;;;;;;;;;;;;;10952:5;1590:14:0;275:16572:57;;-1:-1:-1;;;;;275:16572:57;-1:-1:-1;;;;;;;;;;;10938:20:57;;;;275:16572;;;;;;10938:20;;275:16572;10938:20;;275:16572;10938:20;;275:16572;10938:20;;-1:-1:-1;;;;;;;;;;;10938:20:57;;;;;;;;275:16572;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;10952:5:57;275:16572;;;;;;;;;;;;;;;;;;;;;;;20303:22:4;;;;;:::i;:::-;10952:5:57;275:16572;;20303:22:4;;20293:33;275:16572:57;;;;;;;20344:19:4;;275:16572:57;20344:19:4;;275:16572:57;10952:5;20344:19:4;275:16572:57;20344:19:4;-1:-1:-1;;;;;;;;;;;20344:19:4;;;;;;;;;;;275:16572:57;20373:20:4;-1:-1:-1;;;;;;;;;;;20373:20:4;;;;275:16572:57;;;;;20373:20:4;;275:16572:57;;;291:59:4;275:16572:57;;;;;;;20373:20:4;;275:16572:57;20373:20:4;;275:16572:57;;;291:59:4;;;;;;;;:::i;:::-;20373:20;;;-1:-1:-1;;;;;;;;;;;20373:20:4;;;;;;;;;;;275:16572:57;-1:-1:-1;;11063:12:57;275:16572;;;-1:-1:-1;;;;;275:16572:57;;11063:43;;;;;275:16572;;;;;;;;;;;;;;;11063:43;;275:16572;11063:43;;275:16572;11063:43;;;;;;;;;;;275:16572;-1:-1:-1;;11063:12:57;275:16572;;;-1:-1:-1;;;11125:31:57;;275:16572;;;;;-1:-1:-1;;;;;275:16572:57;;10952:5;275:16572;;;;11125:31;;;;;;11158:9;11125:31;;;;;275:16572;11158:9;;:::i;:::-;11258:32;;;;;275:16572;;;;;;;;;;;;;11258:32;;11236:12;275:16572;11258:32;;275:16572;11258:32;;;;;;;;275:16572;-1:-1:-1;;11063:12:57;275:16572;;;-1:-1:-1;;;11309:23:57;;275:16572;;;-1:-1:-1;;;;;275:16572:57;10952:5;275:16572;;;;11309:23;;;;;;;;;;;275:16572;2349:24:2;-1:-1:-1;;;;;;;;;;;2349:24:2;;;;275:16572:57;;;;;;2349:24:2;;;;275:16572:57;2349:24:2;;275:16572:57;11236:12;275:16572;1590:14:0;;275:16572:57;;2349:24:2;291:59:4;2349:24:2;-1:-1:-1;;;;;;;;;;;2349:24:2;;;;;;;;;;;275:16572:57;11431:40;;;;;;275:16572;;;;;;;;;;;;;11431:40;;11419:2;275:16572;11431:40;;275:16572;11431:40;;;;;;;;275:16572;-1:-1:-1;;11063:12:57;275:16572;;;-1:-1:-1;;;11490:26:57;;275:16572;;;;;-1:-1:-1;;;;;275:16572:57;;10952:5;275:16572;;;;11490:26;;;;;;;;;;;275:16572;2349:24:2;-1:-1:-1;;;;;;;;;;;2349:24:2;;;;275:16572:57;;2349:24:2;;;275:16572:57;2349:24:2;;275:16572:57;11419:2;275:16572;1590:14:0;;275:16572:57;;2349:24:2;291:59:4;2349:24:2;-1:-1:-1;;;;;;;;;;;2349:24:2;;;;;;;;;;;275:16572:57;11579:20;;;;;;275:16572;;;;;;;;;;;;;11579:20;;;;;;;;;;275:16572;-1:-1:-1;11063:12:57;275:16572;;;-1:-1:-1;;;11620:21:57;;;275:16572;;;-1:-1:-1;;;;;275:16572:57;;10952:5;275:16572;;;;11620:21;;;;;;;;;;;;275:16572;11620:21;;:::i;:::-;11661:22;;;;;275:16572;;;;;;;;;;;;;11661:22;;;;;;;;;;;;;275:16572;-1:-1:-1;;11063:12:57;275:16572;;;11705:21;;;10952:5;;275:16572;;;;;;;;-1:-1:-1;;;;;275:16572:57;11705:21;;;;;;;;;;;275:16572;1872:20:2;-1:-1:-1;;;;;;;;;;;1872:20:2;;;;275:16572:57;;-1:-1:-1;;;1872:20:2;;275:16572:57;;;;1872:20:2;;275:16572:57;1872:20:2;275:16572:57;;;-1:-1:-1;;;;;;;;;;;1872:20:2;;;;;;;;275:16572:57;11746:14;;-1:-1:-1;;;;;;;;;;;11746:14:57;;;;275:16572;;-1:-1:-1;;;11746:14:57;;275:16572;;;;;;;-1:-1:-1;;;;;;;;;;;11746:14:57;;;;;;;;275:16572;;1872:20:2;;;;:::i;:::-;275:16572:57;;1872:20:2;;;;11705:21:57;;;;10952:5;11705:21;10952:5;11705:21;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;11661:22;;;;:::i;:::-;275:16572;;11661:22;;;;;275:16572;;;;;;;;;11661:22;275:16572;;;11620:21;;;;10952:5;11620:21;10952:5;11620:21;;;;;;;:::i;:::-;;;;11579:20;;;;:::i;:::-;275:16572;;11579:20;;;;2349:24:2;;;;:::i;:::-;;;;;275:16572:57;;;;;;;;;11490:26;;;10952:5;11490:26;;10952:5;11490:26;;;;;;10952:5;11490:26;;;:::i;:::-;;;275:16572;;;;;11490:26;;;;;;-1:-1:-1;11490:26:57;;11431:40;;;;:::i;:::-;275:16572;;11431:40;;;;275:16572;;;;2349:24:2;;;;:::i;:::-;;;;11309:23:57;;;;10952:5;11309:23;;10952:5;11309:23;;;;;;10952:5;11309:23;;;:::i;:::-;;;275:16572;;;;;11309:23;;;;;;;-1:-1:-1;11309:23:57;;11258:32;;;;:::i;:::-;275:16572;;11258:32;;;;11125:31;;;;10952:5;11125:31;10952:5;11125:31;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;11063:43;;;;:::i;:::-;275:16572;;11063:43;;;;20373:20:4;;;;:::i;:::-;275:16572:57;;20373:20:4;;;;20344:19;;;;;10952:5:57;20344:19:4;10952:5:57;20344:19:4;;;;;;;:::i;:::-;;;;;275:16572:57;;10952:5;275:16572;;;;;;;;;;;;;;;10938:20;;;;:::i;:::-;275:16572;;10938:20;;;;275:16572;;;;;;;;;;;;;;;;772:6;275:16572;;;;;;;;;;;;;;;;;461:33;275:16572;;;;;;;;;;;;;;;;;;;;;;;1197:1;275:16572;;;;;;;;;;;;;;;;3653:18:6;275:16572:57;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3653:18:6;275:16572:57;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;1590:14:0;;275:16572:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5254:66;5216:227;;;275:16572;5343:66;275:16572;;;;;;;;;;;5216:227;;;;;;:::i;:::-;5476:4;1590:14:0;-1:-1:-1;;;;;;;;;;;275:16572:57;1590:14:0;-1:-1:-1;;;;;275:16572:57;;;5462:19;;;;;275:16572;;;;;;5462:19;;275:16572;5462:19;;275:16572;5462:19;;275:16572;5462:19;;;;;;;;;;;;;;275:16572;5575:17;;;;;;;275:16572;;-1:-1:-1;;;5575:17:57;;;275:16572;;;5575:17;;;;;;;;;;;;;275:16572;;;5679:510;275:16572;5216:227;275:16572;5679:12;275:16572;;;;-1:-1:-1;;;;;275:16572:57;1590:14:0;275:16572:57;592:12;6146:5;1590:14:0;275:16572:57;;;;;;;;;;;;;5679:510;;275:16572;5679:510;;;:::i;:::-;;;;;;;;;;;275:16572;6208:14;;;;;;275:16572;;;;;;;;;;;;;6208:14;;;;;;;;;;275:16572;;5679:510;;;5216:227;5679:510;5216:227;5679:510;;;;;;;:::i;:::-;;;;;5575:17;;;;:::i;:::-;275:16572;;5575:17;;;;;275:16572;;;;;;;;;5462:19;;;;:::i;:::-;275:16572;;5462:19;;;;;275:16572;;;;;;;;;;;;;;;;373:20;275:16572;;;;-1:-1:-1;;;;;275:16572:57;;;;;;;;;;;;;;;;;;;3162:18:6;275:16572:57;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;3162:18:6;275:16572:57;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1323:22:57;275:16572;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;719:6;275:16572;;;;;;;;;;;;;;;;;;;670:6;275:16572;;;;;;;;;;;;;;;;12961:47;;;:::i;:::-;4160:4;1590:14:0;-1:-1:-1;;;;;;;;;;;275:16572:57;-1:-1:-1;;;;;275:16572:57;;;4146:19;;;;;275:16572;;;;;;4146:19;;275:16572;4146:19;;275:16572;4146:19;;275:16572;4146:19;;;;;;;;;;;;;;275:16572;;;;;4288:45;;;;275:16572;4252:136;;;275:16572;4252:136;;275:16572;4252:136;;275:16572;592:12;1590:14:0;;;275:16572:57;1590:14:0;4252:136:57;;;;;:::i;:::-;4236:153;;;;;275:16572;1590:14:0;275:16572:57;;;;;;;;;;4236:153;;275:16572;;4236:153;;1590:14:0;275:16572:57;1590:14:0;;;;:::i;:::-;4236:153:57;;;;;;;;;;;;;;;275:16572;;;;4408:504;275:16572;;;4408:12;275:16572;;;;1590:14:0;-1:-1:-1;;;;;275:16572:57;1590:14:0;275:16572:57;1590:14:0;4874:5:57;1590:14:0;275:16572:57;;;;;;;;;;;;;4408:504;;275:16572;4408:504;;;:::i;4236:153::-;;;;;;;:::i;:::-;275:16572;;4236:153;;;;;;275:16572;;;4146:19;;;;:::i;:::-;275:16572;;4146:19;;;;275:16572;;;;;;;;;;;;;;;;827:3;275:16572;;;;;;;;;;;;;;;;3346:26:6;275:16572:57;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3346:26:6;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;592:12;275:16572;;;;;;;;;;;;;;;;;;;1033:9;275:16572;;;;;;;;;;;;;;;;436:19;275:16572;;;-1:-1:-1;;;;;275:16572:57;;;;;;;;;;;;;;;;;;;;;2803:12;275:16572;;;-1:-1:-1;;;2803:20:57;;;;275:16572;;-1:-1:-1;;;;;275:16572:57;;;;2803:20;275:16572;;;;2803:20;;;;;;2825:5;2803:20;;;;;275:16572;1590:14:0;;;;275:16572:57;2825:5;;:::i;:::-;275:16572;;-1:-1:-1;;;2850:31:57;;275:16572;2850:31;275:16572;;;2850:31;;;;;;;;2883:16;2850:31;;;;;275:16572;1590:14:0;2883:16:57;1590:14:0;275:16572:57;2883:16;;:::i;:::-;275:16572;;-1:-1:-1;;;2919:23:57;;;275:16572;;;2919:23;;;;;;;;;;;;;275:16572;2944:9;;;275:16572;2944:9;;:::i;:::-;275:16572;;-1:-1:-1;;;2973:22:57;;275:16572;;;;;2973:22;;;;;;;;;;;275:16572;;;-1:-1:-1;;;;;;;;;;;2349:24:2;;;;;;275:16572:57;;1590:14:0;275:16572:57;;;;;;;;;2349:24:2;;275:16572:57;2349:24:2;;275:16572:57;539:11;1590:14:0;;;275:16572:57;2349:24:2;;;;;;;;275:16572:57;;;2349:24:2;;;;:::i;:::-;275:16572:57;;2973:22;;;;;;;;;;;;;;;;:::i;:::-;;;275:16572;;;;;2973:22;;;;;;;;;2919:23;;;;;;;;;;;;;;;;:::i;:::-;;;275:16572;;;;;;;2944:9;2919:23;;;;;;;2850:31;;;;;;;;;;;;;;;:::i;:::-;;;;;2803:20;;;;;;;;;;;;;;:::i;:::-;;;;275:16572;;;;;;;;;;;;;;;3501:18:6;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:14:0;;-1:-1:-1;;;;;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;921:2;275:16572;;;;;;;;;;;;;;;;;;3794:16:6;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:14:0;;-1:-1:-1;;;;;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3948:19:6;275:16572:57;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;3948:19:6;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:14:0;;-1:-1:-1;;;;;275:16572:57;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3018:16:6;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:14:0;;-1:-1:-1;;;;;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12961:47;;:::i;:::-;7430:4;1590:14:0;275:16572:57;;-1:-1:-1;;;;;275:16572:57;-1:-1:-1;;;;;;;;;;;7416:19:57;;;;275:16572;;;;;;7416:19;;275:16572;7416:19;;275:16572;7416:19;;275:16572;7416:19;;-1:-1:-1;;;;;;;;;;;7416:19:57;;;;;;;;275:16572;;;;7470:506;275:16572;7470:12;275:16572;-1:-1:-1;;;;;275:16572:57;1590:14:0;275:16572:57;592:12;7937:5;1590:14:0;275:16572:57;;;;;;;;;;;;;7470:506;;275:16572;7470:506;;;:::i;:::-;;;275:16572;;-1:-1:-1;;;;;275:16572:57;7470:506;;;;;;8006:8;7470:506;;;;;8006:8;;:::i;:::-;7470:12;8111:15;275:16572;8111:15;;275:16572;;;8103:29;;-1:-1:-1;;;;;;;;;;;8103:29:57;;;;275:16572;;;;;;8103:29;;275:16572;8103:29;;275:16572;8103:29;;275:16572;8103:29;;-1:-1:-1;;;;;;;;;;;8103:29:57;;;;;;;;275:16572;-1:-1:-1;;7937:5:57;1590:14:0;-1:-1:-1;;275:16572:57;;;;1197:1;275:16572;;7937:5;275:16572;;;-1:-1:-1;;;;;8111:15:57;275:16572;-1:-1:-1;;;;;275:16572:57;;;;;;;;;;;7430:4;1590:14:0;275:16572:57;;;15255:845;15279:376;275:16572;15255:845;;275:16572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1143:1;275:16572;;;;1197:1;275:16572;;;;;;;;;;;;;;-1:-1:-1;;;;;275:16572:57;;;;-1:-1:-1;;;;;8111:15:57;275:16572;;;;;;;1197:1;275:16572;;;;;;15255:845;;275:16572;;;;;-1:-1:-1;;;;;275:16572:57;;;;;;;;;;;;;;;;;15255:845;;;15245:856;;;;7470:12;275:16572;-1:-1:-1;;;16137:40:57;;;;;275:16572;;;;;;-1:-1:-1;;;;;275:16572:57;;;;;16137:40;;;;;;;;;;;275:16572;1590:14:0;275:16572:57;1590:14:0;275:16572:57;;;;;;;16221:35;;275:16572;16221:35;;275:16572;;;;;16221:35;275:16572;16221:35;275:16572;16221:35;-1:-1:-1;;;;;;;;;;;16221:35:57;;;;;;;275:16572;16221:35;1590:14:0;592:12:57;16221:35;-1:-1:-1;;;;;16221:35:57;;;;;;;;275:16572;16282:25;275:16572;;;16282:25;275:16572;;;16282:25;;;;;;275:16572;;;;;;;;;;;;;;;;;;;;;;;;16282:25;;13516:855;;16282:25;;;;;;:::i;:::-;1197:1;275:16572;;;;;;;;;;;;9476:513;;275:16572;;9476:513;;275:16572;;;1590:14:0;;275:16572:57;;;1590:14:0;;275:16572:57;;1590:14:0;;;275:16572:57;;1590:14:0;;;275:16572:57;;1590:14:0;;;275:16572:57;;1590:14:0;;;275:16572:57;;1590:14:0;;;275:16572:57;;1590:14:0;;;275:16572:57;1143:1;1590:14:0;;;275:16572:57;1590:14:0;;;;275:16572:57;;1590:14:0;;;275:16572:57;;1590:14:0;;;275:16572:57;;;-1:-1:-1;;;;;8111:15:57;275:16572;;1590:14:0;;;275:16572:57;;1590:14:0;;;275:16572:57;;1590:14:0;;;;;;;;;:::i;:::-;9476:513:57;;;;;;;;10019:8;9476:513;;;;;10019:8;;:::i;:::-;7470:12;275:16572;7430:4;1590:14:0;275:16572:57;;-1:-1:-1;;;10124:31:57;;-1:-1:-1;;;;;275:16572:57;;;;10124:31;;275:16572;;;;;;;;;;;;;10124:31;;;;;;;;;;;275:16572;2349:24:2;-1:-1:-1;;;;;;;;;;;2349:24:2;;;;275:16572:57;;;;;;2349:24:2;;275:16572:57;2349:24:2;;275:16572:57;;;1590:14:0;;275:16572:57;;2349:24:2;275:16572:57;2349:24:2;-1:-1:-1;;;;;;;;;;;2349:24:2;;;;;;;;275:16572:57;10224:14;-1:-1:-1;;;;;;;;;;;10224:14:57;;;;275:16572;;-1:-1:-1;;;10224:14:57;;275:16572;;;;;;;-1:-1:-1;;;;;;;;;;;10224:14:57;;;;;;;;275:16572;;2349:24:2;;;;:::i;:::-;;;;10124:31:57;;;;275:16572;10124:31;275:16572;10124:31;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9476:513;;;;275:16572;9476:513;275:16572;9476:513;;;;;;;:::i;:::-;;;;16221:35;;;;16282:25;16221:35;16282:25;16221:35;275:16572;16221:35;275:16572;16221:35;;;;;;;:::i;:::-;;;-1:-1:-1;16221:35:57;;-1:-1:-1;16221:35:57;;;;275:16572;;;;;;;;;;;16137:40;;;;275:16572;16137:40;;275:16572;16137:40;;;;275:16572;16137:40;275:16572;;;;;16137:40;:::i;:::-;;;275:16572;;;;;;;16137:40;;;;;;;-1:-1:-1;16137:40:57;;275:16572;;;;;;;;;;;;;-1:-1:-1;;;275:16572:57;;;;;;;;8103:29;;;;:::i;:::-;275:16572;;8103:29;;;;7416:19;;;;:::i;:::-;275:16572;;7416:19;;;;275:16572;;;;;;;;;;;;;12961:47;;;:::i;:::-;3156:4;1590:14:0;-1:-1:-1;;;;;;;;;;;275:16572:57;-1:-1:-1;;;;;275:16572:57;;;3142:19;;;;;275:16572;;;;;;3142:19;;275:16572;3142:19;;275:16572;3142:19;;275:16572;3142:19;;;;;;;;;;;;;;275:16572;;;3195:505;275:16572;3195:12;275:16572;;-1:-1:-1;;;;;1590:14:0;;275:16572:57;1590:14:0;275:16572:57;592:12;1590:14:0;3662:5:57;1590:14:0;275:16572:57;;;;;;;;;;;;;3195:505;;275:16572;3195:505;;;:::i;:::-;;275:16572;;;;3195:505;;;;;;3730:7;3195:505;;;;;3730:7;;:::i;:::-;275:16572;3195:12;275:16572;;;;1590:14:0;3156:4:57;1590:14:0;275:16572:57;;;;;;;;;;3849:31;;275:16572;3849:31;;275:16572;3849:31;275:16572;3849:31;;;;;;;;;;;3933:32;3849:31;;;;;;;275:16572;3911:11;;;;;:::i;:::-;275:16572;1590:14:0;275:16572:57;3933:32;;:::i;3849:31::-;3911:11;3849:31;;;;;;;-1:-1:-1;3849:31:57;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3142:19;;;;:::i;:::-;275:16572;;3142:19;;;;275:16572;;;;;;;;;;;;;12961:47;;:::i;:::-;11958:4;1590:14:0;-1:-1:-1;;;;;275:16572:57;;;;-1:-1:-1;;;;;;;;;;;275:16572:57;11944:19;;;;;275:16572;;;;;;;11944:19;;;;275:16572;11944:19;;275:16572;11944:19;;275:16572;11944:19;;;;;;;;;;;;;;275:16572;;11982:505;:12;275:16572;1590:14:0;-1:-1:-1;;;;;275:16572:57;1590:14:0;275:16572:57;1590:14:0;12449:5:57;1590:14:0;275:16572:57;;;;;;;;;;;11982:505;;275:16572;11982:505;;;275:16572;11982:505;;;:::i;:::-;;592:12;;275:16572;;;;;;11982:505;;;;;;;;275:16572;12506:14;;;;;;275:16572;;-1:-1:-1;;;12506:14:57;;;275:16572;12506:14;275:16572;;;12506:14;;;;;;;;;;;;;275:16572;1590:14:0;;;;;275:16572:57;12588:13;;;12620:20;;;;;;275:16572;;12620:20;;;275:16572;12620:20;;275:16572;12620:20;;275:16572;12620:20;;;;;;;;;;;;;;275:16572;;;;11982:12;275:16572;;;;1590:14:0;;;275:16572:57;12650:41;;;;;275:16572;;;;;;;;;;;;;;;12650:41;;275:16572;12650:41;;275:16572;12650:41;;;;;;;;;;;275:16572;12701:14;;;;;;;275:16572;;;;;;;12701:14;;;;;;;;;;;;;;;275:16572;1590:14:0;;;275:16572:57;12757:13;275:16572;;;;;;;;12803:25;;;;:::i;275:16572::-;-1:-1:-1;;;275:16572:57;;;;;;;;12701:14;;;;:::i;:::-;275:16572;;12701:14;;;;;275:16572;;;12650:41;;;;:::i;:::-;275:16572;;12650:41;;;;12620:20;;;;:::i;:::-;275:16572;;12620:20;;;;12506:14;;;;:::i;:::-;275:16572;;12506:14;;;;11982:505;;;;;;;;;;;;;:::i;:::-;;;;;11944:19;;;;;;;;:::i;:::-;275:16572;;11944:19;;;;;275:16572;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1471:19:57;;;;;275:16572;;-1:-1:-1;;;1471:19:57;;1479:10;275:16572;1471:19;;275:16572;;;;;;;;;;;;1471:19;;;;;;;;275:16572;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;20303:22:4;;;;;:::i;:::-;275:16572:57;;;20303:22:4;;20293:33;275:16572:57;;;;;;;20344:19:4;;;;275:16572:57;20344:19:4;;275:16572:57;20344:19:4;;;;;;;;;;;;;;;;275:16572:57;20373:20:4;;;;;;275:16572:57;;;;;;;20373:20:4;;;;291:59;;;;;275:16572:57;;;;;;;;;;20373:20:4;;275:16572:57;20373:20:4;;275:16572:57;291:59:4;;;;;;;;:::i;:::-;20373:20;;;;;;;;;;;;275:16572:57;;;;;;;;;;;;;;1582:7;275:16572;1561:28;275:16572;;;1618:27;;;;275:16572;1618:27;;275:16572;1618:27;;;;;;;;;;;;;;;;;275:16572;;;;;;;;;;;1599:46;275:16572;;;1599:46;275:16572;;;;;;:::i;:::-;;;;-1:-1:-1;;;275:16572:57;;;;;;;;;;;;;;;;;;;;;;20303:22:4;;;;;:::i;:::-;275:16572:57;;;20303:22:4;;20293:33;275:16572:57;;20344:19:4;;;275:16572:57;20344:19:4;;275:16572:57;20344:19:4;;;;;;;;;;;;;;;;275:16572:57;20373:20:4;;;;;;275:16572:57;;;;291:59:4;275:16572:57;;;;;20373:20:4;;;;;;;275:16572:57;20373:20:4;;275:16572:57;20373:20:4;;275:16572:57;291:59:4;;;;;;;;:::i;:::-;20373:20;;;;;;;;;;;;;;;275:16572:57;;;1655:23;275:16572;;;1655:23;275:16572;1590:14:0;;;275:16572:57;1738:25;;;;;275:16572;;;;;1738:25;;;;275:16572;1738:25;;275:16572;1753:9;275:16572;;;;1738:25;;;;;;;;;;;;;;;;;275:16572;1590:14:0;;;1655:23:57;1590:14:0;275:16572:57;1773:23;;;;;275:16572;;1773:23;;;;275:16572;1773:23;;275:16572;1787:8;275:16572;;;;1773:23;;;;;;;;;;;;;;;;;275:16572;1590:14:0;;;1599:46:57;1590:14:0;275:16572:57;1806:34;;;;;275:16572;;;;;;1806:34;;;;;;;275:16572;1806:34;;275:16572;1832:7;275:16572;;;;1806:34;;;;;;;;275:16572;;;;;1935:38;;;;;;-1:-1:-1;;;;;1935:38:57;;;;;;;;;;;;;;;;;539:11;275:16572;;1935:38;;;;;;;;;1590:14:0;1599:46:57;1590:14:0;275:16572:57;1590:14:0;;;275:16572:57;;;;2055:156;;;;;;;;592:12;2055:156;;;275:16572;;;;;;;;;2055:156;;275:16572;;;;;;;;;;;;;;;;2275:85;;;;;275:16572;2275:85;;;;;;;;;;;;;;;;;;275:16572;;;;;;;;;;2275:85;;275:16572;;;;:::i;:::-;2275:85;;;;;;;;;2379:65;275:16572;;-1:-1:-1;;;;;;275:16572:57;;;;;-1:-1:-1;;;;;275:16572:57;;;;;;;;-1:-1:-1;;;2505:23:57;;275:16572;;;;;;2505:23;275:16572;;;;2505:23;;;;;;;;;;275:16572;2530:9;;;;:::i;:::-;275:16572;;-1:-1:-1;;;2559:31:57;;275:16572;2559:31;275:16572;;;;2559:31;;;;;;;2592:16;2559:31;;275:16572;2559:31;;;;;275:16572;1590:14:0;;1599:46:57;1590:14:0;275:16572:57;2592:16;;:::i;:::-;275:16572;;-1:-1:-1;;;2628:20:57;;275:16572;;;;;2628:20;;;;;;;2650:5;2628:20;;;;;275:16572;1590:14:0;;275:16572:57;2650:5;;:::i;:::-;2693:15;275:16572;-1:-1:-1;;;;;275:16572:57;;;;;;;;;;;;2628:20;;;;;;;;;;;;;;;:::i;:::-;;;;;2559:31;;;;;;;;;;;;;;:::i;:::-;;;;;275:16572;;;;;;;;;2505:23;;;;;;;;;;;;;;;:::i;:::-;;;275:16572;;;;2530:9;275:16572;;2505:23;;;;;;;2275:85;-1:-1:-1;;;275:16572:57;;;;;;;;;;;;;;;;;;;;1935:38;-1:-1:-1;;;275:16572:57;;;;;;;;1806:34;;;;:::i;:::-;275:16572;;1806:34;;;;;275:16572;;;1773:23;;;;:::i;:::-;275:16572;;1773:23;;;;1738:25;;;;:::i;:::-;275:16572;;1738:25;;;;20373:20:4;;;;:::i;:::-;275:16572:57;;20373:20:4;;;;20344:19;;;;;;;;;;;;;;;:::i;:::-;;;;;275:16572:57;;;;;;;;;;;;;;;-1:-1:-1;275:16572:57;;;;;1618:27;;;;;;;;;;;;;;:::i;:::-;;;;;275:16572;;;;;;;;;20373:20:4;;;;:::i;:::-;275:16572:57;;20373:20:4;;;;;275:16572:57;;;20344:19:4;;;;;;;;;;;;;;;:::i;:::-;;;;;275:16572:57;;;;;;;;;;;;;;;;;;1471:19;;;;:::i;:::-;275:16572;;1471:19;;;;275:16572;;;;;;;;;;;;;;;;971:7;275:16572;;;;;;;;;;;-1:-1:-1;;275:16572:57;;;;6321:12;275:16572;-1:-1:-1;;;6321:24:57;;275:16572;;-1:-1:-1;;;;;275:16572:57;;6321:24;275:16572;;;;6321:24;;;;;;;275:16572;6321:24;;;275:16572;;6348:1;275:16572;;;;;;-1:-1:-1;;;;;13197:8:57;1590:14:0;275:16572:57;6321:24;13207:5;1590:14:0;275:16572:57;;;;;;13930:4;1590:14:0;275:16572:57;;;;13516:855;;;;275:16572;13540:376;275:16572;;;;;;;6348:1;275:16572;;;;;;719:6;275:16572;;;;772:6;275:16572;;;;827:3;275:16572;;;;877:1;275:16572;;;;921:2;275:16572;;;;971:7;275:16572;;;;1033:9;275:16572;;;;1083:10;275:16572;;;;1143:1;275:16572;;;;6348:1;275:16572;;;;;;;;;;;;;;;;;;;;;;;;13516:855;;;;;:::i;:::-;275:16572;13506:866;;13197:8;275:16572;;;;;;;;;14408:40;;275:16572;14408:40;;275:16572;14408:40;;;;;;;275:16572;14408:40;;;275:16572;1590:14:0;14500:18:57;1590:14:0;275:16572:57;;;;;;;14492:35;;275:16572;14492:35;;275:16572;13197:8;275:16572;;;;14492:35;275:16572;14492:35;-1:-1:-1;;;;;;;;;;;14492:35:57;;;;;;;275:16572;;;;14492:35;;;275:16572;-1:-1:-1;275:16572:57;;;6321:24;14553:25;;275:16572;;;;;;;;;;;;;;;-1:-1:-1;;;;;;275:16572:57;;;;;14553:25;275:16572;;;;14553:25;;13516:855;;14553:25;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;6448:19:57;;;;275:16572;;;;;;6448:19;;275:16572;6448:19;;275:16572;;6448:19;13197:8;6448:19;;-1:-1:-1;;;;;;;;;;;6448:19:57;;;;;;;;275:16572;-1:-1:-1;6321:12:57;275:16572;;;-1:-1:-1;;;6622:24:57;;275:16572;;6321:24;;275:16572;;;;;;;;-1:-1:-1;;;;;275:16572:57;6622:24;;;;;;;;;;;275:16572;;;;6538:47;;;;6321:24;6502:154;;;6348:1;275:16572;;13197:8;6502:154;;275:16572;;1590:14:0;;275:16572:57;;6502:154;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;6486:171:57;;;;275:16572;1590:14:0;275:16572:57;;;;;;;;;;6486:171;;6321:24;275:16572;6486:171;;1590:14:0;13197:8:57;1590:14:0;;;;:::i;:::-;6486:171:57;;;-1:-1:-1;;;;;;;;;;;6486:171:57;;;;;;;;275:16572;;;6321:24;275:16572;;;;;;6321:12;275:16572;;;;6348:1;592:12;-1:-1:-1;;;;;13197:8:57;1590:14:0;275:16572:57;1590:14:0;;13207:5:57;1590:14:0;275:16572:57;;;;;;;;;;;;;6676:526;;275:16572;;6676:526;;275:16572;719:6;13197:8;1590:14:0;;275:16572:57;772:6;275:16572;1590:14:0;;275:16572:57;827:3;1590:14:0;;;275:16572:57;877:1;1590:14:0;;;275:16572:57;921:2;1590:14:0;;;275:16572:57;971:7;1590:14:0;;;275:16572:57;1033:9;1590:14:0;;;275:16572:57;1083:10;1590:14:0;;;275:16572:57;1143:1;1590:14:0;;;275:16572:57;6348:1;1590:14:0;;;275:16572:57;;1590:14:0;;;275:16572:57;;1590:14:0;;;275:16572:57;1590:14:0;;;275:16572:57;1590:14:0;;;275:16572:57;;1590:14:0;;;;;;;;;:::i;:::-;6676:526:57;;;;;;;;;;7221:14;-1:-1:-1;;;;;;;;;;;7221:14:57;;;;275:16572;;-1:-1:-1;;;7221:14:57;;275:16572;;;;;;;-1:-1:-1;;;;;;;;;;;7221:14:57;;;;;;;;275:16572;;6676:526;;;6321:24;6676:526;6321:24;6676:526;;;;;;;:::i;:::-;;;;;6486:171;;;;:::i;:::-;275:16572;;6486:171;;;;6622:24;;;;6321;6622;;6321;6622;;;;;;6321;6622;;;:::i;:::-;;;275:16572;;;;;;;6622:24;;;;;;-1:-1:-1;6622:24:57;;6448:19;;;;;;:::i;:::-;275:16572;6448:19;;;;14492:35;14553:25;14492:35;;14553:25;14492:35;;;;;275:16572;14492:35;275:16572;14492:35;;;;;;;:::i;:::-;;;;-1:-1:-1;14492:35:57;;14408:40;;;;6321:24;14408:40;;6321:24;14408:40;;;;;;6321:24;14408:40;;;:::i;:::-;;;275:16572;;;;;14408:40;;;;;;;-1:-1:-1;14408:40:57;;275:16572;;;;;;;;;;;;6321:24;;;;;;;;;;;;;;;;;:::i;:::-;;;275:16572;;;;;6321:24;;;;;;-1:-1:-1;6321:24:57;;275:16572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13516:855;;275:16572;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;275:16572:57;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;275:16572:57;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;275:16572:57;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;275:16572:57;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;275:16572:57;;;;;;;:::o;:::-;;;13516:855;;275:16572;;;;;;;;-1:-1:-1;;;;;275:16572:57;;;;;;;:::o;1590:14:0:-;;;;;;;;;;275:16572:57;;;1590:14:0;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1590:14:0;275:16572:57;670:6;275:16572;;719:6;1590:14:0;;;275:16572:57;772:6;1590:14:0;;;275:16572:57;827:3;1590:14:0;;;275:16572:57;877:1;1590:14:0;;;275:16572:57;921:2;1590:14:0;;;275:16572:57;971:7;1590:14:0;;;275:16572:57;1033:9;1590:14:0;;;275:16572:57;1083:10;1590:14:0;;;275:16572:57;1143:1;1590:14:0;;;275:16572:57;1197:1;1590:14:0;;;275:16572:57;;1590:14:0;;;275:16572:57;;1590:14:0;;;275:16572:57;;1590:14:0;;;275:16572:57;1590:14:0;;;275:16572:57;1590:14:0;;;;;;;;:::i;:::-;;:::o;275:16572:57:-;;;;;;;;;;-1:-1:-1;;;;;275:16572:57;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;275:16572:57;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;275:16572:57;;;;;;;;-1:-1:-1;;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;275:16572:57;;;;;-1:-1:-1;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;275:16572:57;;-1:-1:-1;275:16572:57;;-1:-1:-1;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;275:16572:57;;;;;;;;;;;;-1:-1:-1;;;;;;275:16572:57;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;275:16572:57;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;275:16572:57;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;275:16572:57;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;275:16572:57;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;275:16572:57;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;275:16572:57;;;;;;;;;;;;;;;-1:-1:-1;;;;;;275:16572:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;275:16572:57;;;;;;;;;;;;;1243:204:2;1302:7;275:16572:57;;;;;;;1325:14:2;:::o;1298:143::-;275:16572:57;;;;;;1377:39:2;;;275:16572:57;192:59:2;275:16572:57;-1:-1:-1;;;;;;;;;;;1377:39:2;;;;275:16572:57;192:59:2;;;;;;275:16572:57;1377:39:2;;;;;;;-1:-1:-1;1377:39:2;;;1298:143;1377:53;;;1370:60;:::o;1377:39::-;;;;;;;;;;;;;;;;;:::i;:::-;;;275:16572:57;;;;;1377:39:2;;;;;;-1:-1:-1;1377:39:2;;13025:195:57;-1:-1:-1;;;;;13197:8:57;1590:14:0;275:16572:57;13207:5;1590:14:0;275:16572:57;;;;;1590:14:0;;13930:4:57;1590:14:0;275:16572:57;;;;;;13516:855;;;;;;;275:16572;13540:376;275:16572;;;;;;670:6;275:16572;;;;719:6;275:16572;;;;772:6;275:16572;;;;827:3;275:16572;;;;877:1;275:16572;;;;921:2;275:16572;;;;971:7;275:16572;;;;1033:9;275:16572;;;;1083:10;275:16572;;;;1143:1;275:16572;;;;1197:1;275:16572;;;;-1:-1:-1;275:16572:57;;;;-1:-1:-1;275:16572:57;;;;;;;;;;;;;;13516:855;;;;;:::i;:::-;275:16572;13506:866;;275:16572;14408:12;275:16572;;;;;13197:8;275:16572;;;;;;;;;14408:40;;;;;275:16572;14408:40;;;;;;;-1:-1:-1;14408:40:57;;;13025:195;1590:14:0;14500:18:57;1590:14:0;275:16572:57;;;;;;;14492:35;;14408:40;14492:35;;275:16572;13197:8;275:16572;;;;14492:35;275:16572;14492:35;-1:-1:-1;;;;;;;;;;;14492:35:57;;;;;;-1:-1:-1;;;;;14492:35:57;;;13025:195;-1:-1:-1;275:16572:57;;14553:25;;;275:16572;;;;;;;;;;;;;;;-1:-1:-1;;;;;;275:16572:57;;;;;14553:25;;275:16572;;;;14553:25;275:16572;14492:35;14553:25;14492:35;;14553:25;14492:35;;;;;275:16572;14492:35;275:16572;14492:35;;;;;;;:::i;:::-;;;;;-1:-1:-1;14492:35:57;;;;275:16572;;;-1:-1:-1;275:16572:57;;;;;14408:40;;;;;;;;;;;;;;;;;:::i;:::-;;;275:16572;;;;;14408:40;;;;;;;;;2270:110:2;-1:-1:-1;;;;;;;;;;;2349:24:2;;;;;;;275:16572:57;1590:14:0;275:16572:57;;;;;;;;;2349:24:2;;;;;275:16572:57;592:12;1590:14:0;;;275:16572:57;2349:24:2;;;;;;;;2270:110;:::o;2349:24::-;;;;:::i;2270:110::-;-1:-1:-1;;;;;;;;;;;2349:24:2;;;;;;;275:16572:57;1590:14:0;275:16572:57;;;;;;;;;2349:24:2;;;;;275:16572:57;670:6;1590:14:0;;;275:16572:57;2349:24:2;;;;;;;;2270:110;:::o;:::-;-1:-1:-1;;;;;;;;;;;2349:24:2;;;;;;1590:14:0;2349:24:2;275:16572:57;;;;;;;;;;;2349:24:2;;;;;275:16572:57;1590:14:0;;;275:16572:57;2349:24:2;;;;;;;;2270:110;:::o;3454:::-;;-1:-1:-1;;;;;;;;;;;3533:24:2;;;;;;275:16572:57;;-1:-1:-1;;;3533:24:2;;-1:-1:-1;;;;;275:16572:57;;;3533:24:2;;;275:16572:57;;;;;;;;3533:24:2;;275:16572:57;;;;;;3533:24:2;;;;;;;;3454:110;:::o;1594:89::-;-1:-1:-1;;;;;;;;;;;1657:19:2;;;;;;;275:16572:57;;;;;;;;;;;1657:19:2;;275:16572:57;;1657:19:2;;;275:16572:57;1657:19:2;;;;;;;;1594:89;:::o;275:16572:57:-;;;;;;;;;;;;;;;;;;;;;;;192:59:2;275:16572:57;;192:59:2;275:16572:57;:::o",
                "linkReferences": {}
              },
              "methodIdentifiers": {
                "AVG_BALANCE_LAST_MONTH()": "50fbd686",
                "BASE_SCORE()": "7effe568",
                "CHECK_FEE()": "5fb3cf28",
                "CURRENT_BALANCE()": "063c082c",
                "CURRENT_STREAK()": "e6b7fec8",
                "DANGEROUS_INTERACTIONS()": "81563e93",
                "GAS_PAID()": "abe1f8af",
                "IS_TEST()": "fa7626d4",
                "MAX_FEE()": "bc063e1a",
                "MAX_STREAK()": "3ea2b220",
                "NUM_TRANSACTIONS()": "68b09b3b",
                "SECURITY_SCORE()": "9e687579",
                "SUSPICIOUS_CONTRACTS()": "91c3d658",
                "SUSPICIOUS_OIL_COMPANIES()": "30dca8dd",
                "SUSPICIOUS_TOKENS()": "f84e63c6",
                "TOTAL_SCORE()": "7544594e",
                "authorizedSigner()": "c771909c",
                "authorizedSignerPK()": "9b806d08",
                "excludeArtifacts()": "b5508aa9",
                "excludeContracts()": "e20c9f71",
                "excludeSelectors()": "b0464fdc",
                "excludeSenders()": "1ed7831c",
                "failed()": "ba414fa6",
                "issuedAt()": "8437eeb6",
                "nonce()": "affed0e0",
                "owner()": "8da5cb5b",
                "scoreChecker()": "d9a305c6",
                "setUp()": "0a9254e4",
                "targetArtifactSelectors()": "66d9a9a0",
                "targetArtifacts()": "85226c81",
                "targetContracts()": "3f7286f4",
                "targetInterfaces()": "2ade3880",
                "targetSelectors()": "916a17c6",
                "targetSenders()": "3e5e3c23",
                "test_AdminFunctions()": "a1fa9eb4",
                "test_Deployment()": "4ea0d3f5",
                "test_LegacySubmitScore()": "f709717b",
                "test_SubmitScoreCard()": "118bd35f",
                "test_SubmitScoreCard_InvalidFee()": "6cea92a3",
                "test_SubmitScoreCard_InvalidSignature()": "90f28212",
                "test_SubmitScoreCard_ScoreTooHigh()": "01c3c59f",
                "test_SubmitScoreCard_UpdateExisting()": "14d6bb7f",
                "test_WithdrawFees()": "0fd65e12",
                "user()": "4f8632ba"
              }
            }
          },
          "version": "0.8.23",
          "build_id": "53242a4a96b7443a",
          "profile": "default"
        }
      ]
    }
  },
  "build_infos": [
    {
      "id": "53242a4a96b7443a",
      "source_id_to_path": {
        "0": "lib/forge-std/src/Base.sol",
        "1": "lib/forge-std/src/Script.sol",
        "2": "lib/forge-std/src/StdAssertions.sol",
        "3": "lib/forge-std/src/StdChains.sol",
        "4": "lib/forge-std/src/StdCheats.sol",
        "5": "lib/forge-std/src/StdError.sol",
        "6": "lib/forge-std/src/StdInvariant.sol",
        "7": "lib/forge-std/src/StdJson.sol",
        "8": "lib/forge-std/src/StdMath.sol",
        "9": "lib/forge-std/src/StdStorage.sol",
        "10": "lib/forge-std/src/StdStyle.sol",
        "11": "lib/forge-std/src/StdToml.sol",
        "12": "lib/forge-std/src/StdUtils.sol",
        "13": "lib/forge-std/src/Test.sol",
        "14": "lib/forge-std/src/Vm.sol",
        "15": "lib/forge-std/src/console.sol",
        "16": "lib/forge-std/src/console2.sol",
        "17": "lib/forge-std/src/interfaces/IERC165.sol",
        "18": "lib/forge-std/src/interfaces/IERC20.sol",
        "19": "lib/forge-std/src/interfaces/IERC721.sol",
        "20": "lib/forge-std/src/interfaces/IMulticall3.sol",
        "21": "lib/forge-std/src/mocks/MockERC20.sol",
        "22": "lib/forge-std/src/mocks/MockERC721.sol",
        "23": "lib/forge-std/src/safeconsole.sol",
        "24": "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "25": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "26": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "27": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "28": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "29": "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "30": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "31": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol",
        "32": "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol",
        "33": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "34": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "35": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "36": "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "37": "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "38": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "39": "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "40": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "41": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "42": "lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
        "43": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "44": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "45": "script/Counter.s.sol",
        "46": "script/DeployScoreCheckerV2.s.sol",
        "47": "script/DeployUpgradeable.s.sol",
        "48": "script/UpgradeContract.s.sol",
        "49": "script/UpgradeToV2.s.sol",
        "50": "src/Counter.sol",
        "51": "src/ScoreCheckerUpgradeable.sol",
        "52": "src/ScoreCheckerUpgradeableV2.sol",
        "53": "test/CompileTest.t.sol",
        "54": "test/Counter.t.sol",
        "55": "test/ScoreChecker.t.sol",
        "56": "test/ScoreCheckerEIP712.t.sol",
        "57": "test/ScoreCheckerV2.t.sol"
      },
      "language": "Solidity"
    }
  ]
}
